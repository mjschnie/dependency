package simtk.openmm;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.PointerByReference;
import java.nio.DoubleBuffer;
import java.nio.IntBuffer;
import simtk.openmm.OpenMM_Vec3.ByValue;
/**
 * JNA Wrapper for library <b>OpenMM</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface OpenMMLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "OpenMM";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(OpenMMLibrary.JNA_LIBRARY_NAME);
	public static final OpenMMLibrary INSTANCE = (OpenMMLibrary)Native.loadLibrary(OpenMMLibrary.JNA_LIBRARY_NAME, OpenMMLibrary.class);
	/** enum values */
	public static interface OpenMM_Boolean {
		public static final int OpenMM_False = 0;
		public static final int OpenMM_True = 1;
	};
	/** enum values */
	public static interface OpenMM_CustomGBForce_NonbondedMethod {
		public static final int OpenMM_CustomGBForce_NoCutoff = 0;
		public static final int OpenMM_CustomGBForce_CutoffNonPeriodic = 1;
		public static final int OpenMM_CustomGBForce_CutoffPeriodic = 2;
	};
	/** enum values */
	public static interface OpenMM_CustomGBForce_ComputationType {
		public static final int OpenMM_CustomGBForce_SingleParticle = 0;
		public static final int OpenMM_CustomGBForce_ParticlePair = 1;
		public static final int OpenMM_CustomGBForce_ParticlePairNoExclusions = 2;
	};
	/** enum values */
	public static interface OpenMM_CustomHbondForce_NonbondedMethod {
		public static final int OpenMM_CustomHbondForce_NoCutoff = 0;
		public static final int OpenMM_CustomHbondForce_CutoffNonPeriodic = 1;
		public static final int OpenMM_CustomHbondForce_CutoffPeriodic = 2;
	};
	/** enum values */
	public static interface OpenMM_CustomIntegrator_ComputationType {
		public static final int OpenMM_CustomIntegrator_ComputeGlobal = 0;
		public static final int OpenMM_CustomIntegrator_ComputePerDof = 1;
		public static final int OpenMM_CustomIntegrator_ComputeSum = 2;
		public static final int OpenMM_CustomIntegrator_ConstrainPositions = 3;
		public static final int OpenMM_CustomIntegrator_ConstrainVelocities = 4;
		public static final int OpenMM_CustomIntegrator_UpdateContextState = 5;
		public static final int OpenMM_CustomIntegrator_IfBlockStart = 6;
		public static final int OpenMM_CustomIntegrator_WhileBlockStart = 7;
		public static final int OpenMM_CustomIntegrator_BlockEnd = 8;
	};
	/** enum values */
	public static interface OpenMM_CustomManyParticleForce_NonbondedMethod {
		public static final int OpenMM_CustomManyParticleForce_NoCutoff = 0;
		public static final int OpenMM_CustomManyParticleForce_CutoffNonPeriodic = 1;
		public static final int OpenMM_CustomManyParticleForce_CutoffPeriodic = 2;
	};
	/** enum values */
	public static interface OpenMM_CustomManyParticleForce_PermutationMode {
		public static final int OpenMM_CustomManyParticleForce_SinglePermutation = 0;
		public static final int OpenMM_CustomManyParticleForce_UniqueCentralParticle = 1;
	};
	/** enum values */
	public static interface OpenMM_CustomNonbondedForce_NonbondedMethod {
		public static final int OpenMM_CustomNonbondedForce_NoCutoff = 0;
		public static final int OpenMM_CustomNonbondedForce_CutoffNonPeriodic = 1;
		public static final int OpenMM_CustomNonbondedForce_CutoffPeriodic = 2;
	};
	/** enum values */
	public static interface OpenMM_GayBerneForce_NonbondedMethod {
		public static final int OpenMM_GayBerneForce_NoCutoff = 0;
		public static final int OpenMM_GayBerneForce_CutoffNonPeriodic = 1;
		public static final int OpenMM_GayBerneForce_CutoffPeriodic = 2;
	};
	/** enum values */
	public static interface OpenMM_GBSAOBCForce_NonbondedMethod {
		public static final int OpenMM_GBSAOBCForce_NoCutoff = 0;
		public static final int OpenMM_GBSAOBCForce_CutoffNonPeriodic = 1;
		public static final int OpenMM_GBSAOBCForce_CutoffPeriodic = 2;
	};
	/** enum values */
	public static interface OpenMM_MonteCarloMembraneBarostat_XYMode {
		public static final int OpenMM_MonteCarloMembraneBarostat_XYIsotropic = 0;
		public static final int OpenMM_MonteCarloMembraneBarostat_XYAnisotropic = 1;
	};
	/** enum values */
	public static interface OpenMM_MonteCarloMembraneBarostat_ZMode {
		public static final int OpenMM_MonteCarloMembraneBarostat_ZFree = 0;
		public static final int OpenMM_MonteCarloMembraneBarostat_ZFixed = 1;
		public static final int OpenMM_MonteCarloMembraneBarostat_ConstantVolume = 2;
	};
	/** enum values */
	public static interface OpenMM_NonbondedForce_NonbondedMethod {
		public static final int OpenMM_NonbondedForce_NoCutoff = 0;
		public static final int OpenMM_NonbondedForce_CutoffNonPeriodic = 1;
		public static final int OpenMM_NonbondedForce_CutoffPeriodic = 2;
		public static final int OpenMM_NonbondedForce_Ewald = 3;
		public static final int OpenMM_NonbondedForce_PME = 4;
	};
	/** enum values */
	public static interface OpenMM_State_DataType {
		public static final int OpenMM_State_Positions = 1;
		public static final int OpenMM_State_Velocities = 2;
		public static final int OpenMM_State_Forces = 4;
		public static final int OpenMM_State_Energy = 8;
		public static final int OpenMM_State_Parameters = 16;
		public static final int OpenMM_State_ParameterDerivatives = 32;
	};
	/**
	 * OpenMM_Vec3<br>
	 * Original signature : <code>OpenMM_Vec3 OpenMM_Vec3_scale(const OpenMM_Vec3, double)</code>
	 */
	OpenMM_Vec3.ByValue OpenMM_Vec3_scale(OpenMM_Vec3.ByValue vec, double scale);
	/**
	 * OpenMM_Vec3Array<br>
	 * Original signature : <code>OpenMM_Vec3Array* OpenMM_Vec3Array_create(int)</code>
	 */
	PointerByReference OpenMM_Vec3Array_create(int size);
	/**
	 * Original signature : <code>void OpenMM_Vec3Array_destroy(OpenMM_Vec3Array*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Vec3Array_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Vec3Array_destroy(Pointer array);
	/** Original signature : <code>void OpenMM_Vec3Array_destroy(OpenMM_Vec3Array*)</code> */
	void OpenMM_Vec3Array_destroy(PointerByReference array);
	/**
	 * Original signature : <code>int OpenMM_Vec3Array_getSize(const OpenMM_Vec3Array*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Vec3Array_getSize(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_Vec3Array_getSize(Pointer array);
	/** Original signature : <code>int OpenMM_Vec3Array_getSize(const OpenMM_Vec3Array*)</code> */
	int OpenMM_Vec3Array_getSize(PointerByReference array);
	/**
	 * Original signature : <code>void OpenMM_Vec3Array_resize(OpenMM_Vec3Array*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Vec3Array_resize(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_Vec3Array_resize(Pointer array, int size);
	/** Original signature : <code>void OpenMM_Vec3Array_resize(OpenMM_Vec3Array*, int)</code> */
	void OpenMM_Vec3Array_resize(PointerByReference array, int size);
	/**
	 * Original signature : <code>void OpenMM_Vec3Array_append(OpenMM_Vec3Array*, const OpenMM_Vec3)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Vec3Array_append(com.sun.jna.ptr.PointerByReference, simtk.openmm.OpenMM_Vec3.ByValue)} instead
	 */
	@Deprecated 
	void OpenMM_Vec3Array_append(Pointer array, OpenMM_Vec3.ByValue vec);
	/** Original signature : <code>void OpenMM_Vec3Array_append(OpenMM_Vec3Array*, const OpenMM_Vec3)</code> */
	void OpenMM_Vec3Array_append(PointerByReference array, OpenMM_Vec3.ByValue vec);
	/**
	 * Original signature : <code>void OpenMM_Vec3Array_set(OpenMM_Vec3Array*, int, const OpenMM_Vec3)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Vec3Array_set(com.sun.jna.ptr.PointerByReference, int, simtk.openmm.OpenMM_Vec3.ByValue)} instead
	 */
	@Deprecated 
	void OpenMM_Vec3Array_set(Pointer array, int index, OpenMM_Vec3.ByValue vec);
	/** Original signature : <code>void OpenMM_Vec3Array_set(OpenMM_Vec3Array*, int, const OpenMM_Vec3)</code> */
	void OpenMM_Vec3Array_set(PointerByReference array, int index, OpenMM_Vec3.ByValue vec);
	/**
	 * Original signature : <code>OpenMM_Vec3* OpenMM_Vec3Array_get(const OpenMM_Vec3Array*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Vec3Array_get(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	OpenMM_Vec3 OpenMM_Vec3Array_get(Pointer array, int index);
	/** Original signature : <code>OpenMM_Vec3* OpenMM_Vec3Array_get(const OpenMM_Vec3Array*, int)</code> */
	OpenMM_Vec3 OpenMM_Vec3Array_get(PointerByReference array, int index);
	/**
	 * OpenMM_StringArray<br>
	 * Original signature : <code>OpenMM_StringArray* OpenMM_StringArray_create(int)</code>
	 */
	PointerByReference OpenMM_StringArray_create(int size);
	/**
	 * Original signature : <code>void OpenMM_StringArray_destroy(OpenMM_StringArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_StringArray_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_StringArray_destroy(Pointer array);
	/** Original signature : <code>void OpenMM_StringArray_destroy(OpenMM_StringArray*)</code> */
	void OpenMM_StringArray_destroy(PointerByReference array);
	/**
	 * Original signature : <code>int OpenMM_StringArray_getSize(const OpenMM_StringArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_StringArray_getSize(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_StringArray_getSize(Pointer array);
	/** Original signature : <code>int OpenMM_StringArray_getSize(const OpenMM_StringArray*)</code> */
	int OpenMM_StringArray_getSize(PointerByReference array);
	/**
	 * Original signature : <code>void OpenMM_StringArray_resize(OpenMM_StringArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_StringArray_resize(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_StringArray_resize(Pointer array, int size);
	/** Original signature : <code>void OpenMM_StringArray_resize(OpenMM_StringArray*, int)</code> */
	void OpenMM_StringArray_resize(PointerByReference array, int size);
	/**
	 * Original signature : <code>void OpenMM_StringArray_append(OpenMM_StringArray*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_StringArray_append(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_StringArray_append(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_StringArray_append(Pointer array, Pointer string);
	/** Original signature : <code>void OpenMM_StringArray_append(OpenMM_StringArray*, const char*)</code> */
	void OpenMM_StringArray_append(PointerByReference array, String string);
	/** Original signature : <code>void OpenMM_StringArray_append(OpenMM_StringArray*, const char*)</code> */
	void OpenMM_StringArray_append(PointerByReference array, Pointer string);
	/**
	 * Original signature : <code>void OpenMM_StringArray_set(OpenMM_StringArray*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_StringArray_set(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_StringArray_set(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_StringArray_set(Pointer array, int index, Pointer string);
	/** Original signature : <code>void OpenMM_StringArray_set(OpenMM_StringArray*, int, const char*)</code> */
	void OpenMM_StringArray_set(PointerByReference array, int index, String string);
	/** Original signature : <code>void OpenMM_StringArray_set(OpenMM_StringArray*, int, const char*)</code> */
	void OpenMM_StringArray_set(PointerByReference array, int index, Pointer string);
	/**
	 * Original signature : <code>char* OpenMM_StringArray_get(const OpenMM_StringArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_StringArray_get(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_StringArray_get(Pointer array, int index);
	/** Original signature : <code>char* OpenMM_StringArray_get(const OpenMM_StringArray*, int)</code> */
	Pointer OpenMM_StringArray_get(PointerByReference array, int index);
	/**
	 * OpenMM_BondArray<br>
	 * Original signature : <code>OpenMM_BondArray* OpenMM_BondArray_create(int)</code>
	 */
	PointerByReference OpenMM_BondArray_create(int size);
	/**
	 * Original signature : <code>void OpenMM_BondArray_destroy(OpenMM_BondArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BondArray_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_BondArray_destroy(Pointer array);
	/** Original signature : <code>void OpenMM_BondArray_destroy(OpenMM_BondArray*)</code> */
	void OpenMM_BondArray_destroy(PointerByReference array);
	/**
	 * Original signature : <code>int OpenMM_BondArray_getSize(const OpenMM_BondArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BondArray_getSize(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_BondArray_getSize(Pointer array);
	/** Original signature : <code>int OpenMM_BondArray_getSize(const OpenMM_BondArray*)</code> */
	int OpenMM_BondArray_getSize(PointerByReference array);
	/**
	 * Original signature : <code>void OpenMM_BondArray_resize(OpenMM_BondArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BondArray_resize(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_BondArray_resize(Pointer array, int size);
	/** Original signature : <code>void OpenMM_BondArray_resize(OpenMM_BondArray*, int)</code> */
	void OpenMM_BondArray_resize(PointerByReference array, int size);
	/**
	 * Original signature : <code>void OpenMM_BondArray_append(OpenMM_BondArray*, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BondArray_append(com.sun.jna.ptr.PointerByReference, int, int)} instead
	 */
	@Deprecated 
	void OpenMM_BondArray_append(Pointer array, int particle1, int particle2);
	/** Original signature : <code>void OpenMM_BondArray_append(OpenMM_BondArray*, int, int)</code> */
	void OpenMM_BondArray_append(PointerByReference array, int particle1, int particle2);
	/**
	 * Original signature : <code>void OpenMM_BondArray_set(OpenMM_BondArray*, int, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BondArray_set(com.sun.jna.ptr.PointerByReference, int, int, int)} instead
	 */
	@Deprecated 
	void OpenMM_BondArray_set(Pointer array, int index, int particle1, int particle2);
	/** Original signature : <code>void OpenMM_BondArray_set(OpenMM_BondArray*, int, int, int)</code> */
	void OpenMM_BondArray_set(PointerByReference array, int index, int particle1, int particle2);
	/**
	 * Original signature : <code>void OpenMM_BondArray_get(const OpenMM_BondArray*, int, int*, int*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_BondArray_get(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #OpenMM_BondArray_get(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void OpenMM_BondArray_get(Pointer array, int index, IntByReference particle1, IntByReference particle2);
	/** Original signature : <code>void OpenMM_BondArray_get(const OpenMM_BondArray*, int, int*, int*)</code> */
	void OpenMM_BondArray_get(PointerByReference array, int index, IntBuffer particle1, IntBuffer particle2);
	/** Original signature : <code>void OpenMM_BondArray_get(const OpenMM_BondArray*, int, int*, int*)</code> */
	void OpenMM_BondArray_get(PointerByReference array, int index, IntByReference particle1, IntByReference particle2);
	/**
	 * OpenMM_ParameterArray<br>
	 * Original signature : <code>int OpenMM_ParameterArray_getSize(const OpenMM_ParameterArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_ParameterArray_getSize(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_ParameterArray_getSize(Pointer array);
	/**
	 * OpenMM_ParameterArray<br>
	 * Original signature : <code>int OpenMM_ParameterArray_getSize(const OpenMM_ParameterArray*)</code>
	 */
	int OpenMM_ParameterArray_getSize(PointerByReference array);
	/**
	 * Original signature : <code>double OpenMM_ParameterArray_get(const OpenMM_ParameterArray*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_ParameterArray_get(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_ParameterArray_get(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	double OpenMM_ParameterArray_get(Pointer array, Pointer name);
	/** Original signature : <code>double OpenMM_ParameterArray_get(const OpenMM_ParameterArray*, const char*)</code> */
	double OpenMM_ParameterArray_get(PointerByReference array, String name);
	/** Original signature : <code>double OpenMM_ParameterArray_get(const OpenMM_ParameterArray*, const char*)</code> */
	double OpenMM_ParameterArray_get(PointerByReference array, Pointer name);
	/**
	 * OpenMM_PropertyArray<br>
	 * Original signature : <code>int OpenMM_PropertyArray_getSize(const OpenMM_PropertyArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_PropertyArray_getSize(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_PropertyArray_getSize(Pointer array);
	/**
	 * OpenMM_PropertyArray<br>
	 * Original signature : <code>int OpenMM_PropertyArray_getSize(const OpenMM_PropertyArray*)</code>
	 */
	int OpenMM_PropertyArray_getSize(PointerByReference array);
	/**
	 * Original signature : <code>char* OpenMM_PropertyArray_get(const OpenMM_PropertyArray*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_PropertyArray_get(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_PropertyArray_get(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer OpenMM_PropertyArray_get(Pointer array, Pointer name);
	/** Original signature : <code>char* OpenMM_PropertyArray_get(const OpenMM_PropertyArray*, const char*)</code> */
	Pointer OpenMM_PropertyArray_get(PointerByReference array, String name);
	/** Original signature : <code>char* OpenMM_PropertyArray_get(const OpenMM_PropertyArray*, const char*)</code> */
	Pointer OpenMM_PropertyArray_get(PointerByReference array, Pointer name);
	/**
	 * OpenMM_DoubleArray<br>
	 * Original signature : <code>OpenMM_DoubleArray* OpenMM_DoubleArray_create(int)</code>
	 */
	PointerByReference OpenMM_DoubleArray_create(int size);
	/**
	 * Original signature : <code>void OpenMM_DoubleArray_destroy(OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_DoubleArray_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_DoubleArray_destroy(Pointer array);
	/** Original signature : <code>void OpenMM_DoubleArray_destroy(OpenMM_DoubleArray*)</code> */
	void OpenMM_DoubleArray_destroy(PointerByReference array);
	/**
	 * Original signature : <code>int OpenMM_DoubleArray_getSize(const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_DoubleArray_getSize(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_DoubleArray_getSize(Pointer array);
	/** Original signature : <code>int OpenMM_DoubleArray_getSize(const OpenMM_DoubleArray*)</code> */
	int OpenMM_DoubleArray_getSize(PointerByReference array);
	/**
	 * Original signature : <code>void OpenMM_DoubleArray_resize(OpenMM_DoubleArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_DoubleArray_resize(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_DoubleArray_resize(Pointer array, int size);
	/** Original signature : <code>void OpenMM_DoubleArray_resize(OpenMM_DoubleArray*, int)</code> */
	void OpenMM_DoubleArray_resize(PointerByReference array, int size);
	/**
	 * Original signature : <code>void OpenMM_DoubleArray_append(OpenMM_DoubleArray*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_DoubleArray_append(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_DoubleArray_append(Pointer array, double value);
	/** Original signature : <code>void OpenMM_DoubleArray_append(OpenMM_DoubleArray*, double)</code> */
	void OpenMM_DoubleArray_append(PointerByReference array, double value);
	/**
	 * Original signature : <code>void OpenMM_DoubleArray_set(OpenMM_DoubleArray*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_DoubleArray_set(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_DoubleArray_set(Pointer array, int index, double value);
	/** Original signature : <code>void OpenMM_DoubleArray_set(OpenMM_DoubleArray*, int, double)</code> */
	void OpenMM_DoubleArray_set(PointerByReference array, int index, double value);
	/**
	 * Original signature : <code>double OpenMM_DoubleArray_get(const OpenMM_DoubleArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_DoubleArray_get(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_DoubleArray_get(Pointer array, int index);
	/** Original signature : <code>double OpenMM_DoubleArray_get(const OpenMM_DoubleArray*, int)</code> */
	double OpenMM_DoubleArray_get(PointerByReference array, int index);
	/**
	 * OpenMM_IntArray<br>
	 * Original signature : <code>OpenMM_IntArray* OpenMM_IntArray_create(int)</code>
	 */
	PointerByReference OpenMM_IntArray_create(int size);
	/**
	 * Original signature : <code>void OpenMM_IntArray_destroy(OpenMM_IntArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_IntArray_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_IntArray_destroy(Pointer array);
	/** Original signature : <code>void OpenMM_IntArray_destroy(OpenMM_IntArray*)</code> */
	void OpenMM_IntArray_destroy(PointerByReference array);
	/**
	 * Original signature : <code>int OpenMM_IntArray_getSize(const OpenMM_IntArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_IntArray_getSize(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_IntArray_getSize(Pointer array);
	/** Original signature : <code>int OpenMM_IntArray_getSize(const OpenMM_IntArray*)</code> */
	int OpenMM_IntArray_getSize(PointerByReference array);
	/**
	 * Original signature : <code>void OpenMM_IntArray_resize(OpenMM_IntArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_IntArray_resize(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_IntArray_resize(Pointer array, int size);
	/** Original signature : <code>void OpenMM_IntArray_resize(OpenMM_IntArray*, int)</code> */
	void OpenMM_IntArray_resize(PointerByReference array, int size);
	/**
	 * Original signature : <code>void OpenMM_IntArray_append(OpenMM_IntArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_IntArray_append(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_IntArray_append(Pointer array, int value);
	/** Original signature : <code>void OpenMM_IntArray_append(OpenMM_IntArray*, int)</code> */
	void OpenMM_IntArray_append(PointerByReference array, int value);
	/**
	 * Original signature : <code>void OpenMM_IntArray_set(OpenMM_IntArray*, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_IntArray_set(com.sun.jna.ptr.PointerByReference, int, int)} instead
	 */
	@Deprecated 
	void OpenMM_IntArray_set(Pointer array, int index, int value);
	/** Original signature : <code>void OpenMM_IntArray_set(OpenMM_IntArray*, int, int)</code> */
	void OpenMM_IntArray_set(PointerByReference array, int index, int value);
	/**
	 * Original signature : <code>int OpenMM_IntArray_get(const OpenMM_IntArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_IntArray_get(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int OpenMM_IntArray_get(Pointer array, int index);
	/** Original signature : <code>int OpenMM_IntArray_get(const OpenMM_IntArray*, int)</code> */
	int OpenMM_IntArray_get(PointerByReference array, int index);
	/**
	 * OpenMM_IntSet<br>
	 * Original signature : <code>OpenMM_IntSet* OpenMM_IntSet_create()</code>
	 */
	PointerByReference OpenMM_IntSet_create();
	/**
	 * Original signature : <code>void OpenMM_IntSet_destroy(OpenMM_IntSet*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_IntSet_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_IntSet_destroy(Pointer set);
	/** Original signature : <code>void OpenMM_IntSet_destroy(OpenMM_IntSet*)</code> */
	void OpenMM_IntSet_destroy(PointerByReference set);
	/**
	 * Original signature : <code>int OpenMM_IntSet_getSize(const OpenMM_IntSet*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_IntSet_getSize(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_IntSet_getSize(Pointer set);
	/** Original signature : <code>int OpenMM_IntSet_getSize(const OpenMM_IntSet*)</code> */
	int OpenMM_IntSet_getSize(PointerByReference set);
	/**
	 * Original signature : <code>void OpenMM_IntSet_insert(OpenMM_IntSet*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_IntSet_insert(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_IntSet_insert(Pointer set, int value);
	/** Original signature : <code>void OpenMM_IntSet_insert(OpenMM_IntSet*, int)</code> */
	void OpenMM_IntSet_insert(PointerByReference set, int value);
	/**
	 * These methods need to be handled specially, since their C++ APIs cannot be directly translated to C.<br>
	 * Unlike the C++ versions, the return value is allocated on the heap, and you must delete it yourself.<br>
	 * Original signature : <code>OpenMM_State* OpenMM_Context_getState(const OpenMM_Context*, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_getState(com.sun.jna.ptr.PointerByReference, int, int)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Context_getState(Pointer target, int types, int enforcePeriodicBox);
	/**
	 * These methods need to be handled specially, since their C++ APIs cannot be directly translated to C.<br>
	 * Unlike the C++ versions, the return value is allocated on the heap, and you must delete it yourself.<br>
	 * Original signature : <code>OpenMM_State* OpenMM_Context_getState(const OpenMM_Context*, int, int)</code>
	 */
	PointerByReference OpenMM_Context_getState(PointerByReference target, int types, int enforcePeriodicBox);
	/**
	 * Original signature : <code>OpenMM_State* OpenMM_Context_getState_2(const OpenMM_Context*, int, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_getState_2(com.sun.jna.ptr.PointerByReference, int, int, int)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Context_getState_2(Pointer target, int types, int enforcePeriodicBox, int groups);
	/** Original signature : <code>OpenMM_State* OpenMM_Context_getState_2(const OpenMM_Context*, int, int, int)</code> */
	PointerByReference OpenMM_Context_getState_2(PointerByReference target, int types, int enforcePeriodicBox, int groups);
	/**
	 * Original signature : <code>OpenMM_StringArray* OpenMM_Platform_loadPluginsFromDirectory(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Platform_loadPluginsFromDirectory(java.lang.String)} and {@link #OpenMM_Platform_loadPluginsFromDirectory(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Platform_loadPluginsFromDirectory(Pointer directory);
	/** Original signature : <code>OpenMM_StringArray* OpenMM_Platform_loadPluginsFromDirectory(const char*)</code> */
	PointerByReference OpenMM_Platform_loadPluginsFromDirectory(String directory);
	/** Original signature : <code>OpenMM_StringArray* OpenMM_Platform_getPluginLoadFailures()</code> */
	PointerByReference OpenMM_Platform_getPluginLoadFailures();
	/**
	 * Original signature : <code>char* OpenMM_XmlSerializer_serializeSystem(const OpenMM_System*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_XmlSerializer_serializeSystem(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_XmlSerializer_serializeSystem(Pointer system);
	/** Original signature : <code>char* OpenMM_XmlSerializer_serializeSystem(const OpenMM_System*)</code> */
	Pointer OpenMM_XmlSerializer_serializeSystem(PointerByReference system);
	/**
	 * Original signature : <code>char* OpenMM_XmlSerializer_serializeState(const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_XmlSerializer_serializeState(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_XmlSerializer_serializeState(Pointer state);
	/** Original signature : <code>char* OpenMM_XmlSerializer_serializeState(const OpenMM_State*)</code> */
	Pointer OpenMM_XmlSerializer_serializeState(PointerByReference state);
	/**
	 * Original signature : <code>char* OpenMM_XmlSerializer_serializeIntegrator(const OpenMM_Integrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_XmlSerializer_serializeIntegrator(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_XmlSerializer_serializeIntegrator(Pointer integrator);
	/** Original signature : <code>char* OpenMM_XmlSerializer_serializeIntegrator(const OpenMM_Integrator*)</code> */
	Pointer OpenMM_XmlSerializer_serializeIntegrator(PointerByReference integrator);
	/**
	 * Original signature : <code>OpenMM_System* OpenMM_XmlSerializer_deserializeSystem(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_XmlSerializer_deserializeSystem(java.lang.String)} and {@link #OpenMM_XmlSerializer_deserializeSystem(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_XmlSerializer_deserializeSystem(Pointer xml);
	/** Original signature : <code>OpenMM_System* OpenMM_XmlSerializer_deserializeSystem(const char*)</code> */
	PointerByReference OpenMM_XmlSerializer_deserializeSystem(String xml);
	/**
	 * Original signature : <code>OpenMM_State* OpenMM_XmlSerializer_deserializeState(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_XmlSerializer_deserializeState(java.lang.String)} and {@link #OpenMM_XmlSerializer_deserializeState(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_XmlSerializer_deserializeState(Pointer xml);
	/** Original signature : <code>OpenMM_State* OpenMM_XmlSerializer_deserializeState(const char*)</code> */
	PointerByReference OpenMM_XmlSerializer_deserializeState(String xml);
	/**
	 * Original signature : <code>OpenMM_Integrator* OpenMM_XmlSerializer_deserializeIntegrator(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_XmlSerializer_deserializeIntegrator(java.lang.String)} and {@link #OpenMM_XmlSerializer_deserializeIntegrator(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_XmlSerializer_deserializeIntegrator(Pointer xml);
	/** Original signature : <code>OpenMM_Integrator* OpenMM_XmlSerializer_deserializeIntegrator(const char*)</code> */
	PointerByReference OpenMM_XmlSerializer_deserializeIntegrator(String xml);
	/**
	 * Force<br>
	 * Original signature : <code>void OpenMM_Force_destroy(OpenMM_Force*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Force_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Force_destroy(Pointer target);
	/**
	 * Force<br>
	 * Original signature : <code>void OpenMM_Force_destroy(OpenMM_Force*)</code>
	 */
	void OpenMM_Force_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_Force_getForceGroup(const OpenMM_Force*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Force_getForceGroup(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_Force_getForceGroup(Pointer target);
	/** Original signature : <code>int OpenMM_Force_getForceGroup(const OpenMM_Force*)</code> */
	int OpenMM_Force_getForceGroup(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Force_setForceGroup(OpenMM_Force*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Force_setForceGroup(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_Force_setForceGroup(Pointer target, int group);
	/** Original signature : <code>void OpenMM_Force_setForceGroup(OpenMM_Force*, int)</code> */
	void OpenMM_Force_setForceGroup(PointerByReference target, int group);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_Force_usesPeriodicBoundaryConditions(const OpenMM_Force*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Force_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_Force_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_Force_usesPeriodicBoundaryConditions(const OpenMM_Force*)</code> */
	int OpenMM_Force_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * AndersenThermostat<br>
	 * Original signature : <code>OpenMM_AndersenThermostat* OpenMM_AndersenThermostat_create(double, double)</code>
	 */
	PointerByReference OpenMM_AndersenThermostat_create(double defaultTemperature, double defaultCollisionFrequency);
	/**
	 * Original signature : <code>void OpenMM_AndersenThermostat_destroy(OpenMM_AndersenThermostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_AndersenThermostat_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_AndersenThermostat_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_AndersenThermostat_destroy(OpenMM_AndersenThermostat*)</code> */
	void OpenMM_AndersenThermostat_destroy(PointerByReference target);
	/** Original signature : <code>char* OpenMM_AndersenThermostat_Temperature()</code> */
	Pointer OpenMM_AndersenThermostat_Temperature();
	/** Original signature : <code>char* OpenMM_AndersenThermostat_CollisionFrequency()</code> */
	Pointer OpenMM_AndersenThermostat_CollisionFrequency();
	/**
	 * Original signature : <code>double OpenMM_AndersenThermostat_getDefaultTemperature(const OpenMM_AndersenThermostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_AndersenThermostat_getDefaultTemperature(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_AndersenThermostat_getDefaultTemperature(Pointer target);
	/** Original signature : <code>double OpenMM_AndersenThermostat_getDefaultTemperature(const OpenMM_AndersenThermostat*)</code> */
	double OpenMM_AndersenThermostat_getDefaultTemperature(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_AndersenThermostat_setDefaultTemperature(OpenMM_AndersenThermostat*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_AndersenThermostat_setDefaultTemperature(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_AndersenThermostat_setDefaultTemperature(Pointer target, double temperature);
	/** Original signature : <code>void OpenMM_AndersenThermostat_setDefaultTemperature(OpenMM_AndersenThermostat*, double)</code> */
	void OpenMM_AndersenThermostat_setDefaultTemperature(PointerByReference target, double temperature);
	/**
	 * Original signature : <code>double OpenMM_AndersenThermostat_getDefaultCollisionFrequency(const OpenMM_AndersenThermostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_AndersenThermostat_getDefaultCollisionFrequency(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_AndersenThermostat_getDefaultCollisionFrequency(Pointer target);
	/** Original signature : <code>double OpenMM_AndersenThermostat_getDefaultCollisionFrequency(const OpenMM_AndersenThermostat*)</code> */
	double OpenMM_AndersenThermostat_getDefaultCollisionFrequency(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_AndersenThermostat_setDefaultCollisionFrequency(OpenMM_AndersenThermostat*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_AndersenThermostat_setDefaultCollisionFrequency(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_AndersenThermostat_setDefaultCollisionFrequency(Pointer target, double frequency);
	/** Original signature : <code>void OpenMM_AndersenThermostat_setDefaultCollisionFrequency(OpenMM_AndersenThermostat*, double)</code> */
	void OpenMM_AndersenThermostat_setDefaultCollisionFrequency(PointerByReference target, double frequency);
	/**
	 * Original signature : <code>int OpenMM_AndersenThermostat_getRandomNumberSeed(const OpenMM_AndersenThermostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_AndersenThermostat_getRandomNumberSeed(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_AndersenThermostat_getRandomNumberSeed(Pointer target);
	/** Original signature : <code>int OpenMM_AndersenThermostat_getRandomNumberSeed(const OpenMM_AndersenThermostat*)</code> */
	int OpenMM_AndersenThermostat_getRandomNumberSeed(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_AndersenThermostat_setRandomNumberSeed(OpenMM_AndersenThermostat*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_AndersenThermostat_setRandomNumberSeed(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_AndersenThermostat_setRandomNumberSeed(Pointer target, int seed);
	/** Original signature : <code>void OpenMM_AndersenThermostat_setRandomNumberSeed(OpenMM_AndersenThermostat*, int)</code> */
	void OpenMM_AndersenThermostat_setRandomNumberSeed(PointerByReference target, int seed);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_AndersenThermostat_usesPeriodicBoundaryConditions(const OpenMM_AndersenThermostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_AndersenThermostat_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_AndersenThermostat_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_AndersenThermostat_usesPeriodicBoundaryConditions(const OpenMM_AndersenThermostat*)</code> */
	int OpenMM_AndersenThermostat_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * Integrator<br>
	 * Original signature : <code>void OpenMM_Integrator_destroy(OpenMM_Integrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Integrator_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Integrator_destroy(Pointer target);
	/**
	 * Integrator<br>
	 * Original signature : <code>void OpenMM_Integrator_destroy(OpenMM_Integrator*)</code>
	 */
	void OpenMM_Integrator_destroy(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_Integrator_getStepSize(const OpenMM_Integrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Integrator_getStepSize(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_Integrator_getStepSize(Pointer target);
	/** Original signature : <code>double OpenMM_Integrator_getStepSize(const OpenMM_Integrator*)</code> */
	double OpenMM_Integrator_getStepSize(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Integrator_setStepSize(OpenMM_Integrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Integrator_setStepSize(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_Integrator_setStepSize(Pointer target, double size);
	/** Original signature : <code>void OpenMM_Integrator_setStepSize(OpenMM_Integrator*, double)</code> */
	void OpenMM_Integrator_setStepSize(PointerByReference target, double size);
	/**
	 * Original signature : <code>double OpenMM_Integrator_getConstraintTolerance(const OpenMM_Integrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Integrator_getConstraintTolerance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_Integrator_getConstraintTolerance(Pointer target);
	/** Original signature : <code>double OpenMM_Integrator_getConstraintTolerance(const OpenMM_Integrator*)</code> */
	double OpenMM_Integrator_getConstraintTolerance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Integrator_setConstraintTolerance(OpenMM_Integrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Integrator_setConstraintTolerance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_Integrator_setConstraintTolerance(Pointer target, double tol);
	/** Original signature : <code>void OpenMM_Integrator_setConstraintTolerance(OpenMM_Integrator*, double)</code> */
	void OpenMM_Integrator_setConstraintTolerance(PointerByReference target, double tol);
	/**
	 * Original signature : <code>void OpenMM_Integrator_step(OpenMM_Integrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Integrator_step(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_Integrator_step(Pointer target, int steps);
	/** Original signature : <code>void OpenMM_Integrator_step(OpenMM_Integrator*, int)</code> */
	void OpenMM_Integrator_step(PointerByReference target, int steps);
	/**
	 * BrownianIntegrator<br>
	 * Original signature : <code>OpenMM_BrownianIntegrator* OpenMM_BrownianIntegrator_create(double, double, double)</code>
	 */
	PointerByReference OpenMM_BrownianIntegrator_create(double temperature, double frictionCoeff, double stepSize);
	/**
	 * Original signature : <code>void OpenMM_BrownianIntegrator_destroy(OpenMM_BrownianIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BrownianIntegrator_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_BrownianIntegrator_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_BrownianIntegrator_destroy(OpenMM_BrownianIntegrator*)</code> */
	void OpenMM_BrownianIntegrator_destroy(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_BrownianIntegrator_getTemperature(const OpenMM_BrownianIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BrownianIntegrator_getTemperature(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_BrownianIntegrator_getTemperature(Pointer target);
	/** Original signature : <code>double OpenMM_BrownianIntegrator_getTemperature(const OpenMM_BrownianIntegrator*)</code> */
	double OpenMM_BrownianIntegrator_getTemperature(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_BrownianIntegrator_setTemperature(OpenMM_BrownianIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BrownianIntegrator_setTemperature(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_BrownianIntegrator_setTemperature(Pointer target, double temp);
	/** Original signature : <code>void OpenMM_BrownianIntegrator_setTemperature(OpenMM_BrownianIntegrator*, double)</code> */
	void OpenMM_BrownianIntegrator_setTemperature(PointerByReference target, double temp);
	/**
	 * Original signature : <code>double OpenMM_BrownianIntegrator_getFriction(const OpenMM_BrownianIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BrownianIntegrator_getFriction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_BrownianIntegrator_getFriction(Pointer target);
	/** Original signature : <code>double OpenMM_BrownianIntegrator_getFriction(const OpenMM_BrownianIntegrator*)</code> */
	double OpenMM_BrownianIntegrator_getFriction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_BrownianIntegrator_setFriction(OpenMM_BrownianIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BrownianIntegrator_setFriction(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_BrownianIntegrator_setFriction(Pointer target, double coeff);
	/** Original signature : <code>void OpenMM_BrownianIntegrator_setFriction(OpenMM_BrownianIntegrator*, double)</code> */
	void OpenMM_BrownianIntegrator_setFriction(PointerByReference target, double coeff);
	/**
	 * Original signature : <code>int OpenMM_BrownianIntegrator_getRandomNumberSeed(const OpenMM_BrownianIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BrownianIntegrator_getRandomNumberSeed(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_BrownianIntegrator_getRandomNumberSeed(Pointer target);
	/** Original signature : <code>int OpenMM_BrownianIntegrator_getRandomNumberSeed(const OpenMM_BrownianIntegrator*)</code> */
	int OpenMM_BrownianIntegrator_getRandomNumberSeed(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_BrownianIntegrator_setRandomNumberSeed(OpenMM_BrownianIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BrownianIntegrator_setRandomNumberSeed(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_BrownianIntegrator_setRandomNumberSeed(Pointer target, int seed);
	/** Original signature : <code>void OpenMM_BrownianIntegrator_setRandomNumberSeed(OpenMM_BrownianIntegrator*, int)</code> */
	void OpenMM_BrownianIntegrator_setRandomNumberSeed(PointerByReference target, int seed);
	/**
	 * Original signature : <code>void OpenMM_BrownianIntegrator_step(OpenMM_BrownianIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_BrownianIntegrator_step(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_BrownianIntegrator_step(Pointer target, int steps);
	/** Original signature : <code>void OpenMM_BrownianIntegrator_step(OpenMM_BrownianIntegrator*, int)</code> */
	void OpenMM_BrownianIntegrator_step(PointerByReference target, int steps);
	/**
	 * CMAPTorsionForce<br>
	 * Original signature : <code>OpenMM_CMAPTorsionForce* OpenMM_CMAPTorsionForce_create()</code>
	 */
	PointerByReference OpenMM_CMAPTorsionForce_create();
	/**
	 * Original signature : <code>void OpenMM_CMAPTorsionForce_destroy(OpenMM_CMAPTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMAPTorsionForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CMAPTorsionForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CMAPTorsionForce_destroy(OpenMM_CMAPTorsionForce*)</code> */
	void OpenMM_CMAPTorsionForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CMAPTorsionForce_getNumMaps(const OpenMM_CMAPTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMAPTorsionForce_getNumMaps(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CMAPTorsionForce_getNumMaps(Pointer target);
	/** Original signature : <code>int OpenMM_CMAPTorsionForce_getNumMaps(const OpenMM_CMAPTorsionForce*)</code> */
	int OpenMM_CMAPTorsionForce_getNumMaps(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CMAPTorsionForce_getNumTorsions(const OpenMM_CMAPTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMAPTorsionForce_getNumTorsions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CMAPTorsionForce_getNumTorsions(Pointer target);
	/** Original signature : <code>int OpenMM_CMAPTorsionForce_getNumTorsions(const OpenMM_CMAPTorsionForce*)</code> */
	int OpenMM_CMAPTorsionForce_getNumTorsions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CMAPTorsionForce_addMap(OpenMM_CMAPTorsionForce*, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMAPTorsionForce_addMap(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CMAPTorsionForce_addMap(Pointer target, int size, Pointer energy);
	/** Original signature : <code>int OpenMM_CMAPTorsionForce_addMap(OpenMM_CMAPTorsionForce*, int, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CMAPTorsionForce_addMap(PointerByReference target, int size, PointerByReference energy);
	/**
	 * Original signature : <code>void OpenMM_CMAPTorsionForce_getMapParameters(const OpenMM_CMAPTorsionForce*, int, int*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CMAPTorsionForce_getMapParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CMAPTorsionForce_getMapParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CMAPTorsionForce_getMapParameters(Pointer target, int index, IntByReference size, Pointer energy);
	/** Original signature : <code>void OpenMM_CMAPTorsionForce_getMapParameters(const OpenMM_CMAPTorsionForce*, int, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CMAPTorsionForce_getMapParameters(PointerByReference target, int index, IntBuffer size, PointerByReference energy);
	/** Original signature : <code>void OpenMM_CMAPTorsionForce_getMapParameters(const OpenMM_CMAPTorsionForce*, int, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CMAPTorsionForce_getMapParameters(PointerByReference target, int index, IntByReference size, PointerByReference energy);
	/**
	 * Original signature : <code>void OpenMM_CMAPTorsionForce_setMapParameters(OpenMM_CMAPTorsionForce*, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMAPTorsionForce_setMapParameters(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CMAPTorsionForce_setMapParameters(Pointer target, int index, int size, Pointer energy);
	/** Original signature : <code>void OpenMM_CMAPTorsionForce_setMapParameters(OpenMM_CMAPTorsionForce*, int, int, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CMAPTorsionForce_setMapParameters(PointerByReference target, int index, int size, PointerByReference energy);
	/**
	 * Original signature : <code>int OpenMM_CMAPTorsionForce_addTorsion(OpenMM_CMAPTorsionForce*, int, int, int, int, int, int, int, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMAPTorsionForce_addTorsion(com.sun.jna.ptr.PointerByReference, int, int, int, int, int, int, int, int, int)} instead
	 */
	@Deprecated 
	int OpenMM_CMAPTorsionForce_addTorsion(Pointer target, int map, int a1, int a2, int a3, int a4, int b1, int b2, int b3, int b4);
	/** Original signature : <code>int OpenMM_CMAPTorsionForce_addTorsion(OpenMM_CMAPTorsionForce*, int, int, int, int, int, int, int, int, int)</code> */
	int OpenMM_CMAPTorsionForce_addTorsion(PointerByReference target, int map, int a1, int a2, int a3, int a4, int b1, int b2, int b3, int b4);
	/**
	 * Original signature : <code>void OpenMM_CMAPTorsionForce_getTorsionParameters(const OpenMM_CMAPTorsionForce*, int, int*, int*, int*, int*, int*, int*, int*, int*, int*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CMAPTorsionForce_getTorsionParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #OpenMM_CMAPTorsionForce_getTorsionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CMAPTorsionForce_getTorsionParameters(Pointer target, int index, IntByReference map, IntByReference a1, IntByReference a2, IntByReference a3, IntByReference a4, IntByReference b1, IntByReference b2, IntByReference b3, IntByReference b4);
	/** Original signature : <code>void OpenMM_CMAPTorsionForce_getTorsionParameters(const OpenMM_CMAPTorsionForce*, int, int*, int*, int*, int*, int*, int*, int*, int*, int*)</code> */
	void OpenMM_CMAPTorsionForce_getTorsionParameters(PointerByReference target, int index, IntBuffer map, IntBuffer a1, IntBuffer a2, IntBuffer a3, IntBuffer a4, IntBuffer b1, IntBuffer b2, IntBuffer b3, IntBuffer b4);
	/** Original signature : <code>void OpenMM_CMAPTorsionForce_getTorsionParameters(const OpenMM_CMAPTorsionForce*, int, int*, int*, int*, int*, int*, int*, int*, int*, int*)</code> */
	void OpenMM_CMAPTorsionForce_getTorsionParameters(PointerByReference target, int index, IntByReference map, IntByReference a1, IntByReference a2, IntByReference a3, IntByReference a4, IntByReference b1, IntByReference b2, IntByReference b3, IntByReference b4);
	/**
	 * Original signature : <code>void OpenMM_CMAPTorsionForce_setTorsionParameters(OpenMM_CMAPTorsionForce*, int, int, int, int, int, int, int, int, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMAPTorsionForce_setTorsionParameters(com.sun.jna.ptr.PointerByReference, int, int, int, int, int, int, int, int, int, int)} instead
	 */
	@Deprecated 
	void OpenMM_CMAPTorsionForce_setTorsionParameters(Pointer target, int index, int map, int a1, int a2, int a3, int a4, int b1, int b2, int b3, int b4);
	/** Original signature : <code>void OpenMM_CMAPTorsionForce_setTorsionParameters(OpenMM_CMAPTorsionForce*, int, int, int, int, int, int, int, int, int, int)</code> */
	void OpenMM_CMAPTorsionForce_setTorsionParameters(PointerByReference target, int index, int map, int a1, int a2, int a3, int a4, int b1, int b2, int b3, int b4);
	/**
	 * Original signature : <code>void OpenMM_CMAPTorsionForce_updateParametersInContext(OpenMM_CMAPTorsionForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMAPTorsionForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CMAPTorsionForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_CMAPTorsionForce_updateParametersInContext(OpenMM_CMAPTorsionForce*, OpenMM_Context*)</code> */
	void OpenMM_CMAPTorsionForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>void OpenMM_CMAPTorsionForce_setUsesPeriodicBoundaryConditions(OpenMM_CMAPTorsionForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMAPTorsionForce_setUsesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CMAPTorsionForce_setUsesPeriodicBoundaryConditions(Pointer target, int periodic);
	/** Original signature : <code>void OpenMM_CMAPTorsionForce_setUsesPeriodicBoundaryConditions(OpenMM_CMAPTorsionForce*, OpenMM_Boolean)</code> */
	void OpenMM_CMAPTorsionForce_setUsesPeriodicBoundaryConditions(PointerByReference target, int periodic);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CMAPTorsionForce_usesPeriodicBoundaryConditions(const OpenMM_CMAPTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMAPTorsionForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CMAPTorsionForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CMAPTorsionForce_usesPeriodicBoundaryConditions(const OpenMM_CMAPTorsionForce*)</code> */
	int OpenMM_CMAPTorsionForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * CMMotionRemover<br>
	 * Original signature : <code>OpenMM_CMMotionRemover* OpenMM_CMMotionRemover_create(int)</code>
	 */
	PointerByReference OpenMM_CMMotionRemover_create(int frequency);
	/**
	 * Original signature : <code>void OpenMM_CMMotionRemover_destroy(OpenMM_CMMotionRemover*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMMotionRemover_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CMMotionRemover_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CMMotionRemover_destroy(OpenMM_CMMotionRemover*)</code> */
	void OpenMM_CMMotionRemover_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CMMotionRemover_getFrequency(const OpenMM_CMMotionRemover*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMMotionRemover_getFrequency(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CMMotionRemover_getFrequency(Pointer target);
	/** Original signature : <code>int OpenMM_CMMotionRemover_getFrequency(const OpenMM_CMMotionRemover*)</code> */
	int OpenMM_CMMotionRemover_getFrequency(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CMMotionRemover_setFrequency(OpenMM_CMMotionRemover*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMMotionRemover_setFrequency(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CMMotionRemover_setFrequency(Pointer target, int freq);
	/** Original signature : <code>void OpenMM_CMMotionRemover_setFrequency(OpenMM_CMMotionRemover*, int)</code> */
	void OpenMM_CMMotionRemover_setFrequency(PointerByReference target, int freq);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CMMotionRemover_usesPeriodicBoundaryConditions(const OpenMM_CMMotionRemover*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CMMotionRemover_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CMMotionRemover_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CMMotionRemover_usesPeriodicBoundaryConditions(const OpenMM_CMMotionRemover*)</code> */
	int OpenMM_CMMotionRemover_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * CompoundIntegrator<br>
	 * Original signature : <code>OpenMM_CompoundIntegrator* OpenMM_CompoundIntegrator_create()</code>
	 */
	PointerByReference OpenMM_CompoundIntegrator_create();
	/**
	 * Original signature : <code>void OpenMM_CompoundIntegrator_destroy(OpenMM_CompoundIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CompoundIntegrator_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CompoundIntegrator_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CompoundIntegrator_destroy(OpenMM_CompoundIntegrator*)</code> */
	void OpenMM_CompoundIntegrator_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CompoundIntegrator_getNumIntegrators(const OpenMM_CompoundIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CompoundIntegrator_getNumIntegrators(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CompoundIntegrator_getNumIntegrators(Pointer target);
	/** Original signature : <code>int OpenMM_CompoundIntegrator_getNumIntegrators(const OpenMM_CompoundIntegrator*)</code> */
	int OpenMM_CompoundIntegrator_getNumIntegrators(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CompoundIntegrator_addIntegrator(OpenMM_CompoundIntegrator*, OpenMM_Integrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CompoundIntegrator_addIntegrator(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CompoundIntegrator_addIntegrator(Pointer target, Pointer integrator);
	/** Original signature : <code>int OpenMM_CompoundIntegrator_addIntegrator(OpenMM_CompoundIntegrator*, OpenMM_Integrator*)</code> */
	int OpenMM_CompoundIntegrator_addIntegrator(PointerByReference target, PointerByReference integrator);
	/**
	 * Original signature : <code>OpenMM_Integrator* OpenMM_CompoundIntegrator_getIntegrator(OpenMM_CompoundIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CompoundIntegrator_getIntegrator(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CompoundIntegrator_getIntegrator(Pointer target, int index);
	/** Original signature : <code>OpenMM_Integrator* OpenMM_CompoundIntegrator_getIntegrator(OpenMM_CompoundIntegrator*, int)</code> */
	PointerByReference OpenMM_CompoundIntegrator_getIntegrator(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CompoundIntegrator_getCurrentIntegrator(const OpenMM_CompoundIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CompoundIntegrator_getCurrentIntegrator(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CompoundIntegrator_getCurrentIntegrator(Pointer target);
	/** Original signature : <code>int OpenMM_CompoundIntegrator_getCurrentIntegrator(const OpenMM_CompoundIntegrator*)</code> */
	int OpenMM_CompoundIntegrator_getCurrentIntegrator(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CompoundIntegrator_setCurrentIntegrator(OpenMM_CompoundIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CompoundIntegrator_setCurrentIntegrator(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CompoundIntegrator_setCurrentIntegrator(Pointer target, int index);
	/** Original signature : <code>void OpenMM_CompoundIntegrator_setCurrentIntegrator(OpenMM_CompoundIntegrator*, int)</code> */
	void OpenMM_CompoundIntegrator_setCurrentIntegrator(PointerByReference target, int index);
	/**
	 * Original signature : <code>double OpenMM_CompoundIntegrator_getStepSize(const OpenMM_CompoundIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CompoundIntegrator_getStepSize(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_CompoundIntegrator_getStepSize(Pointer target);
	/** Original signature : <code>double OpenMM_CompoundIntegrator_getStepSize(const OpenMM_CompoundIntegrator*)</code> */
	double OpenMM_CompoundIntegrator_getStepSize(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CompoundIntegrator_setStepSize(OpenMM_CompoundIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CompoundIntegrator_setStepSize(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_CompoundIntegrator_setStepSize(Pointer target, double size);
	/** Original signature : <code>void OpenMM_CompoundIntegrator_setStepSize(OpenMM_CompoundIntegrator*, double)</code> */
	void OpenMM_CompoundIntegrator_setStepSize(PointerByReference target, double size);
	/**
	 * Original signature : <code>double OpenMM_CompoundIntegrator_getConstraintTolerance(const OpenMM_CompoundIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CompoundIntegrator_getConstraintTolerance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_CompoundIntegrator_getConstraintTolerance(Pointer target);
	/** Original signature : <code>double OpenMM_CompoundIntegrator_getConstraintTolerance(const OpenMM_CompoundIntegrator*)</code> */
	double OpenMM_CompoundIntegrator_getConstraintTolerance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CompoundIntegrator_setConstraintTolerance(OpenMM_CompoundIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CompoundIntegrator_setConstraintTolerance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_CompoundIntegrator_setConstraintTolerance(Pointer target, double tol);
	/** Original signature : <code>void OpenMM_CompoundIntegrator_setConstraintTolerance(OpenMM_CompoundIntegrator*, double)</code> */
	void OpenMM_CompoundIntegrator_setConstraintTolerance(PointerByReference target, double tol);
	/**
	 * Original signature : <code>void OpenMM_CompoundIntegrator_step(OpenMM_CompoundIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CompoundIntegrator_step(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CompoundIntegrator_step(Pointer target, int steps);
	/** Original signature : <code>void OpenMM_CompoundIntegrator_step(OpenMM_CompoundIntegrator*, int)</code> */
	void OpenMM_CompoundIntegrator_step(PointerByReference target, int steps);
	/**
	 * Context<br>
	 * Original signature : <code>OpenMM_Context* OpenMM_Context_create(const OpenMM_System*, OpenMM_Integrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_create(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Context_create(Pointer system, Pointer integrator);
	/**
	 * Context<br>
	 * Original signature : <code>OpenMM_Context* OpenMM_Context_create(const OpenMM_System*, OpenMM_Integrator*)</code>
	 */
	PointerByReference OpenMM_Context_create(PointerByReference system, PointerByReference integrator);
	/**
	 * Original signature : <code>OpenMM_Context* OpenMM_Context_create_2(const OpenMM_System*, OpenMM_Integrator*, OpenMM_Platform*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_create_2(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Context_create_2(Pointer system, Pointer integrator, Pointer platform);
	/** Original signature : <code>OpenMM_Context* OpenMM_Context_create_2(const OpenMM_System*, OpenMM_Integrator*, OpenMM_Platform*)</code> */
	PointerByReference OpenMM_Context_create_2(PointerByReference system, PointerByReference integrator, PointerByReference platform);
	/**
	 * Original signature : <code>OpenMM_Context* OpenMM_Context_create_3(const OpenMM_System*, OpenMM_Integrator*, OpenMM_Platform*, const OpenMM_PropertyArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_create_3(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Context_create_3(Pointer system, Pointer integrator, Pointer platform, Pointer properties);
	/** Original signature : <code>OpenMM_Context* OpenMM_Context_create_3(const OpenMM_System*, OpenMM_Integrator*, OpenMM_Platform*, const OpenMM_PropertyArray*)</code> */
	PointerByReference OpenMM_Context_create_3(PointerByReference system, PointerByReference integrator, PointerByReference platform, PointerByReference properties);
	/**
	 * Original signature : <code>void OpenMM_Context_destroy(OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Context_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_Context_destroy(OpenMM_Context*)</code> */
	void OpenMM_Context_destroy(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_System* OpenMM_Context_getSystem(const OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_getSystem(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Context_getSystem(Pointer target);
	/** Original signature : <code>OpenMM_System* OpenMM_Context_getSystem(const OpenMM_Context*)</code> */
	PointerByReference OpenMM_Context_getSystem(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Integrator* OpenMM_Context_getIntegrator(OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_getIntegrator(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Context_getIntegrator(Pointer target);
	/** Original signature : <code>OpenMM_Integrator* OpenMM_Context_getIntegrator(OpenMM_Context*)</code> */
	PointerByReference OpenMM_Context_getIntegrator(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Platform* OpenMM_Context_getPlatform(OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_getPlatform(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Context_getPlatform(Pointer target);
	/** Original signature : <code>OpenMM_Platform* OpenMM_Context_getPlatform(OpenMM_Context*)</code> */
	PointerByReference OpenMM_Context_getPlatform(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Context_setState(OpenMM_Context*, const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_setState(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Context_setState(Pointer target, Pointer state);
	/** Original signature : <code>void OpenMM_Context_setState(OpenMM_Context*, const OpenMM_State*)</code> */
	void OpenMM_Context_setState(PointerByReference target, PointerByReference state);
	/**
	 * Original signature : <code>void OpenMM_Context_setTime(OpenMM_Context*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_setTime(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_Context_setTime(Pointer target, double time);
	/** Original signature : <code>void OpenMM_Context_setTime(OpenMM_Context*, double)</code> */
	void OpenMM_Context_setTime(PointerByReference target, double time);
	/**
	 * Original signature : <code>void OpenMM_Context_setPositions(OpenMM_Context*, const OpenMM_Vec3Array*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_setPositions(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Context_setPositions(Pointer target, Pointer positions);
	/** Original signature : <code>void OpenMM_Context_setPositions(OpenMM_Context*, const OpenMM_Vec3Array*)</code> */
	void OpenMM_Context_setPositions(PointerByReference target, PointerByReference positions);
	/**
	 * Original signature : <code>void OpenMM_Context_setVelocities(OpenMM_Context*, const OpenMM_Vec3Array*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_setVelocities(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Context_setVelocities(Pointer target, Pointer velocities);
	/** Original signature : <code>void OpenMM_Context_setVelocities(OpenMM_Context*, const OpenMM_Vec3Array*)</code> */
	void OpenMM_Context_setVelocities(PointerByReference target, PointerByReference velocities);
	/**
	 * Original signature : <code>void OpenMM_Context_setVelocitiesToTemperature(OpenMM_Context*, double, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_setVelocitiesToTemperature(com.sun.jna.ptr.PointerByReference, double, int)} instead
	 */
	@Deprecated 
	void OpenMM_Context_setVelocitiesToTemperature(Pointer target, double temperature, int randomSeed);
	/** Original signature : <code>void OpenMM_Context_setVelocitiesToTemperature(OpenMM_Context*, double, int)</code> */
	void OpenMM_Context_setVelocitiesToTemperature(PointerByReference target, double temperature, int randomSeed);
	/**
	 * Original signature : <code>OpenMM_ParameterArray* OpenMM_Context_getParameters(const OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_getParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Context_getParameters(Pointer target);
	/** Original signature : <code>OpenMM_ParameterArray* OpenMM_Context_getParameters(const OpenMM_Context*)</code> */
	PointerByReference OpenMM_Context_getParameters(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_Context_getParameter(const OpenMM_Context*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Context_getParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_Context_getParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	double OpenMM_Context_getParameter(Pointer target, Pointer name);
	/** Original signature : <code>double OpenMM_Context_getParameter(const OpenMM_Context*, const char*)</code> */
	double OpenMM_Context_getParameter(PointerByReference target, String name);
	/** Original signature : <code>double OpenMM_Context_getParameter(const OpenMM_Context*, const char*)</code> */
	double OpenMM_Context_getParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>void OpenMM_Context_setParameter(OpenMM_Context*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Context_setParameter(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_Context_setParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	void OpenMM_Context_setParameter(Pointer target, Pointer name, double value);
	/** Original signature : <code>void OpenMM_Context_setParameter(OpenMM_Context*, const char*, double)</code> */
	void OpenMM_Context_setParameter(PointerByReference target, String name, double value);
	/** Original signature : <code>void OpenMM_Context_setParameter(OpenMM_Context*, const char*, double)</code> */
	void OpenMM_Context_setParameter(PointerByReference target, Pointer name, double value);
	/**
	 * Original signature : <code>void OpenMM_Context_setPeriodicBoxVectors(OpenMM_Context*, const OpenMM_Vec3*, const OpenMM_Vec3*, const OpenMM_Vec3*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_setPeriodicBoxVectors(com.sun.jna.ptr.PointerByReference, simtk.openmm.OpenMM_Vec3, simtk.openmm.OpenMM_Vec3, simtk.openmm.OpenMM_Vec3)} instead
	 */
	@Deprecated 
	void OpenMM_Context_setPeriodicBoxVectors(Pointer target, OpenMM_Vec3 a, OpenMM_Vec3 b, OpenMM_Vec3 c);
	/** Original signature : <code>void OpenMM_Context_setPeriodicBoxVectors(OpenMM_Context*, const OpenMM_Vec3*, const OpenMM_Vec3*, const OpenMM_Vec3*)</code> */
	void OpenMM_Context_setPeriodicBoxVectors(PointerByReference target, OpenMM_Vec3 a, OpenMM_Vec3 b, OpenMM_Vec3 c);
	/**
	 * Original signature : <code>void OpenMM_Context_applyConstraints(OpenMM_Context*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_applyConstraints(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_Context_applyConstraints(Pointer target, double tol);
	/** Original signature : <code>void OpenMM_Context_applyConstraints(OpenMM_Context*, double)</code> */
	void OpenMM_Context_applyConstraints(PointerByReference target, double tol);
	/**
	 * Original signature : <code>void OpenMM_Context_applyVelocityConstraints(OpenMM_Context*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_applyVelocityConstraints(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_Context_applyVelocityConstraints(Pointer target, double tol);
	/** Original signature : <code>void OpenMM_Context_applyVelocityConstraints(OpenMM_Context*, double)</code> */
	void OpenMM_Context_applyVelocityConstraints(PointerByReference target, double tol);
	/**
	 * Original signature : <code>void OpenMM_Context_computeVirtualSites(OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_computeVirtualSites(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Context_computeVirtualSites(Pointer target);
	/** Original signature : <code>void OpenMM_Context_computeVirtualSites(OpenMM_Context*)</code> */
	void OpenMM_Context_computeVirtualSites(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Context_reinitialize(OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Context_reinitialize(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Context_reinitialize(Pointer target);
	/** Original signature : <code>void OpenMM_Context_reinitialize(OpenMM_Context*)</code> */
	void OpenMM_Context_reinitialize(PointerByReference target);
	/**
	 * TabulatedFunction<br>
	 * Original signature : <code>void OpenMM_TabulatedFunction_destroy(OpenMM_TabulatedFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_TabulatedFunction_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_TabulatedFunction_destroy(Pointer target);
	/**
	 * TabulatedFunction<br>
	 * Original signature : <code>void OpenMM_TabulatedFunction_destroy(OpenMM_TabulatedFunction*)</code>
	 */
	void OpenMM_TabulatedFunction_destroy(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_TabulatedFunction* OpenMM_TabulatedFunction_Copy(const OpenMM_TabulatedFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_TabulatedFunction_Copy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_TabulatedFunction_Copy(Pointer target);
	/** Original signature : <code>OpenMM_TabulatedFunction* OpenMM_TabulatedFunction_Copy(const OpenMM_TabulatedFunction*)</code> */
	PointerByReference OpenMM_TabulatedFunction_Copy(PointerByReference target);
	/**
	 * Continuous1DFunction<br>
	 * Original signature : <code>OpenMM_Continuous1DFunction* OpenMM_Continuous1DFunction_create(const OpenMM_DoubleArray*, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous1DFunction_create(com.sun.jna.ptr.PointerByReference, double, double)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Continuous1DFunction_create(Pointer values, double min, double max);
	/**
	 * Continuous1DFunction<br>
	 * Original signature : <code>OpenMM_Continuous1DFunction* OpenMM_Continuous1DFunction_create(const OpenMM_DoubleArray*, double, double)</code>
	 */
	PointerByReference OpenMM_Continuous1DFunction_create(PointerByReference values, double min, double max);
	/**
	 * Original signature : <code>void OpenMM_Continuous1DFunction_destroy(OpenMM_Continuous1DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous1DFunction_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Continuous1DFunction_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_Continuous1DFunction_destroy(OpenMM_Continuous1DFunction*)</code> */
	void OpenMM_Continuous1DFunction_destroy(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Continuous1DFunction_getFunctionParameters(const OpenMM_Continuous1DFunction*, OpenMM_DoubleArray*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Continuous1DFunction_getFunctionParameters(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_Continuous1DFunction_getFunctionParameters(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Continuous1DFunction_getFunctionParameters(Pointer target, Pointer values, DoubleByReference min, DoubleByReference max);
	/** Original signature : <code>void OpenMM_Continuous1DFunction_getFunctionParameters(const OpenMM_Continuous1DFunction*, OpenMM_DoubleArray*, double*, double*)</code> */
	void OpenMM_Continuous1DFunction_getFunctionParameters(PointerByReference target, PointerByReference values, DoubleBuffer min, DoubleBuffer max);
	/** Original signature : <code>void OpenMM_Continuous1DFunction_getFunctionParameters(const OpenMM_Continuous1DFunction*, OpenMM_DoubleArray*, double*, double*)</code> */
	void OpenMM_Continuous1DFunction_getFunctionParameters(PointerByReference target, PointerByReference values, DoubleByReference min, DoubleByReference max);
	/**
	 * Original signature : <code>void OpenMM_Continuous1DFunction_setFunctionParameters(OpenMM_Continuous1DFunction*, const OpenMM_DoubleArray*, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous1DFunction_setFunctionParameters(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_Continuous1DFunction_setFunctionParameters(Pointer target, Pointer values, double min, double max);
	/** Original signature : <code>void OpenMM_Continuous1DFunction_setFunctionParameters(OpenMM_Continuous1DFunction*, const OpenMM_DoubleArray*, double, double)</code> */
	void OpenMM_Continuous1DFunction_setFunctionParameters(PointerByReference target, PointerByReference values, double min, double max);
	/**
	 * Original signature : <code>OpenMM_Continuous1DFunction* OpenMM_Continuous1DFunction_Copy(const OpenMM_Continuous1DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous1DFunction_Copy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Continuous1DFunction_Copy(Pointer target);
	/** Original signature : <code>OpenMM_Continuous1DFunction* OpenMM_Continuous1DFunction_Copy(const OpenMM_Continuous1DFunction*)</code> */
	PointerByReference OpenMM_Continuous1DFunction_Copy(PointerByReference target);
	/**
	 * Continuous2DFunction<br>
	 * Original signature : <code>OpenMM_Continuous2DFunction* OpenMM_Continuous2DFunction_create(int, int, const OpenMM_DoubleArray*, double, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous2DFunction_create(int, int, com.sun.jna.ptr.PointerByReference, double, double, double, double)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Continuous2DFunction_create(int xsize, int ysize, Pointer values, double xmin, double xmax, double ymin, double ymax);
	/**
	 * Continuous2DFunction<br>
	 * Original signature : <code>OpenMM_Continuous2DFunction* OpenMM_Continuous2DFunction_create(int, int, const OpenMM_DoubleArray*, double, double, double, double)</code>
	 */
	PointerByReference OpenMM_Continuous2DFunction_create(int xsize, int ysize, PointerByReference values, double xmin, double xmax, double ymin, double ymax);
	/**
	 * Original signature : <code>void OpenMM_Continuous2DFunction_destroy(OpenMM_Continuous2DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous2DFunction_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Continuous2DFunction_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_Continuous2DFunction_destroy(OpenMM_Continuous2DFunction*)</code> */
	void OpenMM_Continuous2DFunction_destroy(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Continuous2DFunction_getFunctionParameters(const OpenMM_Continuous2DFunction*, int*, int*, OpenMM_DoubleArray*, double*, double*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Continuous2DFunction_getFunctionParameters(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_Continuous2DFunction_getFunctionParameters(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Continuous2DFunction_getFunctionParameters(Pointer target, IntByReference xsize, IntByReference ysize, Pointer values, DoubleByReference xmin, DoubleByReference xmax, DoubleByReference ymin, DoubleByReference ymax);
	/** Original signature : <code>void OpenMM_Continuous2DFunction_getFunctionParameters(const OpenMM_Continuous2DFunction*, int*, int*, OpenMM_DoubleArray*, double*, double*, double*, double*)</code> */
	void OpenMM_Continuous2DFunction_getFunctionParameters(PointerByReference target, IntBuffer xsize, IntBuffer ysize, PointerByReference values, DoubleBuffer xmin, DoubleBuffer xmax, DoubleBuffer ymin, DoubleBuffer ymax);
	/** Original signature : <code>void OpenMM_Continuous2DFunction_getFunctionParameters(const OpenMM_Continuous2DFunction*, int*, int*, OpenMM_DoubleArray*, double*, double*, double*, double*)</code> */
	void OpenMM_Continuous2DFunction_getFunctionParameters(PointerByReference target, IntByReference xsize, IntByReference ysize, PointerByReference values, DoubleByReference xmin, DoubleByReference xmax, DoubleByReference ymin, DoubleByReference ymax);
	/**
	 * Original signature : <code>void OpenMM_Continuous2DFunction_setFunctionParameters(OpenMM_Continuous2DFunction*, int, int, const OpenMM_DoubleArray*, double, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous2DFunction_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.ptr.PointerByReference, double, double, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_Continuous2DFunction_setFunctionParameters(Pointer target, int xsize, int ysize, Pointer values, double xmin, double xmax, double ymin, double ymax);
	/** Original signature : <code>void OpenMM_Continuous2DFunction_setFunctionParameters(OpenMM_Continuous2DFunction*, int, int, const OpenMM_DoubleArray*, double, double, double, double)</code> */
	void OpenMM_Continuous2DFunction_setFunctionParameters(PointerByReference target, int xsize, int ysize, PointerByReference values, double xmin, double xmax, double ymin, double ymax);
	/**
	 * Original signature : <code>OpenMM_Continuous2DFunction* OpenMM_Continuous2DFunction_Copy(const OpenMM_Continuous2DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous2DFunction_Copy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Continuous2DFunction_Copy(Pointer target);
	/** Original signature : <code>OpenMM_Continuous2DFunction* OpenMM_Continuous2DFunction_Copy(const OpenMM_Continuous2DFunction*)</code> */
	PointerByReference OpenMM_Continuous2DFunction_Copy(PointerByReference target);
	/**
	 * Continuous3DFunction<br>
	 * Original signature : <code>OpenMM_Continuous3DFunction* OpenMM_Continuous3DFunction_create(int, int, int, const OpenMM_DoubleArray*, double, double, double, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous3DFunction_create(int, int, int, com.sun.jna.ptr.PointerByReference, double, double, double, double, double, double)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Continuous3DFunction_create(int xsize, int ysize, int zsize, Pointer values, double xmin, double xmax, double ymin, double ymax, double zmin, double zmax);
	/**
	 * Continuous3DFunction<br>
	 * Original signature : <code>OpenMM_Continuous3DFunction* OpenMM_Continuous3DFunction_create(int, int, int, const OpenMM_DoubleArray*, double, double, double, double, double, double)</code>
	 */
	PointerByReference OpenMM_Continuous3DFunction_create(int xsize, int ysize, int zsize, PointerByReference values, double xmin, double xmax, double ymin, double ymax, double zmin, double zmax);
	/**
	 * Original signature : <code>void OpenMM_Continuous3DFunction_destroy(OpenMM_Continuous3DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous3DFunction_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Continuous3DFunction_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_Continuous3DFunction_destroy(OpenMM_Continuous3DFunction*)</code> */
	void OpenMM_Continuous3DFunction_destroy(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Continuous3DFunction_getFunctionParameters(const OpenMM_Continuous3DFunction*, int*, int*, int*, OpenMM_DoubleArray*, double*, double*, double*, double*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Continuous3DFunction_getFunctionParameters(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_Continuous3DFunction_getFunctionParameters(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Continuous3DFunction_getFunctionParameters(Pointer target, IntByReference xsize, IntByReference ysize, IntByReference zsize, Pointer values, DoubleByReference xmin, DoubleByReference xmax, DoubleByReference ymin, DoubleByReference ymax, DoubleByReference zmin, DoubleByReference zmax);
	/** Original signature : <code>void OpenMM_Continuous3DFunction_getFunctionParameters(const OpenMM_Continuous3DFunction*, int*, int*, int*, OpenMM_DoubleArray*, double*, double*, double*, double*, double*, double*)</code> */
	void OpenMM_Continuous3DFunction_getFunctionParameters(PointerByReference target, IntBuffer xsize, IntBuffer ysize, IntBuffer zsize, PointerByReference values, DoubleBuffer xmin, DoubleBuffer xmax, DoubleBuffer ymin, DoubleBuffer ymax, DoubleBuffer zmin, DoubleBuffer zmax);
	/** Original signature : <code>void OpenMM_Continuous3DFunction_getFunctionParameters(const OpenMM_Continuous3DFunction*, int*, int*, int*, OpenMM_DoubleArray*, double*, double*, double*, double*, double*, double*)</code> */
	void OpenMM_Continuous3DFunction_getFunctionParameters(PointerByReference target, IntByReference xsize, IntByReference ysize, IntByReference zsize, PointerByReference values, DoubleByReference xmin, DoubleByReference xmax, DoubleByReference ymin, DoubleByReference ymax, DoubleByReference zmin, DoubleByReference zmax);
	/**
	 * Original signature : <code>void OpenMM_Continuous3DFunction_setFunctionParameters(OpenMM_Continuous3DFunction*, int, int, int, const OpenMM_DoubleArray*, double, double, double, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous3DFunction_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, int, int, com.sun.jna.ptr.PointerByReference, double, double, double, double, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_Continuous3DFunction_setFunctionParameters(Pointer target, int xsize, int ysize, int zsize, Pointer values, double xmin, double xmax, double ymin, double ymax, double zmin, double zmax);
	/** Original signature : <code>void OpenMM_Continuous3DFunction_setFunctionParameters(OpenMM_Continuous3DFunction*, int, int, int, const OpenMM_DoubleArray*, double, double, double, double, double, double)</code> */
	void OpenMM_Continuous3DFunction_setFunctionParameters(PointerByReference target, int xsize, int ysize, int zsize, PointerByReference values, double xmin, double xmax, double ymin, double ymax, double zmin, double zmax);
	/**
	 * Original signature : <code>OpenMM_Continuous3DFunction* OpenMM_Continuous3DFunction_Copy(const OpenMM_Continuous3DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Continuous3DFunction_Copy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Continuous3DFunction_Copy(Pointer target);
	/** Original signature : <code>OpenMM_Continuous3DFunction* OpenMM_Continuous3DFunction_Copy(const OpenMM_Continuous3DFunction*)</code> */
	PointerByReference OpenMM_Continuous3DFunction_Copy(PointerByReference target);
	/**
	 * CustomAngleForce<br>
	 * Original signature : <code>OpenMM_CustomAngleForce* OpenMM_CustomAngleForce_create(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomAngleForce_create(java.lang.String)} and {@link #OpenMM_CustomAngleForce_create(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomAngleForce_create(Pointer energy);
	/**
	 * CustomAngleForce<br>
	 * Original signature : <code>OpenMM_CustomAngleForce* OpenMM_CustomAngleForce_create(const char*)</code>
	 */
	PointerByReference OpenMM_CustomAngleForce_create(String energy);
	/**
	 * Original signature : <code>void OpenMM_CustomAngleForce_destroy(OpenMM_CustomAngleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomAngleForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CustomAngleForce_destroy(OpenMM_CustomAngleForce*)</code> */
	void OpenMM_CustomAngleForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomAngleForce_getNumAngles(const OpenMM_CustomAngleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_getNumAngles(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomAngleForce_getNumAngles(Pointer target);
	/** Original signature : <code>int OpenMM_CustomAngleForce_getNumAngles(const OpenMM_CustomAngleForce*)</code> */
	int OpenMM_CustomAngleForce_getNumAngles(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomAngleForce_getNumPerAngleParameters(const OpenMM_CustomAngleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_getNumPerAngleParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomAngleForce_getNumPerAngleParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomAngleForce_getNumPerAngleParameters(const OpenMM_CustomAngleForce*)</code> */
	int OpenMM_CustomAngleForce_getNumPerAngleParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomAngleForce_getNumGlobalParameters(const OpenMM_CustomAngleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_getNumGlobalParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomAngleForce_getNumGlobalParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomAngleForce_getNumGlobalParameters(const OpenMM_CustomAngleForce*)</code> */
	int OpenMM_CustomAngleForce_getNumGlobalParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomAngleForce_getNumEnergyParameterDerivatives(const OpenMM_CustomAngleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_getNumEnergyParameterDerivatives(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomAngleForce_getNumEnergyParameterDerivatives(Pointer target);
	/** Original signature : <code>int OpenMM_CustomAngleForce_getNumEnergyParameterDerivatives(const OpenMM_CustomAngleForce*)</code> */
	int OpenMM_CustomAngleForce_getNumEnergyParameterDerivatives(PointerByReference target);
	/**
	 * Original signature : <code>char* OpenMM_CustomAngleForce_getEnergyFunction(const OpenMM_CustomAngleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_getEnergyFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomAngleForce_getEnergyFunction(Pointer target);
	/** Original signature : <code>char* OpenMM_CustomAngleForce_getEnergyFunction(const OpenMM_CustomAngleForce*)</code> */
	Pointer OpenMM_CustomAngleForce_getEnergyFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomAngleForce_setEnergyFunction(OpenMM_CustomAngleForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomAngleForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomAngleForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomAngleForce_setEnergyFunction(Pointer target, Pointer energy);
	/** Original signature : <code>void OpenMM_CustomAngleForce_setEnergyFunction(OpenMM_CustomAngleForce*, const char*)</code> */
	void OpenMM_CustomAngleForce_setEnergyFunction(PointerByReference target, String energy);
	/** Original signature : <code>void OpenMM_CustomAngleForce_setEnergyFunction(OpenMM_CustomAngleForce*, const char*)</code> */
	void OpenMM_CustomAngleForce_setEnergyFunction(PointerByReference target, Pointer energy);
	/**
	 * Original signature : <code>int OpenMM_CustomAngleForce_addPerAngleParameter(OpenMM_CustomAngleForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomAngleForce_addPerAngleParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomAngleForce_addPerAngleParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomAngleForce_addPerAngleParameter(Pointer target, Pointer name);
	/** Original signature : <code>int OpenMM_CustomAngleForce_addPerAngleParameter(OpenMM_CustomAngleForce*, const char*)</code> */
	int OpenMM_CustomAngleForce_addPerAngleParameter(PointerByReference target, String name);
	/** Original signature : <code>int OpenMM_CustomAngleForce_addPerAngleParameter(OpenMM_CustomAngleForce*, const char*)</code> */
	int OpenMM_CustomAngleForce_addPerAngleParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomAngleForce_getPerAngleParameterName(const OpenMM_CustomAngleForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_getPerAngleParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomAngleForce_getPerAngleParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomAngleForce_getPerAngleParameterName(const OpenMM_CustomAngleForce*, int)</code> */
	Pointer OpenMM_CustomAngleForce_getPerAngleParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomAngleForce_setPerAngleParameterName(OpenMM_CustomAngleForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomAngleForce_setPerAngleParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomAngleForce_setPerAngleParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomAngleForce_setPerAngleParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomAngleForce_setPerAngleParameterName(OpenMM_CustomAngleForce*, int, const char*)</code> */
	void OpenMM_CustomAngleForce_setPerAngleParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomAngleForce_setPerAngleParameterName(OpenMM_CustomAngleForce*, int, const char*)</code> */
	void OpenMM_CustomAngleForce_setPerAngleParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>int OpenMM_CustomAngleForce_addGlobalParameter(OpenMM_CustomAngleForce*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomAngleForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomAngleForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomAngleForce_addGlobalParameter(Pointer target, Pointer name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomAngleForce_addGlobalParameter(OpenMM_CustomAngleForce*, const char*, double)</code> */
	int OpenMM_CustomAngleForce_addGlobalParameter(PointerByReference target, String name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomAngleForce_addGlobalParameter(OpenMM_CustomAngleForce*, const char*, double)</code> */
	int OpenMM_CustomAngleForce_addGlobalParameter(PointerByReference target, Pointer name, double defaultValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomAngleForce_getGlobalParameterName(const OpenMM_CustomAngleForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_getGlobalParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomAngleForce_getGlobalParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomAngleForce_getGlobalParameterName(const OpenMM_CustomAngleForce*, int)</code> */
	Pointer OpenMM_CustomAngleForce_getGlobalParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomAngleForce_setGlobalParameterName(OpenMM_CustomAngleForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomAngleForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomAngleForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomAngleForce_setGlobalParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomAngleForce_setGlobalParameterName(OpenMM_CustomAngleForce*, int, const char*)</code> */
	void OpenMM_CustomAngleForce_setGlobalParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomAngleForce_setGlobalParameterName(OpenMM_CustomAngleForce*, int, const char*)</code> */
	void OpenMM_CustomAngleForce_setGlobalParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>double OpenMM_CustomAngleForce_getGlobalParameterDefaultValue(const OpenMM_CustomAngleForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_getGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_CustomAngleForce_getGlobalParameterDefaultValue(Pointer target, int index);
	/** Original signature : <code>double OpenMM_CustomAngleForce_getGlobalParameterDefaultValue(const OpenMM_CustomAngleForce*, int)</code> */
	double OpenMM_CustomAngleForce_getGlobalParameterDefaultValue(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomAngleForce_setGlobalParameterDefaultValue(OpenMM_CustomAngleForce*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_setGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomAngleForce_setGlobalParameterDefaultValue(Pointer target, int index, double defaultValue);
	/** Original signature : <code>void OpenMM_CustomAngleForce_setGlobalParameterDefaultValue(OpenMM_CustomAngleForce*, int, double)</code> */
	void OpenMM_CustomAngleForce_setGlobalParameterDefaultValue(PointerByReference target, int index, double defaultValue);
	/**
	 * Original signature : <code>void OpenMM_CustomAngleForce_addEnergyParameterDerivative(OpenMM_CustomAngleForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomAngleForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomAngleForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomAngleForce_addEnergyParameterDerivative(Pointer target, Pointer name);
	/** Original signature : <code>void OpenMM_CustomAngleForce_addEnergyParameterDerivative(OpenMM_CustomAngleForce*, const char*)</code> */
	void OpenMM_CustomAngleForce_addEnergyParameterDerivative(PointerByReference target, String name);
	/** Original signature : <code>void OpenMM_CustomAngleForce_addEnergyParameterDerivative(OpenMM_CustomAngleForce*, const char*)</code> */
	void OpenMM_CustomAngleForce_addEnergyParameterDerivative(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomAngleForce_getEnergyParameterDerivativeName(const OpenMM_CustomAngleForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_getEnergyParameterDerivativeName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomAngleForce_getEnergyParameterDerivativeName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomAngleForce_getEnergyParameterDerivativeName(const OpenMM_CustomAngleForce*, int)</code> */
	Pointer OpenMM_CustomAngleForce_getEnergyParameterDerivativeName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomAngleForce_addAngle(OpenMM_CustomAngleForce*, int, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_addAngle(com.sun.jna.ptr.PointerByReference, int, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomAngleForce_addAngle(Pointer target, int particle1, int particle2, int particle3, Pointer parameters);
	/** Original signature : <code>int OpenMM_CustomAngleForce_addAngle(OpenMM_CustomAngleForce*, int, int, int, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CustomAngleForce_addAngle(PointerByReference target, int particle1, int particle2, int particle3, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomAngleForce_getAngleParameters(const OpenMM_CustomAngleForce*, int, int*, int*, int*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomAngleForce_getAngleParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomAngleForce_getAngleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomAngleForce_getAngleParameters(Pointer target, int index, IntByReference particle1, IntByReference particle2, IntByReference particle3, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomAngleForce_getAngleParameters(const OpenMM_CustomAngleForce*, int, int*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomAngleForce_getAngleParameters(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2, IntBuffer particle3, PointerByReference parameters);
	/** Original signature : <code>void OpenMM_CustomAngleForce_getAngleParameters(const OpenMM_CustomAngleForce*, int, int*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomAngleForce_getAngleParameters(PointerByReference target, int index, IntByReference particle1, IntByReference particle2, IntByReference particle3, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomAngleForce_setAngleParameters(OpenMM_CustomAngleForce*, int, int, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_setAngleParameters(com.sun.jna.ptr.PointerByReference, int, int, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomAngleForce_setAngleParameters(Pointer target, int index, int particle1, int particle2, int particle3, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomAngleForce_setAngleParameters(OpenMM_CustomAngleForce*, int, int, int, int, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomAngleForce_setAngleParameters(PointerByReference target, int index, int particle1, int particle2, int particle3, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomAngleForce_updateParametersInContext(OpenMM_CustomAngleForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomAngleForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_CustomAngleForce_updateParametersInContext(OpenMM_CustomAngleForce*, OpenMM_Context*)</code> */
	void OpenMM_CustomAngleForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>void OpenMM_CustomAngleForce_setUsesPeriodicBoundaryConditions(OpenMM_CustomAngleForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_setUsesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomAngleForce_setUsesPeriodicBoundaryConditions(Pointer target, int periodic);
	/** Original signature : <code>void OpenMM_CustomAngleForce_setUsesPeriodicBoundaryConditions(OpenMM_CustomAngleForce*, OpenMM_Boolean)</code> */
	void OpenMM_CustomAngleForce_setUsesPeriodicBoundaryConditions(PointerByReference target, int periodic);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomAngleForce_usesPeriodicBoundaryConditions(const OpenMM_CustomAngleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomAngleForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomAngleForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomAngleForce_usesPeriodicBoundaryConditions(const OpenMM_CustomAngleForce*)</code> */
	int OpenMM_CustomAngleForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * CustomBondForce<br>
	 * Original signature : <code>OpenMM_CustomBondForce* OpenMM_CustomBondForce_create(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomBondForce_create(java.lang.String)} and {@link #OpenMM_CustomBondForce_create(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomBondForce_create(Pointer energy);
	/**
	 * CustomBondForce<br>
	 * Original signature : <code>OpenMM_CustomBondForce* OpenMM_CustomBondForce_create(const char*)</code>
	 */
	PointerByReference OpenMM_CustomBondForce_create(String energy);
	/**
	 * Original signature : <code>void OpenMM_CustomBondForce_destroy(OpenMM_CustomBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomBondForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CustomBondForce_destroy(OpenMM_CustomBondForce*)</code> */
	void OpenMM_CustomBondForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomBondForce_getNumBonds(const OpenMM_CustomBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_getNumBonds(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomBondForce_getNumBonds(Pointer target);
	/** Original signature : <code>int OpenMM_CustomBondForce_getNumBonds(const OpenMM_CustomBondForce*)</code> */
	int OpenMM_CustomBondForce_getNumBonds(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomBondForce_getNumPerBondParameters(const OpenMM_CustomBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_getNumPerBondParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomBondForce_getNumPerBondParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomBondForce_getNumPerBondParameters(const OpenMM_CustomBondForce*)</code> */
	int OpenMM_CustomBondForce_getNumPerBondParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomBondForce_getNumGlobalParameters(const OpenMM_CustomBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_getNumGlobalParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomBondForce_getNumGlobalParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomBondForce_getNumGlobalParameters(const OpenMM_CustomBondForce*)</code> */
	int OpenMM_CustomBondForce_getNumGlobalParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomBondForce_getNumEnergyParameterDerivatives(const OpenMM_CustomBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_getNumEnergyParameterDerivatives(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomBondForce_getNumEnergyParameterDerivatives(Pointer target);
	/** Original signature : <code>int OpenMM_CustomBondForce_getNumEnergyParameterDerivatives(const OpenMM_CustomBondForce*)</code> */
	int OpenMM_CustomBondForce_getNumEnergyParameterDerivatives(PointerByReference target);
	/**
	 * Original signature : <code>char* OpenMM_CustomBondForce_getEnergyFunction(const OpenMM_CustomBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_getEnergyFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomBondForce_getEnergyFunction(Pointer target);
	/** Original signature : <code>char* OpenMM_CustomBondForce_getEnergyFunction(const OpenMM_CustomBondForce*)</code> */
	Pointer OpenMM_CustomBondForce_getEnergyFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomBondForce_setEnergyFunction(OpenMM_CustomBondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomBondForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomBondForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomBondForce_setEnergyFunction(Pointer target, Pointer energy);
	/** Original signature : <code>void OpenMM_CustomBondForce_setEnergyFunction(OpenMM_CustomBondForce*, const char*)</code> */
	void OpenMM_CustomBondForce_setEnergyFunction(PointerByReference target, String energy);
	/** Original signature : <code>void OpenMM_CustomBondForce_setEnergyFunction(OpenMM_CustomBondForce*, const char*)</code> */
	void OpenMM_CustomBondForce_setEnergyFunction(PointerByReference target, Pointer energy);
	/**
	 * Original signature : <code>int OpenMM_CustomBondForce_addPerBondParameter(OpenMM_CustomBondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomBondForce_addPerBondParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomBondForce_addPerBondParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomBondForce_addPerBondParameter(Pointer target, Pointer name);
	/** Original signature : <code>int OpenMM_CustomBondForce_addPerBondParameter(OpenMM_CustomBondForce*, const char*)</code> */
	int OpenMM_CustomBondForce_addPerBondParameter(PointerByReference target, String name);
	/** Original signature : <code>int OpenMM_CustomBondForce_addPerBondParameter(OpenMM_CustomBondForce*, const char*)</code> */
	int OpenMM_CustomBondForce_addPerBondParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomBondForce_getPerBondParameterName(const OpenMM_CustomBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_getPerBondParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomBondForce_getPerBondParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomBondForce_getPerBondParameterName(const OpenMM_CustomBondForce*, int)</code> */
	Pointer OpenMM_CustomBondForce_getPerBondParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomBondForce_setPerBondParameterName(OpenMM_CustomBondForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomBondForce_setPerBondParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomBondForce_setPerBondParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomBondForce_setPerBondParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomBondForce_setPerBondParameterName(OpenMM_CustomBondForce*, int, const char*)</code> */
	void OpenMM_CustomBondForce_setPerBondParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomBondForce_setPerBondParameterName(OpenMM_CustomBondForce*, int, const char*)</code> */
	void OpenMM_CustomBondForce_setPerBondParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>int OpenMM_CustomBondForce_addGlobalParameter(OpenMM_CustomBondForce*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomBondForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomBondForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomBondForce_addGlobalParameter(Pointer target, Pointer name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomBondForce_addGlobalParameter(OpenMM_CustomBondForce*, const char*, double)</code> */
	int OpenMM_CustomBondForce_addGlobalParameter(PointerByReference target, String name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomBondForce_addGlobalParameter(OpenMM_CustomBondForce*, const char*, double)</code> */
	int OpenMM_CustomBondForce_addGlobalParameter(PointerByReference target, Pointer name, double defaultValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomBondForce_getGlobalParameterName(const OpenMM_CustomBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_getGlobalParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomBondForce_getGlobalParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomBondForce_getGlobalParameterName(const OpenMM_CustomBondForce*, int)</code> */
	Pointer OpenMM_CustomBondForce_getGlobalParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomBondForce_setGlobalParameterName(OpenMM_CustomBondForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomBondForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomBondForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomBondForce_setGlobalParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomBondForce_setGlobalParameterName(OpenMM_CustomBondForce*, int, const char*)</code> */
	void OpenMM_CustomBondForce_setGlobalParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomBondForce_setGlobalParameterName(OpenMM_CustomBondForce*, int, const char*)</code> */
	void OpenMM_CustomBondForce_setGlobalParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>double OpenMM_CustomBondForce_getGlobalParameterDefaultValue(const OpenMM_CustomBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_getGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_CustomBondForce_getGlobalParameterDefaultValue(Pointer target, int index);
	/** Original signature : <code>double OpenMM_CustomBondForce_getGlobalParameterDefaultValue(const OpenMM_CustomBondForce*, int)</code> */
	double OpenMM_CustomBondForce_getGlobalParameterDefaultValue(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomBondForce_setGlobalParameterDefaultValue(OpenMM_CustomBondForce*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_setGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomBondForce_setGlobalParameterDefaultValue(Pointer target, int index, double defaultValue);
	/** Original signature : <code>void OpenMM_CustomBondForce_setGlobalParameterDefaultValue(OpenMM_CustomBondForce*, int, double)</code> */
	void OpenMM_CustomBondForce_setGlobalParameterDefaultValue(PointerByReference target, int index, double defaultValue);
	/**
	 * Original signature : <code>void OpenMM_CustomBondForce_addEnergyParameterDerivative(OpenMM_CustomBondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomBondForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomBondForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomBondForce_addEnergyParameterDerivative(Pointer target, Pointer name);
	/** Original signature : <code>void OpenMM_CustomBondForce_addEnergyParameterDerivative(OpenMM_CustomBondForce*, const char*)</code> */
	void OpenMM_CustomBondForce_addEnergyParameterDerivative(PointerByReference target, String name);
	/** Original signature : <code>void OpenMM_CustomBondForce_addEnergyParameterDerivative(OpenMM_CustomBondForce*, const char*)</code> */
	void OpenMM_CustomBondForce_addEnergyParameterDerivative(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomBondForce_getEnergyParameterDerivativeName(const OpenMM_CustomBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_getEnergyParameterDerivativeName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomBondForce_getEnergyParameterDerivativeName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomBondForce_getEnergyParameterDerivativeName(const OpenMM_CustomBondForce*, int)</code> */
	Pointer OpenMM_CustomBondForce_getEnergyParameterDerivativeName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomBondForce_addBond(OpenMM_CustomBondForce*, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_addBond(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomBondForce_addBond(Pointer target, int particle1, int particle2, Pointer parameters);
	/** Original signature : <code>int OpenMM_CustomBondForce_addBond(OpenMM_CustomBondForce*, int, int, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CustomBondForce_addBond(PointerByReference target, int particle1, int particle2, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomBondForce_getBondParameters(const OpenMM_CustomBondForce*, int, int*, int*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomBondForce_getBondParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomBondForce_getBondParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomBondForce_getBondParameters(Pointer target, int index, IntByReference particle1, IntByReference particle2, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomBondForce_getBondParameters(const OpenMM_CustomBondForce*, int, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomBondForce_getBondParameters(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2, PointerByReference parameters);
	/** Original signature : <code>void OpenMM_CustomBondForce_getBondParameters(const OpenMM_CustomBondForce*, int, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomBondForce_getBondParameters(PointerByReference target, int index, IntByReference particle1, IntByReference particle2, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomBondForce_setBondParameters(OpenMM_CustomBondForce*, int, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_setBondParameters(com.sun.jna.ptr.PointerByReference, int, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomBondForce_setBondParameters(Pointer target, int index, int particle1, int particle2, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomBondForce_setBondParameters(OpenMM_CustomBondForce*, int, int, int, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomBondForce_setBondParameters(PointerByReference target, int index, int particle1, int particle2, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomBondForce_updateParametersInContext(OpenMM_CustomBondForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomBondForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_CustomBondForce_updateParametersInContext(OpenMM_CustomBondForce*, OpenMM_Context*)</code> */
	void OpenMM_CustomBondForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>void OpenMM_CustomBondForce_setUsesPeriodicBoundaryConditions(OpenMM_CustomBondForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_setUsesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomBondForce_setUsesPeriodicBoundaryConditions(Pointer target, int periodic);
	/** Original signature : <code>void OpenMM_CustomBondForce_setUsesPeriodicBoundaryConditions(OpenMM_CustomBondForce*, OpenMM_Boolean)</code> */
	void OpenMM_CustomBondForce_setUsesPeriodicBoundaryConditions(PointerByReference target, int periodic);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomBondForce_usesPeriodicBoundaryConditions(const OpenMM_CustomBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomBondForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomBondForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomBondForce_usesPeriodicBoundaryConditions(const OpenMM_CustomBondForce*)</code> */
	int OpenMM_CustomBondForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * CustomCentroidBondForce<br>
	 * Original signature : <code>OpenMM_CustomCentroidBondForce* OpenMM_CustomCentroidBondForce_create(int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCentroidBondForce_create(int, java.lang.String)} and {@link #OpenMM_CustomCentroidBondForce_create(int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomCentroidBondForce_create(int numGroups, Pointer energy);
	/**
	 * CustomCentroidBondForce<br>
	 * Original signature : <code>OpenMM_CustomCentroidBondForce* OpenMM_CustomCentroidBondForce_create(int, const char*)</code>
	 */
	PointerByReference OpenMM_CustomCentroidBondForce_create(int numGroups, String energy);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_destroy(OpenMM_CustomCentroidBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_destroy(OpenMM_CustomCentroidBondForce*)</code> */
	void OpenMM_CustomCentroidBondForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumGroupsPerBond(const OpenMM_CustomCentroidBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getNumGroupsPerBond(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_getNumGroupsPerBond(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumGroupsPerBond(const OpenMM_CustomCentroidBondForce*)</code> */
	int OpenMM_CustomCentroidBondForce_getNumGroupsPerBond(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumGroups(const OpenMM_CustomCentroidBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getNumGroups(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_getNumGroups(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumGroups(const OpenMM_CustomCentroidBondForce*)</code> */
	int OpenMM_CustomCentroidBondForce_getNumGroups(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumBonds(const OpenMM_CustomCentroidBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getNumBonds(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_getNumBonds(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumBonds(const OpenMM_CustomCentroidBondForce*)</code> */
	int OpenMM_CustomCentroidBondForce_getNumBonds(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumPerBondParameters(const OpenMM_CustomCentroidBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getNumPerBondParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_getNumPerBondParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumPerBondParameters(const OpenMM_CustomCentroidBondForce*)</code> */
	int OpenMM_CustomCentroidBondForce_getNumPerBondParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumGlobalParameters(const OpenMM_CustomCentroidBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getNumGlobalParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_getNumGlobalParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumGlobalParameters(const OpenMM_CustomCentroidBondForce*)</code> */
	int OpenMM_CustomCentroidBondForce_getNumGlobalParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumEnergyParameterDerivatives(const OpenMM_CustomCentroidBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getNumEnergyParameterDerivatives(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_getNumEnergyParameterDerivatives(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumEnergyParameterDerivatives(const OpenMM_CustomCentroidBondForce*)</code> */
	int OpenMM_CustomCentroidBondForce_getNumEnergyParameterDerivatives(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumTabulatedFunctions(const OpenMM_CustomCentroidBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getNumTabulatedFunctions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_getNumTabulatedFunctions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumTabulatedFunctions(const OpenMM_CustomCentroidBondForce*)</code> */
	int OpenMM_CustomCentroidBondForce_getNumTabulatedFunctions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumFunctions(const OpenMM_CustomCentroidBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getNumFunctions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_getNumFunctions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_getNumFunctions(const OpenMM_CustomCentroidBondForce*)</code> */
	int OpenMM_CustomCentroidBondForce_getNumFunctions(PointerByReference target);
	/**
	 * Original signature : <code>char* OpenMM_CustomCentroidBondForce_getEnergyFunction(const OpenMM_CustomCentroidBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getEnergyFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomCentroidBondForce_getEnergyFunction(Pointer target);
	/** Original signature : <code>char* OpenMM_CustomCentroidBondForce_getEnergyFunction(const OpenMM_CustomCentroidBondForce*)</code> */
	Pointer OpenMM_CustomCentroidBondForce_getEnergyFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_setEnergyFunction(OpenMM_CustomCentroidBondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCentroidBondForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomCentroidBondForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_setEnergyFunction(Pointer target, Pointer energy);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_setEnergyFunction(OpenMM_CustomCentroidBondForce*, const char*)</code> */
	void OpenMM_CustomCentroidBondForce_setEnergyFunction(PointerByReference target, String energy);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_setEnergyFunction(OpenMM_CustomCentroidBondForce*, const char*)</code> */
	void OpenMM_CustomCentroidBondForce_setEnergyFunction(PointerByReference target, Pointer energy);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_addPerBondParameter(OpenMM_CustomCentroidBondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCentroidBondForce_addPerBondParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomCentroidBondForce_addPerBondParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_addPerBondParameter(Pointer target, Pointer name);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_addPerBondParameter(OpenMM_CustomCentroidBondForce*, const char*)</code> */
	int OpenMM_CustomCentroidBondForce_addPerBondParameter(PointerByReference target, String name);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_addPerBondParameter(OpenMM_CustomCentroidBondForce*, const char*)</code> */
	int OpenMM_CustomCentroidBondForce_addPerBondParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomCentroidBondForce_getPerBondParameterName(const OpenMM_CustomCentroidBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getPerBondParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomCentroidBondForce_getPerBondParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomCentroidBondForce_getPerBondParameterName(const OpenMM_CustomCentroidBondForce*, int)</code> */
	Pointer OpenMM_CustomCentroidBondForce_getPerBondParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_setPerBondParameterName(OpenMM_CustomCentroidBondForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCentroidBondForce_setPerBondParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomCentroidBondForce_setPerBondParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_setPerBondParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_setPerBondParameterName(OpenMM_CustomCentroidBondForce*, int, const char*)</code> */
	void OpenMM_CustomCentroidBondForce_setPerBondParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_setPerBondParameterName(OpenMM_CustomCentroidBondForce*, int, const char*)</code> */
	void OpenMM_CustomCentroidBondForce_setPerBondParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_addGlobalParameter(OpenMM_CustomCentroidBondForce*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCentroidBondForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomCentroidBondForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_addGlobalParameter(Pointer target, Pointer name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_addGlobalParameter(OpenMM_CustomCentroidBondForce*, const char*, double)</code> */
	int OpenMM_CustomCentroidBondForce_addGlobalParameter(PointerByReference target, String name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_addGlobalParameter(OpenMM_CustomCentroidBondForce*, const char*, double)</code> */
	int OpenMM_CustomCentroidBondForce_addGlobalParameter(PointerByReference target, Pointer name, double defaultValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomCentroidBondForce_getGlobalParameterName(const OpenMM_CustomCentroidBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getGlobalParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomCentroidBondForce_getGlobalParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomCentroidBondForce_getGlobalParameterName(const OpenMM_CustomCentroidBondForce*, int)</code> */
	Pointer OpenMM_CustomCentroidBondForce_getGlobalParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_setGlobalParameterName(OpenMM_CustomCentroidBondForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCentroidBondForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomCentroidBondForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_setGlobalParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_setGlobalParameterName(OpenMM_CustomCentroidBondForce*, int, const char*)</code> */
	void OpenMM_CustomCentroidBondForce_setGlobalParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_setGlobalParameterName(OpenMM_CustomCentroidBondForce*, int, const char*)</code> */
	void OpenMM_CustomCentroidBondForce_setGlobalParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>double OpenMM_CustomCentroidBondForce_getGlobalParameterDefaultValue(const OpenMM_CustomCentroidBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_CustomCentroidBondForce_getGlobalParameterDefaultValue(Pointer target, int index);
	/** Original signature : <code>double OpenMM_CustomCentroidBondForce_getGlobalParameterDefaultValue(const OpenMM_CustomCentroidBondForce*, int)</code> */
	double OpenMM_CustomCentroidBondForce_getGlobalParameterDefaultValue(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_setGlobalParameterDefaultValue(OpenMM_CustomCentroidBondForce*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_setGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_setGlobalParameterDefaultValue(Pointer target, int index, double defaultValue);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_setGlobalParameterDefaultValue(OpenMM_CustomCentroidBondForce*, int, double)</code> */
	void OpenMM_CustomCentroidBondForce_setGlobalParameterDefaultValue(PointerByReference target, int index, double defaultValue);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_addEnergyParameterDerivative(OpenMM_CustomCentroidBondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCentroidBondForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomCentroidBondForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_addEnergyParameterDerivative(Pointer target, Pointer name);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_addEnergyParameterDerivative(OpenMM_CustomCentroidBondForce*, const char*)</code> */
	void OpenMM_CustomCentroidBondForce_addEnergyParameterDerivative(PointerByReference target, String name);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_addEnergyParameterDerivative(OpenMM_CustomCentroidBondForce*, const char*)</code> */
	void OpenMM_CustomCentroidBondForce_addEnergyParameterDerivative(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomCentroidBondForce_getEnergyParameterDerivativeName(const OpenMM_CustomCentroidBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getEnergyParameterDerivativeName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomCentroidBondForce_getEnergyParameterDerivativeName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomCentroidBondForce_getEnergyParameterDerivativeName(const OpenMM_CustomCentroidBondForce*, int)</code> */
	Pointer OpenMM_CustomCentroidBondForce_getEnergyParameterDerivativeName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_addGroup(OpenMM_CustomCentroidBondForce*, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_addGroup(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_addGroup(Pointer target, Pointer particles, Pointer weights);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_addGroup(OpenMM_CustomCentroidBondForce*, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CustomCentroidBondForce_addGroup(PointerByReference target, PointerByReference particles, PointerByReference weights);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_getGroupParameters(const OpenMM_CustomCentroidBondForce*, int, OpenMM_IntArray*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getGroupParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_getGroupParameters(Pointer target, int index, Pointer particles, Pointer weights);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_getGroupParameters(const OpenMM_CustomCentroidBondForce*, int, OpenMM_IntArray*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomCentroidBondForce_getGroupParameters(PointerByReference target, int index, PointerByReference particles, PointerByReference weights);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_setGroupParameters(OpenMM_CustomCentroidBondForce*, int, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_setGroupParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_setGroupParameters(Pointer target, int index, Pointer particles, Pointer weights);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_setGroupParameters(OpenMM_CustomCentroidBondForce*, int, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomCentroidBondForce_setGroupParameters(PointerByReference target, int index, PointerByReference particles, PointerByReference weights);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_addBond(OpenMM_CustomCentroidBondForce*, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_addBond(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_addBond(Pointer target, Pointer groups, Pointer parameters);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_addBond(OpenMM_CustomCentroidBondForce*, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CustomCentroidBondForce_addBond(PointerByReference target, PointerByReference groups, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_getBondParameters(const OpenMM_CustomCentroidBondForce*, int, OpenMM_IntArray*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getBondParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_getBondParameters(Pointer target, int index, Pointer groups, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_getBondParameters(const OpenMM_CustomCentroidBondForce*, int, OpenMM_IntArray*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomCentroidBondForce_getBondParameters(PointerByReference target, int index, PointerByReference groups, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_setBondParameters(OpenMM_CustomCentroidBondForce*, int, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_setBondParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_setBondParameters(Pointer target, int index, Pointer groups, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_setBondParameters(OpenMM_CustomCentroidBondForce*, int, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomCentroidBondForce_setBondParameters(PointerByReference target, int index, PointerByReference groups, PointerByReference parameters);
	/**
	 * Original signature : <code>int OpenMM_CustomCentroidBondForce_addTabulatedFunction(OpenMM_CustomCentroidBondForce*, const char*, OpenMM_TabulatedFunction*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCentroidBondForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomCentroidBondForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_addTabulatedFunction(Pointer target, Pointer name, Pointer function);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_addTabulatedFunction(OpenMM_CustomCentroidBondForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomCentroidBondForce_addTabulatedFunction(PointerByReference target, String name, PointerByReference function);
	/** Original signature : <code>int OpenMM_CustomCentroidBondForce_addTabulatedFunction(OpenMM_CustomCentroidBondForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomCentroidBondForce_addTabulatedFunction(PointerByReference target, Pointer name, PointerByReference function);
	/**
	 * Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomCentroidBondForce_getTabulatedFunction(OpenMM_CustomCentroidBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getTabulatedFunction(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomCentroidBondForce_getTabulatedFunction(Pointer target, int index);
	/** Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomCentroidBondForce_getTabulatedFunction(OpenMM_CustomCentroidBondForce*, int)</code> */
	PointerByReference OpenMM_CustomCentroidBondForce_getTabulatedFunction(PointerByReference target, int index);
	/**
	 * Original signature : <code>char* OpenMM_CustomCentroidBondForce_getTabulatedFunctionName(const OpenMM_CustomCentroidBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_getTabulatedFunctionName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomCentroidBondForce_getTabulatedFunctionName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomCentroidBondForce_getTabulatedFunctionName(const OpenMM_CustomCentroidBondForce*, int)</code> */
	Pointer OpenMM_CustomCentroidBondForce_getTabulatedFunctionName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_updateParametersInContext(OpenMM_CustomCentroidBondForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_updateParametersInContext(OpenMM_CustomCentroidBondForce*, OpenMM_Context*)</code> */
	void OpenMM_CustomCentroidBondForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>void OpenMM_CustomCentroidBondForce_setUsesPeriodicBoundaryConditions(OpenMM_CustomCentroidBondForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_setUsesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCentroidBondForce_setUsesPeriodicBoundaryConditions(Pointer target, int periodic);
	/** Original signature : <code>void OpenMM_CustomCentroidBondForce_setUsesPeriodicBoundaryConditions(OpenMM_CustomCentroidBondForce*, OpenMM_Boolean)</code> */
	void OpenMM_CustomCentroidBondForce_setUsesPeriodicBoundaryConditions(PointerByReference target, int periodic);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomCentroidBondForce_usesPeriodicBoundaryConditions(const OpenMM_CustomCentroidBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCentroidBondForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCentroidBondForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomCentroidBondForce_usesPeriodicBoundaryConditions(const OpenMM_CustomCentroidBondForce*)</code> */
	int OpenMM_CustomCentroidBondForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * CustomCompoundBondForce<br>
	 * Original signature : <code>OpenMM_CustomCompoundBondForce* OpenMM_CustomCompoundBondForce_create(int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCompoundBondForce_create(int, java.lang.String)} and {@link #OpenMM_CustomCompoundBondForce_create(int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomCompoundBondForce_create(int numParticles, Pointer energy);
	/**
	 * CustomCompoundBondForce<br>
	 * Original signature : <code>OpenMM_CustomCompoundBondForce* OpenMM_CustomCompoundBondForce_create(int, const char*)</code>
	 */
	PointerByReference OpenMM_CustomCompoundBondForce_create(int numParticles, String energy);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_destroy(OpenMM_CustomCompoundBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_destroy(OpenMM_CustomCompoundBondForce*)</code> */
	void OpenMM_CustomCompoundBondForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumParticlesPerBond(const OpenMM_CustomCompoundBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getNumParticlesPerBond(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_getNumParticlesPerBond(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumParticlesPerBond(const OpenMM_CustomCompoundBondForce*)</code> */
	int OpenMM_CustomCompoundBondForce_getNumParticlesPerBond(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumBonds(const OpenMM_CustomCompoundBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getNumBonds(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_getNumBonds(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumBonds(const OpenMM_CustomCompoundBondForce*)</code> */
	int OpenMM_CustomCompoundBondForce_getNumBonds(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumPerBondParameters(const OpenMM_CustomCompoundBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getNumPerBondParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_getNumPerBondParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumPerBondParameters(const OpenMM_CustomCompoundBondForce*)</code> */
	int OpenMM_CustomCompoundBondForce_getNumPerBondParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumGlobalParameters(const OpenMM_CustomCompoundBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getNumGlobalParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_getNumGlobalParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumGlobalParameters(const OpenMM_CustomCompoundBondForce*)</code> */
	int OpenMM_CustomCompoundBondForce_getNumGlobalParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumEnergyParameterDerivatives(const OpenMM_CustomCompoundBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getNumEnergyParameterDerivatives(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_getNumEnergyParameterDerivatives(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumEnergyParameterDerivatives(const OpenMM_CustomCompoundBondForce*)</code> */
	int OpenMM_CustomCompoundBondForce_getNumEnergyParameterDerivatives(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumTabulatedFunctions(const OpenMM_CustomCompoundBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getNumTabulatedFunctions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_getNumTabulatedFunctions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumTabulatedFunctions(const OpenMM_CustomCompoundBondForce*)</code> */
	int OpenMM_CustomCompoundBondForce_getNumTabulatedFunctions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumFunctions(const OpenMM_CustomCompoundBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getNumFunctions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_getNumFunctions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_getNumFunctions(const OpenMM_CustomCompoundBondForce*)</code> */
	int OpenMM_CustomCompoundBondForce_getNumFunctions(PointerByReference target);
	/**
	 * Original signature : <code>char* OpenMM_CustomCompoundBondForce_getEnergyFunction(const OpenMM_CustomCompoundBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getEnergyFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomCompoundBondForce_getEnergyFunction(Pointer target);
	/** Original signature : <code>char* OpenMM_CustomCompoundBondForce_getEnergyFunction(const OpenMM_CustomCompoundBondForce*)</code> */
	Pointer OpenMM_CustomCompoundBondForce_getEnergyFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_setEnergyFunction(OpenMM_CustomCompoundBondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCompoundBondForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomCompoundBondForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_setEnergyFunction(Pointer target, Pointer energy);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_setEnergyFunction(OpenMM_CustomCompoundBondForce*, const char*)</code> */
	void OpenMM_CustomCompoundBondForce_setEnergyFunction(PointerByReference target, String energy);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_setEnergyFunction(OpenMM_CustomCompoundBondForce*, const char*)</code> */
	void OpenMM_CustomCompoundBondForce_setEnergyFunction(PointerByReference target, Pointer energy);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_addPerBondParameter(OpenMM_CustomCompoundBondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCompoundBondForce_addPerBondParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomCompoundBondForce_addPerBondParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_addPerBondParameter(Pointer target, Pointer name);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_addPerBondParameter(OpenMM_CustomCompoundBondForce*, const char*)</code> */
	int OpenMM_CustomCompoundBondForce_addPerBondParameter(PointerByReference target, String name);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_addPerBondParameter(OpenMM_CustomCompoundBondForce*, const char*)</code> */
	int OpenMM_CustomCompoundBondForce_addPerBondParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomCompoundBondForce_getPerBondParameterName(const OpenMM_CustomCompoundBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getPerBondParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomCompoundBondForce_getPerBondParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomCompoundBondForce_getPerBondParameterName(const OpenMM_CustomCompoundBondForce*, int)</code> */
	Pointer OpenMM_CustomCompoundBondForce_getPerBondParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_setPerBondParameterName(OpenMM_CustomCompoundBondForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCompoundBondForce_setPerBondParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomCompoundBondForce_setPerBondParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_setPerBondParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_setPerBondParameterName(OpenMM_CustomCompoundBondForce*, int, const char*)</code> */
	void OpenMM_CustomCompoundBondForce_setPerBondParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_setPerBondParameterName(OpenMM_CustomCompoundBondForce*, int, const char*)</code> */
	void OpenMM_CustomCompoundBondForce_setPerBondParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_addGlobalParameter(OpenMM_CustomCompoundBondForce*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCompoundBondForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomCompoundBondForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_addGlobalParameter(Pointer target, Pointer name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_addGlobalParameter(OpenMM_CustomCompoundBondForce*, const char*, double)</code> */
	int OpenMM_CustomCompoundBondForce_addGlobalParameter(PointerByReference target, String name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_addGlobalParameter(OpenMM_CustomCompoundBondForce*, const char*, double)</code> */
	int OpenMM_CustomCompoundBondForce_addGlobalParameter(PointerByReference target, Pointer name, double defaultValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomCompoundBondForce_getGlobalParameterName(const OpenMM_CustomCompoundBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getGlobalParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomCompoundBondForce_getGlobalParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomCompoundBondForce_getGlobalParameterName(const OpenMM_CustomCompoundBondForce*, int)</code> */
	Pointer OpenMM_CustomCompoundBondForce_getGlobalParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_setGlobalParameterName(OpenMM_CustomCompoundBondForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCompoundBondForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomCompoundBondForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_setGlobalParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_setGlobalParameterName(OpenMM_CustomCompoundBondForce*, int, const char*)</code> */
	void OpenMM_CustomCompoundBondForce_setGlobalParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_setGlobalParameterName(OpenMM_CustomCompoundBondForce*, int, const char*)</code> */
	void OpenMM_CustomCompoundBondForce_setGlobalParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>double OpenMM_CustomCompoundBondForce_getGlobalParameterDefaultValue(const OpenMM_CustomCompoundBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_CustomCompoundBondForce_getGlobalParameterDefaultValue(Pointer target, int index);
	/** Original signature : <code>double OpenMM_CustomCompoundBondForce_getGlobalParameterDefaultValue(const OpenMM_CustomCompoundBondForce*, int)</code> */
	double OpenMM_CustomCompoundBondForce_getGlobalParameterDefaultValue(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_setGlobalParameterDefaultValue(OpenMM_CustomCompoundBondForce*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_setGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_setGlobalParameterDefaultValue(Pointer target, int index, double defaultValue);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_setGlobalParameterDefaultValue(OpenMM_CustomCompoundBondForce*, int, double)</code> */
	void OpenMM_CustomCompoundBondForce_setGlobalParameterDefaultValue(PointerByReference target, int index, double defaultValue);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_addEnergyParameterDerivative(OpenMM_CustomCompoundBondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCompoundBondForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomCompoundBondForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_addEnergyParameterDerivative(Pointer target, Pointer name);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_addEnergyParameterDerivative(OpenMM_CustomCompoundBondForce*, const char*)</code> */
	void OpenMM_CustomCompoundBondForce_addEnergyParameterDerivative(PointerByReference target, String name);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_addEnergyParameterDerivative(OpenMM_CustomCompoundBondForce*, const char*)</code> */
	void OpenMM_CustomCompoundBondForce_addEnergyParameterDerivative(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomCompoundBondForce_getEnergyParameterDerivativeName(const OpenMM_CustomCompoundBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getEnergyParameterDerivativeName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomCompoundBondForce_getEnergyParameterDerivativeName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomCompoundBondForce_getEnergyParameterDerivativeName(const OpenMM_CustomCompoundBondForce*, int)</code> */
	Pointer OpenMM_CustomCompoundBondForce_getEnergyParameterDerivativeName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_addBond(OpenMM_CustomCompoundBondForce*, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_addBond(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_addBond(Pointer target, Pointer particles, Pointer parameters);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_addBond(OpenMM_CustomCompoundBondForce*, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CustomCompoundBondForce_addBond(PointerByReference target, PointerByReference particles, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_getBondParameters(const OpenMM_CustomCompoundBondForce*, int, OpenMM_IntArray*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getBondParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_getBondParameters(Pointer target, int index, Pointer particles, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_getBondParameters(const OpenMM_CustomCompoundBondForce*, int, OpenMM_IntArray*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomCompoundBondForce_getBondParameters(PointerByReference target, int index, PointerByReference particles, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_setBondParameters(OpenMM_CustomCompoundBondForce*, int, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_setBondParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_setBondParameters(Pointer target, int index, Pointer particles, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_setBondParameters(OpenMM_CustomCompoundBondForce*, int, const OpenMM_IntArray*, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomCompoundBondForce_setBondParameters(PointerByReference target, int index, PointerByReference particles, PointerByReference parameters);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_addTabulatedFunction(OpenMM_CustomCompoundBondForce*, const char*, OpenMM_TabulatedFunction*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCompoundBondForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomCompoundBondForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_addTabulatedFunction(Pointer target, Pointer name, Pointer function);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_addTabulatedFunction(OpenMM_CustomCompoundBondForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomCompoundBondForce_addTabulatedFunction(PointerByReference target, String name, PointerByReference function);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_addTabulatedFunction(OpenMM_CustomCompoundBondForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomCompoundBondForce_addTabulatedFunction(PointerByReference target, Pointer name, PointerByReference function);
	/**
	 * Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomCompoundBondForce_getTabulatedFunction(OpenMM_CustomCompoundBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getTabulatedFunction(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomCompoundBondForce_getTabulatedFunction(Pointer target, int index);
	/** Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomCompoundBondForce_getTabulatedFunction(OpenMM_CustomCompoundBondForce*, int)</code> */
	PointerByReference OpenMM_CustomCompoundBondForce_getTabulatedFunction(PointerByReference target, int index);
	/**
	 * Original signature : <code>char* OpenMM_CustomCompoundBondForce_getTabulatedFunctionName(const OpenMM_CustomCompoundBondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_getTabulatedFunctionName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomCompoundBondForce_getTabulatedFunctionName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomCompoundBondForce_getTabulatedFunctionName(const OpenMM_CustomCompoundBondForce*, int)</code> */
	Pointer OpenMM_CustomCompoundBondForce_getTabulatedFunctionName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomCompoundBondForce_addFunction(OpenMM_CustomCompoundBondForce*, const char*, const OpenMM_DoubleArray*, double, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCompoundBondForce_addFunction(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference, double, double)} and {@link #OpenMM_CustomCompoundBondForce_addFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, double, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_addFunction(Pointer target, Pointer name, Pointer values, double min, double max);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_addFunction(OpenMM_CustomCompoundBondForce*, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	int OpenMM_CustomCompoundBondForce_addFunction(PointerByReference target, String name, PointerByReference values, double min, double max);
	/** Original signature : <code>int OpenMM_CustomCompoundBondForce_addFunction(OpenMM_CustomCompoundBondForce*, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	int OpenMM_CustomCompoundBondForce_addFunction(PointerByReference target, Pointer name, PointerByReference values, double min, double max);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_getFunctionParameters(const OpenMM_CustomCompoundBondForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCompoundBondForce_getFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_CustomCompoundBondForce_getFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_getFunctionParameters(Pointer target, int index, PointerByReference name, Pointer values, DoubleByReference min, DoubleByReference max);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_getFunctionParameters(const OpenMM_CustomCompoundBondForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code> */
	void OpenMM_CustomCompoundBondForce_getFunctionParameters(PointerByReference target, int index, PointerByReference name, PointerByReference values, DoubleBuffer min, DoubleBuffer max);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_getFunctionParameters(const OpenMM_CustomCompoundBondForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code> */
	void OpenMM_CustomCompoundBondForce_getFunctionParameters(PointerByReference target, int index, PointerByReference name, PointerByReference values, DoubleByReference min, DoubleByReference max);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_setFunctionParameters(OpenMM_CustomCompoundBondForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomCompoundBondForce_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, java.lang.String, com.sun.jna.ptr.PointerByReference, double, double)} and {@link #OpenMM_CustomCompoundBondForce_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_setFunctionParameters(Pointer target, int index, Pointer name, Pointer values, double min, double max);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_setFunctionParameters(OpenMM_CustomCompoundBondForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	void OpenMM_CustomCompoundBondForce_setFunctionParameters(PointerByReference target, int index, String name, PointerByReference values, double min, double max);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_setFunctionParameters(OpenMM_CustomCompoundBondForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	void OpenMM_CustomCompoundBondForce_setFunctionParameters(PointerByReference target, int index, Pointer name, PointerByReference values, double min, double max);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_updateParametersInContext(OpenMM_CustomCompoundBondForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_updateParametersInContext(OpenMM_CustomCompoundBondForce*, OpenMM_Context*)</code> */
	void OpenMM_CustomCompoundBondForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>void OpenMM_CustomCompoundBondForce_setUsesPeriodicBoundaryConditions(OpenMM_CustomCompoundBondForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_setUsesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomCompoundBondForce_setUsesPeriodicBoundaryConditions(Pointer target, int periodic);
	/** Original signature : <code>void OpenMM_CustomCompoundBondForce_setUsesPeriodicBoundaryConditions(OpenMM_CustomCompoundBondForce*, OpenMM_Boolean)</code> */
	void OpenMM_CustomCompoundBondForce_setUsesPeriodicBoundaryConditions(PointerByReference target, int periodic);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomCompoundBondForce_usesPeriodicBoundaryConditions(const OpenMM_CustomCompoundBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomCompoundBondForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomCompoundBondForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomCompoundBondForce_usesPeriodicBoundaryConditions(const OpenMM_CustomCompoundBondForce*)</code> */
	int OpenMM_CustomCompoundBondForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * CustomExternalForce<br>
	 * Original signature : <code>OpenMM_CustomExternalForce* OpenMM_CustomExternalForce_create(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomExternalForce_create(java.lang.String)} and {@link #OpenMM_CustomExternalForce_create(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomExternalForce_create(Pointer energy);
	/**
	 * CustomExternalForce<br>
	 * Original signature : <code>OpenMM_CustomExternalForce* OpenMM_CustomExternalForce_create(const char*)</code>
	 */
	PointerByReference OpenMM_CustomExternalForce_create(String energy);
	/**
	 * Original signature : <code>void OpenMM_CustomExternalForce_destroy(OpenMM_CustomExternalForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomExternalForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CustomExternalForce_destroy(OpenMM_CustomExternalForce*)</code> */
	void OpenMM_CustomExternalForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomExternalForce_getNumParticles(const OpenMM_CustomExternalForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_getNumParticles(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomExternalForce_getNumParticles(Pointer target);
	/** Original signature : <code>int OpenMM_CustomExternalForce_getNumParticles(const OpenMM_CustomExternalForce*)</code> */
	int OpenMM_CustomExternalForce_getNumParticles(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomExternalForce_getNumPerParticleParameters(const OpenMM_CustomExternalForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_getNumPerParticleParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomExternalForce_getNumPerParticleParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomExternalForce_getNumPerParticleParameters(const OpenMM_CustomExternalForce*)</code> */
	int OpenMM_CustomExternalForce_getNumPerParticleParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomExternalForce_getNumGlobalParameters(const OpenMM_CustomExternalForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_getNumGlobalParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomExternalForce_getNumGlobalParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomExternalForce_getNumGlobalParameters(const OpenMM_CustomExternalForce*)</code> */
	int OpenMM_CustomExternalForce_getNumGlobalParameters(PointerByReference target);
	/**
	 * Original signature : <code>char* OpenMM_CustomExternalForce_getEnergyFunction(const OpenMM_CustomExternalForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_getEnergyFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomExternalForce_getEnergyFunction(Pointer target);
	/** Original signature : <code>char* OpenMM_CustomExternalForce_getEnergyFunction(const OpenMM_CustomExternalForce*)</code> */
	Pointer OpenMM_CustomExternalForce_getEnergyFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomExternalForce_setEnergyFunction(OpenMM_CustomExternalForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomExternalForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomExternalForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomExternalForce_setEnergyFunction(Pointer target, Pointer energy);
	/** Original signature : <code>void OpenMM_CustomExternalForce_setEnergyFunction(OpenMM_CustomExternalForce*, const char*)</code> */
	void OpenMM_CustomExternalForce_setEnergyFunction(PointerByReference target, String energy);
	/** Original signature : <code>void OpenMM_CustomExternalForce_setEnergyFunction(OpenMM_CustomExternalForce*, const char*)</code> */
	void OpenMM_CustomExternalForce_setEnergyFunction(PointerByReference target, Pointer energy);
	/**
	 * Original signature : <code>int OpenMM_CustomExternalForce_addPerParticleParameter(OpenMM_CustomExternalForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomExternalForce_addPerParticleParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomExternalForce_addPerParticleParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomExternalForce_addPerParticleParameter(Pointer target, Pointer name);
	/** Original signature : <code>int OpenMM_CustomExternalForce_addPerParticleParameter(OpenMM_CustomExternalForce*, const char*)</code> */
	int OpenMM_CustomExternalForce_addPerParticleParameter(PointerByReference target, String name);
	/** Original signature : <code>int OpenMM_CustomExternalForce_addPerParticleParameter(OpenMM_CustomExternalForce*, const char*)</code> */
	int OpenMM_CustomExternalForce_addPerParticleParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomExternalForce_getPerParticleParameterName(const OpenMM_CustomExternalForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_getPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomExternalForce_getPerParticleParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomExternalForce_getPerParticleParameterName(const OpenMM_CustomExternalForce*, int)</code> */
	Pointer OpenMM_CustomExternalForce_getPerParticleParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomExternalForce_setPerParticleParameterName(OpenMM_CustomExternalForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomExternalForce_setPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomExternalForce_setPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomExternalForce_setPerParticleParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomExternalForce_setPerParticleParameterName(OpenMM_CustomExternalForce*, int, const char*)</code> */
	void OpenMM_CustomExternalForce_setPerParticleParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomExternalForce_setPerParticleParameterName(OpenMM_CustomExternalForce*, int, const char*)</code> */
	void OpenMM_CustomExternalForce_setPerParticleParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>int OpenMM_CustomExternalForce_addGlobalParameter(OpenMM_CustomExternalForce*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomExternalForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomExternalForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomExternalForce_addGlobalParameter(Pointer target, Pointer name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomExternalForce_addGlobalParameter(OpenMM_CustomExternalForce*, const char*, double)</code> */
	int OpenMM_CustomExternalForce_addGlobalParameter(PointerByReference target, String name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomExternalForce_addGlobalParameter(OpenMM_CustomExternalForce*, const char*, double)</code> */
	int OpenMM_CustomExternalForce_addGlobalParameter(PointerByReference target, Pointer name, double defaultValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomExternalForce_getGlobalParameterName(const OpenMM_CustomExternalForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_getGlobalParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomExternalForce_getGlobalParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomExternalForce_getGlobalParameterName(const OpenMM_CustomExternalForce*, int)</code> */
	Pointer OpenMM_CustomExternalForce_getGlobalParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomExternalForce_setGlobalParameterName(OpenMM_CustomExternalForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomExternalForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomExternalForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomExternalForce_setGlobalParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomExternalForce_setGlobalParameterName(OpenMM_CustomExternalForce*, int, const char*)</code> */
	void OpenMM_CustomExternalForce_setGlobalParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomExternalForce_setGlobalParameterName(OpenMM_CustomExternalForce*, int, const char*)</code> */
	void OpenMM_CustomExternalForce_setGlobalParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>double OpenMM_CustomExternalForce_getGlobalParameterDefaultValue(const OpenMM_CustomExternalForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_getGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_CustomExternalForce_getGlobalParameterDefaultValue(Pointer target, int index);
	/** Original signature : <code>double OpenMM_CustomExternalForce_getGlobalParameterDefaultValue(const OpenMM_CustomExternalForce*, int)</code> */
	double OpenMM_CustomExternalForce_getGlobalParameterDefaultValue(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomExternalForce_setGlobalParameterDefaultValue(OpenMM_CustomExternalForce*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_setGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomExternalForce_setGlobalParameterDefaultValue(Pointer target, int index, double defaultValue);
	/** Original signature : <code>void OpenMM_CustomExternalForce_setGlobalParameterDefaultValue(OpenMM_CustomExternalForce*, int, double)</code> */
	void OpenMM_CustomExternalForce_setGlobalParameterDefaultValue(PointerByReference target, int index, double defaultValue);
	/**
	 * Original signature : <code>int OpenMM_CustomExternalForce_addParticle(OpenMM_CustomExternalForce*, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_addParticle(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomExternalForce_addParticle(Pointer target, int particle, Pointer parameters);
	/** Original signature : <code>int OpenMM_CustomExternalForce_addParticle(OpenMM_CustomExternalForce*, int, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CustomExternalForce_addParticle(PointerByReference target, int particle, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomExternalForce_getParticleParameters(const OpenMM_CustomExternalForce*, int, int*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomExternalForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomExternalForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomExternalForce_getParticleParameters(Pointer target, int index, IntByReference particle, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomExternalForce_getParticleParameters(const OpenMM_CustomExternalForce*, int, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomExternalForce_getParticleParameters(PointerByReference target, int index, IntBuffer particle, PointerByReference parameters);
	/** Original signature : <code>void OpenMM_CustomExternalForce_getParticleParameters(const OpenMM_CustomExternalForce*, int, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomExternalForce_getParticleParameters(PointerByReference target, int index, IntByReference particle, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomExternalForce_setParticleParameters(OpenMM_CustomExternalForce*, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_setParticleParameters(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomExternalForce_setParticleParameters(Pointer target, int index, int particle, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomExternalForce_setParticleParameters(OpenMM_CustomExternalForce*, int, int, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomExternalForce_setParticleParameters(PointerByReference target, int index, int particle, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomExternalForce_updateParametersInContext(OpenMM_CustomExternalForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomExternalForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_CustomExternalForce_updateParametersInContext(OpenMM_CustomExternalForce*, OpenMM_Context*)</code> */
	void OpenMM_CustomExternalForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomExternalForce_usesPeriodicBoundaryConditions(const OpenMM_CustomExternalForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomExternalForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomExternalForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomExternalForce_usesPeriodicBoundaryConditions(const OpenMM_CustomExternalForce*)</code> */
	int OpenMM_CustomExternalForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/** Original signature : <code>OpenMM_CustomGBForce* OpenMM_CustomGBForce_create()</code> */
	PointerByReference OpenMM_CustomGBForce_create();
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_destroy(OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CustomGBForce_destroy(OpenMM_CustomGBForce*)</code> */
	void OpenMM_CustomGBForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_getNumParticles(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getNumParticles(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_getNumParticles(Pointer target);
	/** Original signature : <code>int OpenMM_CustomGBForce_getNumParticles(const OpenMM_CustomGBForce*)</code> */
	int OpenMM_CustomGBForce_getNumParticles(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_getNumExclusions(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getNumExclusions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_getNumExclusions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomGBForce_getNumExclusions(const OpenMM_CustomGBForce*)</code> */
	int OpenMM_CustomGBForce_getNumExclusions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_getNumPerParticleParameters(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getNumPerParticleParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_getNumPerParticleParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomGBForce_getNumPerParticleParameters(const OpenMM_CustomGBForce*)</code> */
	int OpenMM_CustomGBForce_getNumPerParticleParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_getNumGlobalParameters(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getNumGlobalParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_getNumGlobalParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomGBForce_getNumGlobalParameters(const OpenMM_CustomGBForce*)</code> */
	int OpenMM_CustomGBForce_getNumGlobalParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_getNumEnergyParameterDerivatives(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getNumEnergyParameterDerivatives(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_getNumEnergyParameterDerivatives(Pointer target);
	/** Original signature : <code>int OpenMM_CustomGBForce_getNumEnergyParameterDerivatives(const OpenMM_CustomGBForce*)</code> */
	int OpenMM_CustomGBForce_getNumEnergyParameterDerivatives(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_getNumTabulatedFunctions(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getNumTabulatedFunctions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_getNumTabulatedFunctions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomGBForce_getNumTabulatedFunctions(const OpenMM_CustomGBForce*)</code> */
	int OpenMM_CustomGBForce_getNumTabulatedFunctions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_getNumFunctions(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getNumFunctions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_getNumFunctions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomGBForce_getNumFunctions(const OpenMM_CustomGBForce*)</code> */
	int OpenMM_CustomGBForce_getNumFunctions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_getNumComputedValues(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getNumComputedValues(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_getNumComputedValues(Pointer target);
	/** Original signature : <code>int OpenMM_CustomGBForce_getNumComputedValues(const OpenMM_CustomGBForce*)</code> */
	int OpenMM_CustomGBForce_getNumComputedValues(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_getNumEnergyTerms(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getNumEnergyTerms(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_getNumEnergyTerms(Pointer target);
	/** Original signature : <code>int OpenMM_CustomGBForce_getNumEnergyTerms(const OpenMM_CustomGBForce*)</code> */
	int OpenMM_CustomGBForce_getNumEnergyTerms(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_CustomGBForce_NonbondedMethod OpenMM_CustomGBForce_getNonbondedMethod(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getNonbondedMethod(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_getNonbondedMethod(Pointer target);
	/** Original signature : <code>OpenMM_CustomGBForce_NonbondedMethod OpenMM_CustomGBForce_getNonbondedMethod(const OpenMM_CustomGBForce*)</code> */
	int OpenMM_CustomGBForce_getNonbondedMethod(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_setNonbondedMethod(OpenMM_CustomGBForce*, OpenMM_CustomGBForce_NonbondedMethod)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_setNonbondedMethod(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_setNonbondedMethod(Pointer target, int method);
	/** Original signature : <code>void OpenMM_CustomGBForce_setNonbondedMethod(OpenMM_CustomGBForce*, OpenMM_CustomGBForce_NonbondedMethod)</code> */
	void OpenMM_CustomGBForce_setNonbondedMethod(PointerByReference target, int method);
	/**
	 * Original signature : <code>double OpenMM_CustomGBForce_getCutoffDistance(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getCutoffDistance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_CustomGBForce_getCutoffDistance(Pointer target);
	/** Original signature : <code>double OpenMM_CustomGBForce_getCutoffDistance(const OpenMM_CustomGBForce*)</code> */
	double OpenMM_CustomGBForce_getCutoffDistance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_setCutoffDistance(OpenMM_CustomGBForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_setCutoffDistance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_setCutoffDistance(Pointer target, double distance);
	/** Original signature : <code>void OpenMM_CustomGBForce_setCutoffDistance(OpenMM_CustomGBForce*, double)</code> */
	void OpenMM_CustomGBForce_setCutoffDistance(PointerByReference target, double distance);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_addPerParticleParameter(OpenMM_CustomGBForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_addPerParticleParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomGBForce_addPerParticleParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_addPerParticleParameter(Pointer target, Pointer name);
	/** Original signature : <code>int OpenMM_CustomGBForce_addPerParticleParameter(OpenMM_CustomGBForce*, const char*)</code> */
	int OpenMM_CustomGBForce_addPerParticleParameter(PointerByReference target, String name);
	/** Original signature : <code>int OpenMM_CustomGBForce_addPerParticleParameter(OpenMM_CustomGBForce*, const char*)</code> */
	int OpenMM_CustomGBForce_addPerParticleParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomGBForce_getPerParticleParameterName(const OpenMM_CustomGBForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomGBForce_getPerParticleParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomGBForce_getPerParticleParameterName(const OpenMM_CustomGBForce*, int)</code> */
	Pointer OpenMM_CustomGBForce_getPerParticleParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_setPerParticleParameterName(OpenMM_CustomGBForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_setPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomGBForce_setPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_setPerParticleParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomGBForce_setPerParticleParameterName(OpenMM_CustomGBForce*, int, const char*)</code> */
	void OpenMM_CustomGBForce_setPerParticleParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomGBForce_setPerParticleParameterName(OpenMM_CustomGBForce*, int, const char*)</code> */
	void OpenMM_CustomGBForce_setPerParticleParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_addGlobalParameter(OpenMM_CustomGBForce*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomGBForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_addGlobalParameter(Pointer target, Pointer name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomGBForce_addGlobalParameter(OpenMM_CustomGBForce*, const char*, double)</code> */
	int OpenMM_CustomGBForce_addGlobalParameter(PointerByReference target, String name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomGBForce_addGlobalParameter(OpenMM_CustomGBForce*, const char*, double)</code> */
	int OpenMM_CustomGBForce_addGlobalParameter(PointerByReference target, Pointer name, double defaultValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomGBForce_getGlobalParameterName(const OpenMM_CustomGBForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getGlobalParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomGBForce_getGlobalParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomGBForce_getGlobalParameterName(const OpenMM_CustomGBForce*, int)</code> */
	Pointer OpenMM_CustomGBForce_getGlobalParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_setGlobalParameterName(OpenMM_CustomGBForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomGBForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_setGlobalParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomGBForce_setGlobalParameterName(OpenMM_CustomGBForce*, int, const char*)</code> */
	void OpenMM_CustomGBForce_setGlobalParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomGBForce_setGlobalParameterName(OpenMM_CustomGBForce*, int, const char*)</code> */
	void OpenMM_CustomGBForce_setGlobalParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>double OpenMM_CustomGBForce_getGlobalParameterDefaultValue(const OpenMM_CustomGBForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_CustomGBForce_getGlobalParameterDefaultValue(Pointer target, int index);
	/** Original signature : <code>double OpenMM_CustomGBForce_getGlobalParameterDefaultValue(const OpenMM_CustomGBForce*, int)</code> */
	double OpenMM_CustomGBForce_getGlobalParameterDefaultValue(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_setGlobalParameterDefaultValue(OpenMM_CustomGBForce*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_setGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_setGlobalParameterDefaultValue(Pointer target, int index, double defaultValue);
	/** Original signature : <code>void OpenMM_CustomGBForce_setGlobalParameterDefaultValue(OpenMM_CustomGBForce*, int, double)</code> */
	void OpenMM_CustomGBForce_setGlobalParameterDefaultValue(PointerByReference target, int index, double defaultValue);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_addEnergyParameterDerivative(OpenMM_CustomGBForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomGBForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_addEnergyParameterDerivative(Pointer target, Pointer name);
	/** Original signature : <code>void OpenMM_CustomGBForce_addEnergyParameterDerivative(OpenMM_CustomGBForce*, const char*)</code> */
	void OpenMM_CustomGBForce_addEnergyParameterDerivative(PointerByReference target, String name);
	/** Original signature : <code>void OpenMM_CustomGBForce_addEnergyParameterDerivative(OpenMM_CustomGBForce*, const char*)</code> */
	void OpenMM_CustomGBForce_addEnergyParameterDerivative(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomGBForce_getEnergyParameterDerivativeName(const OpenMM_CustomGBForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getEnergyParameterDerivativeName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomGBForce_getEnergyParameterDerivativeName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomGBForce_getEnergyParameterDerivativeName(const OpenMM_CustomGBForce*, int)</code> */
	Pointer OpenMM_CustomGBForce_getEnergyParameterDerivativeName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_addParticle(OpenMM_CustomGBForce*, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_addParticle(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_addParticle(Pointer target, Pointer parameters);
	/** Original signature : <code>int OpenMM_CustomGBForce_addParticle(OpenMM_CustomGBForce*, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CustomGBForce_addParticle(PointerByReference target, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_getParticleParameters(const OpenMM_CustomGBForce*, int, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_getParticleParameters(Pointer target, int index, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomGBForce_getParticleParameters(const OpenMM_CustomGBForce*, int, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomGBForce_getParticleParameters(PointerByReference target, int index, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_setParticleParameters(OpenMM_CustomGBForce*, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_setParticleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_setParticleParameters(Pointer target, int index, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomGBForce_setParticleParameters(OpenMM_CustomGBForce*, int, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomGBForce_setParticleParameters(PointerByReference target, int index, PointerByReference parameters);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_addComputedValue(OpenMM_CustomGBForce*, const char*, const char*, OpenMM_CustomGBForce_ComputationType)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_addComputedValue(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, int)} and {@link #OpenMM_CustomGBForce_addComputedValue(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_addComputedValue(Pointer target, Pointer name, Pointer expression, int type);
	/** Original signature : <code>int OpenMM_CustomGBForce_addComputedValue(OpenMM_CustomGBForce*, const char*, const char*, OpenMM_CustomGBForce_ComputationType)</code> */
	int OpenMM_CustomGBForce_addComputedValue(PointerByReference target, String name, String expression, int type);
	/** Original signature : <code>int OpenMM_CustomGBForce_addComputedValue(OpenMM_CustomGBForce*, const char*, const char*, OpenMM_CustomGBForce_ComputationType)</code> */
	int OpenMM_CustomGBForce_addComputedValue(PointerByReference target, Pointer name, Pointer expression, int type);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_getComputedValueParameters(const OpenMM_CustomGBForce*, int, char**, char**, OpenMM_CustomGBForce_ComputationType*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_getComputedValueParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #OpenMM_CustomGBForce_getComputedValueParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_getComputedValueParameters(Pointer target, int index, PointerByReference name, PointerByReference expression, IntByReference type);
	/** Original signature : <code>void OpenMM_CustomGBForce_getComputedValueParameters(const OpenMM_CustomGBForce*, int, char**, char**, OpenMM_CustomGBForce_ComputationType*)</code> */
	void OpenMM_CustomGBForce_getComputedValueParameters(PointerByReference target, int index, PointerByReference name, PointerByReference expression, IntBuffer type);
	/** Original signature : <code>void OpenMM_CustomGBForce_getComputedValueParameters(const OpenMM_CustomGBForce*, int, char**, char**, OpenMM_CustomGBForce_ComputationType*)</code> */
	void OpenMM_CustomGBForce_getComputedValueParameters(PointerByReference target, int index, PointerByReference name, PointerByReference expression, IntByReference type);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_setComputedValueParameters(OpenMM_CustomGBForce*, int, const char*, const char*, OpenMM_CustomGBForce_ComputationType)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_setComputedValueParameters(com.sun.jna.ptr.PointerByReference, int, java.lang.String, java.lang.String, int)} and {@link #OpenMM_CustomGBForce_setComputedValueParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_setComputedValueParameters(Pointer target, int index, Pointer name, Pointer expression, int type);
	/** Original signature : <code>void OpenMM_CustomGBForce_setComputedValueParameters(OpenMM_CustomGBForce*, int, const char*, const char*, OpenMM_CustomGBForce_ComputationType)</code> */
	void OpenMM_CustomGBForce_setComputedValueParameters(PointerByReference target, int index, String name, String expression, int type);
	/** Original signature : <code>void OpenMM_CustomGBForce_setComputedValueParameters(OpenMM_CustomGBForce*, int, const char*, const char*, OpenMM_CustomGBForce_ComputationType)</code> */
	void OpenMM_CustomGBForce_setComputedValueParameters(PointerByReference target, int index, Pointer name, Pointer expression, int type);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_addEnergyTerm(OpenMM_CustomGBForce*, const char*, OpenMM_CustomGBForce_ComputationType)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_addEnergyTerm(com.sun.jna.ptr.PointerByReference, java.lang.String, int)} and {@link #OpenMM_CustomGBForce_addEnergyTerm(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_addEnergyTerm(Pointer target, Pointer expression, int type);
	/** Original signature : <code>int OpenMM_CustomGBForce_addEnergyTerm(OpenMM_CustomGBForce*, const char*, OpenMM_CustomGBForce_ComputationType)</code> */
	int OpenMM_CustomGBForce_addEnergyTerm(PointerByReference target, String expression, int type);
	/** Original signature : <code>int OpenMM_CustomGBForce_addEnergyTerm(OpenMM_CustomGBForce*, const char*, OpenMM_CustomGBForce_ComputationType)</code> */
	int OpenMM_CustomGBForce_addEnergyTerm(PointerByReference target, Pointer expression, int type);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_getEnergyTermParameters(const OpenMM_CustomGBForce*, int, char**, OpenMM_CustomGBForce_ComputationType*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_getEnergyTermParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #OpenMM_CustomGBForce_getEnergyTermParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_getEnergyTermParameters(Pointer target, int index, PointerByReference expression, IntByReference type);
	/** Original signature : <code>void OpenMM_CustomGBForce_getEnergyTermParameters(const OpenMM_CustomGBForce*, int, char**, OpenMM_CustomGBForce_ComputationType*)</code> */
	void OpenMM_CustomGBForce_getEnergyTermParameters(PointerByReference target, int index, PointerByReference expression, IntBuffer type);
	/** Original signature : <code>void OpenMM_CustomGBForce_getEnergyTermParameters(const OpenMM_CustomGBForce*, int, char**, OpenMM_CustomGBForce_ComputationType*)</code> */
	void OpenMM_CustomGBForce_getEnergyTermParameters(PointerByReference target, int index, PointerByReference expression, IntByReference type);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_setEnergyTermParameters(OpenMM_CustomGBForce*, int, const char*, OpenMM_CustomGBForce_ComputationType)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_setEnergyTermParameters(com.sun.jna.ptr.PointerByReference, int, java.lang.String, int)} and {@link #OpenMM_CustomGBForce_setEnergyTermParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_setEnergyTermParameters(Pointer target, int index, Pointer expression, int type);
	/** Original signature : <code>void OpenMM_CustomGBForce_setEnergyTermParameters(OpenMM_CustomGBForce*, int, const char*, OpenMM_CustomGBForce_ComputationType)</code> */
	void OpenMM_CustomGBForce_setEnergyTermParameters(PointerByReference target, int index, String expression, int type);
	/** Original signature : <code>void OpenMM_CustomGBForce_setEnergyTermParameters(OpenMM_CustomGBForce*, int, const char*, OpenMM_CustomGBForce_ComputationType)</code> */
	void OpenMM_CustomGBForce_setEnergyTermParameters(PointerByReference target, int index, Pointer expression, int type);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_addExclusion(OpenMM_CustomGBForce*, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_addExclusion(com.sun.jna.ptr.PointerByReference, int, int)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_addExclusion(Pointer target, int particle1, int particle2);
	/** Original signature : <code>int OpenMM_CustomGBForce_addExclusion(OpenMM_CustomGBForce*, int, int)</code> */
	int OpenMM_CustomGBForce_addExclusion(PointerByReference target, int particle1, int particle2);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_getExclusionParticles(const OpenMM_CustomGBForce*, int, int*, int*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_getExclusionParticles(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #OpenMM_CustomGBForce_getExclusionParticles(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_getExclusionParticles(Pointer target, int index, IntByReference particle1, IntByReference particle2);
	/** Original signature : <code>void OpenMM_CustomGBForce_getExclusionParticles(const OpenMM_CustomGBForce*, int, int*, int*)</code> */
	void OpenMM_CustomGBForce_getExclusionParticles(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2);
	/** Original signature : <code>void OpenMM_CustomGBForce_getExclusionParticles(const OpenMM_CustomGBForce*, int, int*, int*)</code> */
	void OpenMM_CustomGBForce_getExclusionParticles(PointerByReference target, int index, IntByReference particle1, IntByReference particle2);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_setExclusionParticles(OpenMM_CustomGBForce*, int, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_setExclusionParticles(com.sun.jna.ptr.PointerByReference, int, int, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_setExclusionParticles(Pointer target, int index, int particle1, int particle2);
	/** Original signature : <code>void OpenMM_CustomGBForce_setExclusionParticles(OpenMM_CustomGBForce*, int, int, int)</code> */
	void OpenMM_CustomGBForce_setExclusionParticles(PointerByReference target, int index, int particle1, int particle2);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_addTabulatedFunction(OpenMM_CustomGBForce*, const char*, OpenMM_TabulatedFunction*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomGBForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_addTabulatedFunction(Pointer target, Pointer name, Pointer function);
	/** Original signature : <code>int OpenMM_CustomGBForce_addTabulatedFunction(OpenMM_CustomGBForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomGBForce_addTabulatedFunction(PointerByReference target, String name, PointerByReference function);
	/** Original signature : <code>int OpenMM_CustomGBForce_addTabulatedFunction(OpenMM_CustomGBForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomGBForce_addTabulatedFunction(PointerByReference target, Pointer name, PointerByReference function);
	/**
	 * Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomGBForce_getTabulatedFunction(OpenMM_CustomGBForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getTabulatedFunction(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomGBForce_getTabulatedFunction(Pointer target, int index);
	/** Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomGBForce_getTabulatedFunction(OpenMM_CustomGBForce*, int)</code> */
	PointerByReference OpenMM_CustomGBForce_getTabulatedFunction(PointerByReference target, int index);
	/**
	 * Original signature : <code>char* OpenMM_CustomGBForce_getTabulatedFunctionName(const OpenMM_CustomGBForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_getTabulatedFunctionName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomGBForce_getTabulatedFunctionName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomGBForce_getTabulatedFunctionName(const OpenMM_CustomGBForce*, int)</code> */
	Pointer OpenMM_CustomGBForce_getTabulatedFunctionName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomGBForce_addFunction(OpenMM_CustomGBForce*, const char*, const OpenMM_DoubleArray*, double, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_addFunction(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference, double, double)} and {@link #OpenMM_CustomGBForce_addFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, double, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_addFunction(Pointer target, Pointer name, Pointer values, double min, double max);
	/** Original signature : <code>int OpenMM_CustomGBForce_addFunction(OpenMM_CustomGBForce*, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	int OpenMM_CustomGBForce_addFunction(PointerByReference target, String name, PointerByReference values, double min, double max);
	/** Original signature : <code>int OpenMM_CustomGBForce_addFunction(OpenMM_CustomGBForce*, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	int OpenMM_CustomGBForce_addFunction(PointerByReference target, Pointer name, PointerByReference values, double min, double max);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_getFunctionParameters(const OpenMM_CustomGBForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_getFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_CustomGBForce_getFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_getFunctionParameters(Pointer target, int index, PointerByReference name, Pointer values, DoubleByReference min, DoubleByReference max);
	/** Original signature : <code>void OpenMM_CustomGBForce_getFunctionParameters(const OpenMM_CustomGBForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code> */
	void OpenMM_CustomGBForce_getFunctionParameters(PointerByReference target, int index, PointerByReference name, PointerByReference values, DoubleBuffer min, DoubleBuffer max);
	/** Original signature : <code>void OpenMM_CustomGBForce_getFunctionParameters(const OpenMM_CustomGBForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code> */
	void OpenMM_CustomGBForce_getFunctionParameters(PointerByReference target, int index, PointerByReference name, PointerByReference values, DoubleByReference min, DoubleByReference max);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_setFunctionParameters(OpenMM_CustomGBForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomGBForce_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, java.lang.String, com.sun.jna.ptr.PointerByReference, double, double)} and {@link #OpenMM_CustomGBForce_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_setFunctionParameters(Pointer target, int index, Pointer name, Pointer values, double min, double max);
	/** Original signature : <code>void OpenMM_CustomGBForce_setFunctionParameters(OpenMM_CustomGBForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	void OpenMM_CustomGBForce_setFunctionParameters(PointerByReference target, int index, String name, PointerByReference values, double min, double max);
	/** Original signature : <code>void OpenMM_CustomGBForce_setFunctionParameters(OpenMM_CustomGBForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	void OpenMM_CustomGBForce_setFunctionParameters(PointerByReference target, int index, Pointer name, PointerByReference values, double min, double max);
	/**
	 * Original signature : <code>void OpenMM_CustomGBForce_updateParametersInContext(OpenMM_CustomGBForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomGBForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_CustomGBForce_updateParametersInContext(OpenMM_CustomGBForce*, OpenMM_Context*)</code> */
	void OpenMM_CustomGBForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomGBForce_usesPeriodicBoundaryConditions(const OpenMM_CustomGBForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomGBForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomGBForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomGBForce_usesPeriodicBoundaryConditions(const OpenMM_CustomGBForce*)</code> */
	int OpenMM_CustomGBForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_CustomHbondForce* OpenMM_CustomHbondForce_create(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_create(java.lang.String)} and {@link #OpenMM_CustomHbondForce_create(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomHbondForce_create(Pointer energy);
	/** Original signature : <code>OpenMM_CustomHbondForce* OpenMM_CustomHbondForce_create(const char*)</code> */
	PointerByReference OpenMM_CustomHbondForce_create(String energy);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_destroy(OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CustomHbondForce_destroy(OpenMM_CustomHbondForce*)</code> */
	void OpenMM_CustomHbondForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_getNumDonors(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getNumDonors(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_getNumDonors(Pointer target);
	/** Original signature : <code>int OpenMM_CustomHbondForce_getNumDonors(const OpenMM_CustomHbondForce*)</code> */
	int OpenMM_CustomHbondForce_getNumDonors(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_getNumAcceptors(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getNumAcceptors(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_getNumAcceptors(Pointer target);
	/** Original signature : <code>int OpenMM_CustomHbondForce_getNumAcceptors(const OpenMM_CustomHbondForce*)</code> */
	int OpenMM_CustomHbondForce_getNumAcceptors(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_getNumExclusions(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getNumExclusions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_getNumExclusions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomHbondForce_getNumExclusions(const OpenMM_CustomHbondForce*)</code> */
	int OpenMM_CustomHbondForce_getNumExclusions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_getNumPerDonorParameters(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getNumPerDonorParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_getNumPerDonorParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomHbondForce_getNumPerDonorParameters(const OpenMM_CustomHbondForce*)</code> */
	int OpenMM_CustomHbondForce_getNumPerDonorParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_getNumPerAcceptorParameters(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getNumPerAcceptorParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_getNumPerAcceptorParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomHbondForce_getNumPerAcceptorParameters(const OpenMM_CustomHbondForce*)</code> */
	int OpenMM_CustomHbondForce_getNumPerAcceptorParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_getNumGlobalParameters(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getNumGlobalParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_getNumGlobalParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomHbondForce_getNumGlobalParameters(const OpenMM_CustomHbondForce*)</code> */
	int OpenMM_CustomHbondForce_getNumGlobalParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_getNumTabulatedFunctions(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getNumTabulatedFunctions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_getNumTabulatedFunctions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomHbondForce_getNumTabulatedFunctions(const OpenMM_CustomHbondForce*)</code> */
	int OpenMM_CustomHbondForce_getNumTabulatedFunctions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_getNumFunctions(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getNumFunctions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_getNumFunctions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomHbondForce_getNumFunctions(const OpenMM_CustomHbondForce*)</code> */
	int OpenMM_CustomHbondForce_getNumFunctions(PointerByReference target);
	/**
	 * Original signature : <code>char* OpenMM_CustomHbondForce_getEnergyFunction(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getEnergyFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomHbondForce_getEnergyFunction(Pointer target);
	/** Original signature : <code>char* OpenMM_CustomHbondForce_getEnergyFunction(const OpenMM_CustomHbondForce*)</code> */
	Pointer OpenMM_CustomHbondForce_getEnergyFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_setEnergyFunction(OpenMM_CustomHbondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomHbondForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_setEnergyFunction(Pointer target, Pointer energy);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setEnergyFunction(OpenMM_CustomHbondForce*, const char*)</code> */
	void OpenMM_CustomHbondForce_setEnergyFunction(PointerByReference target, String energy);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setEnergyFunction(OpenMM_CustomHbondForce*, const char*)</code> */
	void OpenMM_CustomHbondForce_setEnergyFunction(PointerByReference target, Pointer energy);
	/**
	 * Original signature : <code>OpenMM_CustomHbondForce_NonbondedMethod OpenMM_CustomHbondForce_getNonbondedMethod(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getNonbondedMethod(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_getNonbondedMethod(Pointer target);
	/** Original signature : <code>OpenMM_CustomHbondForce_NonbondedMethod OpenMM_CustomHbondForce_getNonbondedMethod(const OpenMM_CustomHbondForce*)</code> */
	int OpenMM_CustomHbondForce_getNonbondedMethod(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_setNonbondedMethod(OpenMM_CustomHbondForce*, OpenMM_CustomHbondForce_NonbondedMethod)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_setNonbondedMethod(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_setNonbondedMethod(Pointer target, int method);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setNonbondedMethod(OpenMM_CustomHbondForce*, OpenMM_CustomHbondForce_NonbondedMethod)</code> */
	void OpenMM_CustomHbondForce_setNonbondedMethod(PointerByReference target, int method);
	/**
	 * Original signature : <code>double OpenMM_CustomHbondForce_getCutoffDistance(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getCutoffDistance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_CustomHbondForce_getCutoffDistance(Pointer target);
	/** Original signature : <code>double OpenMM_CustomHbondForce_getCutoffDistance(const OpenMM_CustomHbondForce*)</code> */
	double OpenMM_CustomHbondForce_getCutoffDistance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_setCutoffDistance(OpenMM_CustomHbondForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_setCutoffDistance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_setCutoffDistance(Pointer target, double distance);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setCutoffDistance(OpenMM_CustomHbondForce*, double)</code> */
	void OpenMM_CustomHbondForce_setCutoffDistance(PointerByReference target, double distance);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_addPerDonorParameter(OpenMM_CustomHbondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_addPerDonorParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomHbondForce_addPerDonorParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_addPerDonorParameter(Pointer target, Pointer name);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addPerDonorParameter(OpenMM_CustomHbondForce*, const char*)</code> */
	int OpenMM_CustomHbondForce_addPerDonorParameter(PointerByReference target, String name);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addPerDonorParameter(OpenMM_CustomHbondForce*, const char*)</code> */
	int OpenMM_CustomHbondForce_addPerDonorParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomHbondForce_getPerDonorParameterName(const OpenMM_CustomHbondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getPerDonorParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomHbondForce_getPerDonorParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomHbondForce_getPerDonorParameterName(const OpenMM_CustomHbondForce*, int)</code> */
	Pointer OpenMM_CustomHbondForce_getPerDonorParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_setPerDonorParameterName(OpenMM_CustomHbondForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_setPerDonorParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomHbondForce_setPerDonorParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_setPerDonorParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setPerDonorParameterName(OpenMM_CustomHbondForce*, int, const char*)</code> */
	void OpenMM_CustomHbondForce_setPerDonorParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setPerDonorParameterName(OpenMM_CustomHbondForce*, int, const char*)</code> */
	void OpenMM_CustomHbondForce_setPerDonorParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_addPerAcceptorParameter(OpenMM_CustomHbondForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_addPerAcceptorParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomHbondForce_addPerAcceptorParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_addPerAcceptorParameter(Pointer target, Pointer name);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addPerAcceptorParameter(OpenMM_CustomHbondForce*, const char*)</code> */
	int OpenMM_CustomHbondForce_addPerAcceptorParameter(PointerByReference target, String name);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addPerAcceptorParameter(OpenMM_CustomHbondForce*, const char*)</code> */
	int OpenMM_CustomHbondForce_addPerAcceptorParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomHbondForce_getPerAcceptorParameterName(const OpenMM_CustomHbondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getPerAcceptorParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomHbondForce_getPerAcceptorParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomHbondForce_getPerAcceptorParameterName(const OpenMM_CustomHbondForce*, int)</code> */
	Pointer OpenMM_CustomHbondForce_getPerAcceptorParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_setPerAcceptorParameterName(OpenMM_CustomHbondForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_setPerAcceptorParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomHbondForce_setPerAcceptorParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_setPerAcceptorParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setPerAcceptorParameterName(OpenMM_CustomHbondForce*, int, const char*)</code> */
	void OpenMM_CustomHbondForce_setPerAcceptorParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setPerAcceptorParameterName(OpenMM_CustomHbondForce*, int, const char*)</code> */
	void OpenMM_CustomHbondForce_setPerAcceptorParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_addGlobalParameter(OpenMM_CustomHbondForce*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomHbondForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_addGlobalParameter(Pointer target, Pointer name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addGlobalParameter(OpenMM_CustomHbondForce*, const char*, double)</code> */
	int OpenMM_CustomHbondForce_addGlobalParameter(PointerByReference target, String name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addGlobalParameter(OpenMM_CustomHbondForce*, const char*, double)</code> */
	int OpenMM_CustomHbondForce_addGlobalParameter(PointerByReference target, Pointer name, double defaultValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomHbondForce_getGlobalParameterName(const OpenMM_CustomHbondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getGlobalParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomHbondForce_getGlobalParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomHbondForce_getGlobalParameterName(const OpenMM_CustomHbondForce*, int)</code> */
	Pointer OpenMM_CustomHbondForce_getGlobalParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_setGlobalParameterName(OpenMM_CustomHbondForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomHbondForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_setGlobalParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setGlobalParameterName(OpenMM_CustomHbondForce*, int, const char*)</code> */
	void OpenMM_CustomHbondForce_setGlobalParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setGlobalParameterName(OpenMM_CustomHbondForce*, int, const char*)</code> */
	void OpenMM_CustomHbondForce_setGlobalParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>double OpenMM_CustomHbondForce_getGlobalParameterDefaultValue(const OpenMM_CustomHbondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_CustomHbondForce_getGlobalParameterDefaultValue(Pointer target, int index);
	/** Original signature : <code>double OpenMM_CustomHbondForce_getGlobalParameterDefaultValue(const OpenMM_CustomHbondForce*, int)</code> */
	double OpenMM_CustomHbondForce_getGlobalParameterDefaultValue(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_setGlobalParameterDefaultValue(OpenMM_CustomHbondForce*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_setGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_setGlobalParameterDefaultValue(Pointer target, int index, double defaultValue);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setGlobalParameterDefaultValue(OpenMM_CustomHbondForce*, int, double)</code> */
	void OpenMM_CustomHbondForce_setGlobalParameterDefaultValue(PointerByReference target, int index, double defaultValue);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_addDonor(OpenMM_CustomHbondForce*, int, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_addDonor(com.sun.jna.ptr.PointerByReference, int, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_addDonor(Pointer target, int d1, int d2, int d3, Pointer parameters);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addDonor(OpenMM_CustomHbondForce*, int, int, int, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CustomHbondForce_addDonor(PointerByReference target, int d1, int d2, int d3, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_getDonorParameters(const OpenMM_CustomHbondForce*, int, int*, int*, int*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_getDonorParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomHbondForce_getDonorParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_getDonorParameters(Pointer target, int index, IntByReference d1, IntByReference d2, IntByReference d3, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomHbondForce_getDonorParameters(const OpenMM_CustomHbondForce*, int, int*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomHbondForce_getDonorParameters(PointerByReference target, int index, IntBuffer d1, IntBuffer d2, IntBuffer d3, PointerByReference parameters);
	/** Original signature : <code>void OpenMM_CustomHbondForce_getDonorParameters(const OpenMM_CustomHbondForce*, int, int*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomHbondForce_getDonorParameters(PointerByReference target, int index, IntByReference d1, IntByReference d2, IntByReference d3, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_setDonorParameters(OpenMM_CustomHbondForce*, int, int, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_setDonorParameters(com.sun.jna.ptr.PointerByReference, int, int, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_setDonorParameters(Pointer target, int index, int d1, int d2, int d3, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setDonorParameters(OpenMM_CustomHbondForce*, int, int, int, int, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomHbondForce_setDonorParameters(PointerByReference target, int index, int d1, int d2, int d3, PointerByReference parameters);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_addAcceptor(OpenMM_CustomHbondForce*, int, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_addAcceptor(com.sun.jna.ptr.PointerByReference, int, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_addAcceptor(Pointer target, int a1, int a2, int a3, Pointer parameters);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addAcceptor(OpenMM_CustomHbondForce*, int, int, int, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CustomHbondForce_addAcceptor(PointerByReference target, int a1, int a2, int a3, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_getAcceptorParameters(const OpenMM_CustomHbondForce*, int, int*, int*, int*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_getAcceptorParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomHbondForce_getAcceptorParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_getAcceptorParameters(Pointer target, int index, IntByReference a1, IntByReference a2, IntByReference a3, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomHbondForce_getAcceptorParameters(const OpenMM_CustomHbondForce*, int, int*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomHbondForce_getAcceptorParameters(PointerByReference target, int index, IntBuffer a1, IntBuffer a2, IntBuffer a3, PointerByReference parameters);
	/** Original signature : <code>void OpenMM_CustomHbondForce_getAcceptorParameters(const OpenMM_CustomHbondForce*, int, int*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomHbondForce_getAcceptorParameters(PointerByReference target, int index, IntByReference a1, IntByReference a2, IntByReference a3, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_setAcceptorParameters(OpenMM_CustomHbondForce*, int, int, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_setAcceptorParameters(com.sun.jna.ptr.PointerByReference, int, int, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_setAcceptorParameters(Pointer target, int index, int a1, int a2, int a3, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setAcceptorParameters(OpenMM_CustomHbondForce*, int, int, int, int, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomHbondForce_setAcceptorParameters(PointerByReference target, int index, int a1, int a2, int a3, PointerByReference parameters);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_addExclusion(OpenMM_CustomHbondForce*, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_addExclusion(com.sun.jna.ptr.PointerByReference, int, int)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_addExclusion(Pointer target, int donor, int acceptor);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addExclusion(OpenMM_CustomHbondForce*, int, int)</code> */
	int OpenMM_CustomHbondForce_addExclusion(PointerByReference target, int donor, int acceptor);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_getExclusionParticles(const OpenMM_CustomHbondForce*, int, int*, int*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_getExclusionParticles(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #OpenMM_CustomHbondForce_getExclusionParticles(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_getExclusionParticles(Pointer target, int index, IntByReference donor, IntByReference acceptor);
	/** Original signature : <code>void OpenMM_CustomHbondForce_getExclusionParticles(const OpenMM_CustomHbondForce*, int, int*, int*)</code> */
	void OpenMM_CustomHbondForce_getExclusionParticles(PointerByReference target, int index, IntBuffer donor, IntBuffer acceptor);
	/** Original signature : <code>void OpenMM_CustomHbondForce_getExclusionParticles(const OpenMM_CustomHbondForce*, int, int*, int*)</code> */
	void OpenMM_CustomHbondForce_getExclusionParticles(PointerByReference target, int index, IntByReference donor, IntByReference acceptor);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_setExclusionParticles(OpenMM_CustomHbondForce*, int, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_setExclusionParticles(com.sun.jna.ptr.PointerByReference, int, int, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_setExclusionParticles(Pointer target, int index, int donor, int acceptor);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setExclusionParticles(OpenMM_CustomHbondForce*, int, int, int)</code> */
	void OpenMM_CustomHbondForce_setExclusionParticles(PointerByReference target, int index, int donor, int acceptor);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_addTabulatedFunction(OpenMM_CustomHbondForce*, const char*, OpenMM_TabulatedFunction*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomHbondForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_addTabulatedFunction(Pointer target, Pointer name, Pointer function);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addTabulatedFunction(OpenMM_CustomHbondForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomHbondForce_addTabulatedFunction(PointerByReference target, String name, PointerByReference function);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addTabulatedFunction(OpenMM_CustomHbondForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomHbondForce_addTabulatedFunction(PointerByReference target, Pointer name, PointerByReference function);
	/**
	 * Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomHbondForce_getTabulatedFunction(OpenMM_CustomHbondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getTabulatedFunction(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomHbondForce_getTabulatedFunction(Pointer target, int index);
	/** Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomHbondForce_getTabulatedFunction(OpenMM_CustomHbondForce*, int)</code> */
	PointerByReference OpenMM_CustomHbondForce_getTabulatedFunction(PointerByReference target, int index);
	/**
	 * Original signature : <code>char* OpenMM_CustomHbondForce_getTabulatedFunctionName(const OpenMM_CustomHbondForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_getTabulatedFunctionName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomHbondForce_getTabulatedFunctionName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomHbondForce_getTabulatedFunctionName(const OpenMM_CustomHbondForce*, int)</code> */
	Pointer OpenMM_CustomHbondForce_getTabulatedFunctionName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomHbondForce_addFunction(OpenMM_CustomHbondForce*, const char*, const OpenMM_DoubleArray*, double, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_addFunction(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference, double, double)} and {@link #OpenMM_CustomHbondForce_addFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, double, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_addFunction(Pointer target, Pointer name, Pointer values, double min, double max);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addFunction(OpenMM_CustomHbondForce*, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	int OpenMM_CustomHbondForce_addFunction(PointerByReference target, String name, PointerByReference values, double min, double max);
	/** Original signature : <code>int OpenMM_CustomHbondForce_addFunction(OpenMM_CustomHbondForce*, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	int OpenMM_CustomHbondForce_addFunction(PointerByReference target, Pointer name, PointerByReference values, double min, double max);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_getFunctionParameters(const OpenMM_CustomHbondForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_getFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_CustomHbondForce_getFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_getFunctionParameters(Pointer target, int index, PointerByReference name, Pointer values, DoubleByReference min, DoubleByReference max);
	/** Original signature : <code>void OpenMM_CustomHbondForce_getFunctionParameters(const OpenMM_CustomHbondForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code> */
	void OpenMM_CustomHbondForce_getFunctionParameters(PointerByReference target, int index, PointerByReference name, PointerByReference values, DoubleBuffer min, DoubleBuffer max);
	/** Original signature : <code>void OpenMM_CustomHbondForce_getFunctionParameters(const OpenMM_CustomHbondForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code> */
	void OpenMM_CustomHbondForce_getFunctionParameters(PointerByReference target, int index, PointerByReference name, PointerByReference values, DoubleByReference min, DoubleByReference max);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_setFunctionParameters(OpenMM_CustomHbondForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomHbondForce_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, java.lang.String, com.sun.jna.ptr.PointerByReference, double, double)} and {@link #OpenMM_CustomHbondForce_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_setFunctionParameters(Pointer target, int index, Pointer name, Pointer values, double min, double max);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setFunctionParameters(OpenMM_CustomHbondForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	void OpenMM_CustomHbondForce_setFunctionParameters(PointerByReference target, int index, String name, PointerByReference values, double min, double max);
	/** Original signature : <code>void OpenMM_CustomHbondForce_setFunctionParameters(OpenMM_CustomHbondForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	void OpenMM_CustomHbondForce_setFunctionParameters(PointerByReference target, int index, Pointer name, PointerByReference values, double min, double max);
	/**
	 * Original signature : <code>void OpenMM_CustomHbondForce_updateParametersInContext(OpenMM_CustomHbondForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomHbondForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_CustomHbondForce_updateParametersInContext(OpenMM_CustomHbondForce*, OpenMM_Context*)</code> */
	void OpenMM_CustomHbondForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomHbondForce_usesPeriodicBoundaryConditions(const OpenMM_CustomHbondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomHbondForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomHbondForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomHbondForce_usesPeriodicBoundaryConditions(const OpenMM_CustomHbondForce*)</code> */
	int OpenMM_CustomHbondForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/** Original signature : <code>OpenMM_CustomIntegrator* OpenMM_CustomIntegrator_create(double)</code> */
	PointerByReference OpenMM_CustomIntegrator_create(double stepSize);
	/**
	 * Original signature : <code>void OpenMM_CustomIntegrator_destroy(OpenMM_CustomIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomIntegrator_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CustomIntegrator_destroy(OpenMM_CustomIntegrator*)</code> */
	void OpenMM_CustomIntegrator_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_getNumGlobalVariables(const OpenMM_CustomIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_getNumGlobalVariables(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_getNumGlobalVariables(Pointer target);
	/** Original signature : <code>int OpenMM_CustomIntegrator_getNumGlobalVariables(const OpenMM_CustomIntegrator*)</code> */
	int OpenMM_CustomIntegrator_getNumGlobalVariables(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_getNumPerDofVariables(const OpenMM_CustomIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_getNumPerDofVariables(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_getNumPerDofVariables(Pointer target);
	/** Original signature : <code>int OpenMM_CustomIntegrator_getNumPerDofVariables(const OpenMM_CustomIntegrator*)</code> */
	int OpenMM_CustomIntegrator_getNumPerDofVariables(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_getNumComputations(const OpenMM_CustomIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_getNumComputations(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_getNumComputations(Pointer target);
	/** Original signature : <code>int OpenMM_CustomIntegrator_getNumComputations(const OpenMM_CustomIntegrator*)</code> */
	int OpenMM_CustomIntegrator_getNumComputations(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_addGlobalVariable(OpenMM_CustomIntegrator*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_addGlobalVariable(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomIntegrator_addGlobalVariable(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_addGlobalVariable(Pointer target, Pointer name, double initialValue);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addGlobalVariable(OpenMM_CustomIntegrator*, const char*, double)</code> */
	int OpenMM_CustomIntegrator_addGlobalVariable(PointerByReference target, String name, double initialValue);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addGlobalVariable(OpenMM_CustomIntegrator*, const char*, double)</code> */
	int OpenMM_CustomIntegrator_addGlobalVariable(PointerByReference target, Pointer name, double initialValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomIntegrator_getGlobalVariableName(const OpenMM_CustomIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_getGlobalVariableName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomIntegrator_getGlobalVariableName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomIntegrator_getGlobalVariableName(const OpenMM_CustomIntegrator*, int)</code> */
	Pointer OpenMM_CustomIntegrator_getGlobalVariableName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_addPerDofVariable(OpenMM_CustomIntegrator*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_addPerDofVariable(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomIntegrator_addPerDofVariable(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_addPerDofVariable(Pointer target, Pointer name, double initialValue);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addPerDofVariable(OpenMM_CustomIntegrator*, const char*, double)</code> */
	int OpenMM_CustomIntegrator_addPerDofVariable(PointerByReference target, String name, double initialValue);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addPerDofVariable(OpenMM_CustomIntegrator*, const char*, double)</code> */
	int OpenMM_CustomIntegrator_addPerDofVariable(PointerByReference target, Pointer name, double initialValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomIntegrator_getPerDofVariableName(const OpenMM_CustomIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_getPerDofVariableName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomIntegrator_getPerDofVariableName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomIntegrator_getPerDofVariableName(const OpenMM_CustomIntegrator*, int)</code> */
	Pointer OpenMM_CustomIntegrator_getPerDofVariableName(PointerByReference target, int index);
	/**
	 * Original signature : <code>double OpenMM_CustomIntegrator_getGlobalVariable(const OpenMM_CustomIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_getGlobalVariable(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_CustomIntegrator_getGlobalVariable(Pointer target, int index);
	/** Original signature : <code>double OpenMM_CustomIntegrator_getGlobalVariable(const OpenMM_CustomIntegrator*, int)</code> */
	double OpenMM_CustomIntegrator_getGlobalVariable(PointerByReference target, int index);
	/**
	 * Original signature : <code>double OpenMM_CustomIntegrator_getGlobalVariableByName(const OpenMM_CustomIntegrator*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_getGlobalVariableByName(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomIntegrator_getGlobalVariableByName(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	double OpenMM_CustomIntegrator_getGlobalVariableByName(Pointer target, Pointer name);
	/** Original signature : <code>double OpenMM_CustomIntegrator_getGlobalVariableByName(const OpenMM_CustomIntegrator*, const char*)</code> */
	double OpenMM_CustomIntegrator_getGlobalVariableByName(PointerByReference target, String name);
	/** Original signature : <code>double OpenMM_CustomIntegrator_getGlobalVariableByName(const OpenMM_CustomIntegrator*, const char*)</code> */
	double OpenMM_CustomIntegrator_getGlobalVariableByName(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>void OpenMM_CustomIntegrator_setGlobalVariable(OpenMM_CustomIntegrator*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_setGlobalVariable(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomIntegrator_setGlobalVariable(Pointer target, int index, double value);
	/** Original signature : <code>void OpenMM_CustomIntegrator_setGlobalVariable(OpenMM_CustomIntegrator*, int, double)</code> */
	void OpenMM_CustomIntegrator_setGlobalVariable(PointerByReference target, int index, double value);
	/**
	 * Original signature : <code>void OpenMM_CustomIntegrator_setGlobalVariableByName(OpenMM_CustomIntegrator*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_setGlobalVariableByName(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomIntegrator_setGlobalVariableByName(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomIntegrator_setGlobalVariableByName(Pointer target, Pointer name, double value);
	/** Original signature : <code>void OpenMM_CustomIntegrator_setGlobalVariableByName(OpenMM_CustomIntegrator*, const char*, double)</code> */
	void OpenMM_CustomIntegrator_setGlobalVariableByName(PointerByReference target, String name, double value);
	/** Original signature : <code>void OpenMM_CustomIntegrator_setGlobalVariableByName(OpenMM_CustomIntegrator*, const char*, double)</code> */
	void OpenMM_CustomIntegrator_setGlobalVariableByName(PointerByReference target, Pointer name, double value);
	/**
	 * Original signature : <code>void OpenMM_CustomIntegrator_getPerDofVariable(const OpenMM_CustomIntegrator*, int, OpenMM_Vec3Array*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_getPerDofVariable(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomIntegrator_getPerDofVariable(Pointer target, int index, Pointer values);
	/** Original signature : <code>void OpenMM_CustomIntegrator_getPerDofVariable(const OpenMM_CustomIntegrator*, int, OpenMM_Vec3Array*)</code> */
	void OpenMM_CustomIntegrator_getPerDofVariable(PointerByReference target, int index, PointerByReference values);
	/**
	 * Original signature : <code>void OpenMM_CustomIntegrator_getPerDofVariableByName(const OpenMM_CustomIntegrator*, const char*, OpenMM_Vec3Array*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_getPerDofVariableByName(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomIntegrator_getPerDofVariableByName(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomIntegrator_getPerDofVariableByName(Pointer target, Pointer name, Pointer values);
	/** Original signature : <code>void OpenMM_CustomIntegrator_getPerDofVariableByName(const OpenMM_CustomIntegrator*, const char*, OpenMM_Vec3Array*)</code> */
	void OpenMM_CustomIntegrator_getPerDofVariableByName(PointerByReference target, String name, PointerByReference values);
	/** Original signature : <code>void OpenMM_CustomIntegrator_getPerDofVariableByName(const OpenMM_CustomIntegrator*, const char*, OpenMM_Vec3Array*)</code> */
	void OpenMM_CustomIntegrator_getPerDofVariableByName(PointerByReference target, Pointer name, PointerByReference values);
	/**
	 * Original signature : <code>void OpenMM_CustomIntegrator_setPerDofVariable(OpenMM_CustomIntegrator*, int, const OpenMM_Vec3Array*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_setPerDofVariable(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomIntegrator_setPerDofVariable(Pointer target, int index, Pointer values);
	/** Original signature : <code>void OpenMM_CustomIntegrator_setPerDofVariable(OpenMM_CustomIntegrator*, int, const OpenMM_Vec3Array*)</code> */
	void OpenMM_CustomIntegrator_setPerDofVariable(PointerByReference target, int index, PointerByReference values);
	/**
	 * Original signature : <code>void OpenMM_CustomIntegrator_setPerDofVariableByName(OpenMM_CustomIntegrator*, const char*, const OpenMM_Vec3Array*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_setPerDofVariableByName(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomIntegrator_setPerDofVariableByName(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomIntegrator_setPerDofVariableByName(Pointer target, Pointer name, Pointer values);
	/** Original signature : <code>void OpenMM_CustomIntegrator_setPerDofVariableByName(OpenMM_CustomIntegrator*, const char*, const OpenMM_Vec3Array*)</code> */
	void OpenMM_CustomIntegrator_setPerDofVariableByName(PointerByReference target, String name, PointerByReference values);
	/** Original signature : <code>void OpenMM_CustomIntegrator_setPerDofVariableByName(OpenMM_CustomIntegrator*, const char*, const OpenMM_Vec3Array*)</code> */
	void OpenMM_CustomIntegrator_setPerDofVariableByName(PointerByReference target, Pointer name, PointerByReference values);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_addComputeGlobal(OpenMM_CustomIntegrator*, const char*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_addComputeGlobal(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #OpenMM_CustomIntegrator_addComputeGlobal(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_addComputeGlobal(Pointer target, Pointer variable, Pointer expression);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addComputeGlobal(OpenMM_CustomIntegrator*, const char*, const char*)</code> */
	int OpenMM_CustomIntegrator_addComputeGlobal(PointerByReference target, String variable, String expression);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addComputeGlobal(OpenMM_CustomIntegrator*, const char*, const char*)</code> */
	int OpenMM_CustomIntegrator_addComputeGlobal(PointerByReference target, Pointer variable, Pointer expression);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_addComputePerDof(OpenMM_CustomIntegrator*, const char*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_addComputePerDof(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #OpenMM_CustomIntegrator_addComputePerDof(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_addComputePerDof(Pointer target, Pointer variable, Pointer expression);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addComputePerDof(OpenMM_CustomIntegrator*, const char*, const char*)</code> */
	int OpenMM_CustomIntegrator_addComputePerDof(PointerByReference target, String variable, String expression);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addComputePerDof(OpenMM_CustomIntegrator*, const char*, const char*)</code> */
	int OpenMM_CustomIntegrator_addComputePerDof(PointerByReference target, Pointer variable, Pointer expression);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_addComputeSum(OpenMM_CustomIntegrator*, const char*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_addComputeSum(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #OpenMM_CustomIntegrator_addComputeSum(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_addComputeSum(Pointer target, Pointer variable, Pointer expression);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addComputeSum(OpenMM_CustomIntegrator*, const char*, const char*)</code> */
	int OpenMM_CustomIntegrator_addComputeSum(PointerByReference target, String variable, String expression);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addComputeSum(OpenMM_CustomIntegrator*, const char*, const char*)</code> */
	int OpenMM_CustomIntegrator_addComputeSum(PointerByReference target, Pointer variable, Pointer expression);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_addConstrainPositions(OpenMM_CustomIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_addConstrainPositions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_addConstrainPositions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addConstrainPositions(OpenMM_CustomIntegrator*)</code> */
	int OpenMM_CustomIntegrator_addConstrainPositions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_addConstrainVelocities(OpenMM_CustomIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_addConstrainVelocities(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_addConstrainVelocities(Pointer target);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addConstrainVelocities(OpenMM_CustomIntegrator*)</code> */
	int OpenMM_CustomIntegrator_addConstrainVelocities(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_addUpdateContextState(OpenMM_CustomIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_addUpdateContextState(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_addUpdateContextState(Pointer target);
	/** Original signature : <code>int OpenMM_CustomIntegrator_addUpdateContextState(OpenMM_CustomIntegrator*)</code> */
	int OpenMM_CustomIntegrator_addUpdateContextState(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_beginIfBlock(OpenMM_CustomIntegrator*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_beginIfBlock(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomIntegrator_beginIfBlock(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_beginIfBlock(Pointer target, Pointer condition);
	/** Original signature : <code>int OpenMM_CustomIntegrator_beginIfBlock(OpenMM_CustomIntegrator*, const char*)</code> */
	int OpenMM_CustomIntegrator_beginIfBlock(PointerByReference target, String condition);
	/** Original signature : <code>int OpenMM_CustomIntegrator_beginIfBlock(OpenMM_CustomIntegrator*, const char*)</code> */
	int OpenMM_CustomIntegrator_beginIfBlock(PointerByReference target, Pointer condition);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_beginWhileBlock(OpenMM_CustomIntegrator*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_beginWhileBlock(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomIntegrator_beginWhileBlock(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_beginWhileBlock(Pointer target, Pointer condition);
	/** Original signature : <code>int OpenMM_CustomIntegrator_beginWhileBlock(OpenMM_CustomIntegrator*, const char*)</code> */
	int OpenMM_CustomIntegrator_beginWhileBlock(PointerByReference target, String condition);
	/** Original signature : <code>int OpenMM_CustomIntegrator_beginWhileBlock(OpenMM_CustomIntegrator*, const char*)</code> */
	int OpenMM_CustomIntegrator_beginWhileBlock(PointerByReference target, Pointer condition);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_endBlock(OpenMM_CustomIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_endBlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_endBlock(Pointer target);
	/** Original signature : <code>int OpenMM_CustomIntegrator_endBlock(OpenMM_CustomIntegrator*)</code> */
	int OpenMM_CustomIntegrator_endBlock(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomIntegrator_getComputationStep(const OpenMM_CustomIntegrator*, int, OpenMM_CustomIntegrator_ComputationType*, char**, char**)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_getComputationStep(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomIntegrator_getComputationStep(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomIntegrator_getComputationStep(Pointer target, int index, IntByReference type, PointerByReference variable, PointerByReference expression);
	/** Original signature : <code>void OpenMM_CustomIntegrator_getComputationStep(const OpenMM_CustomIntegrator*, int, OpenMM_CustomIntegrator_ComputationType*, char**, char**)</code> */
	void OpenMM_CustomIntegrator_getComputationStep(PointerByReference target, int index, IntBuffer type, PointerByReference variable, PointerByReference expression);
	/** Original signature : <code>void OpenMM_CustomIntegrator_getComputationStep(const OpenMM_CustomIntegrator*, int, OpenMM_CustomIntegrator_ComputationType*, char**, char**)</code> */
	void OpenMM_CustomIntegrator_getComputationStep(PointerByReference target, int index, IntByReference type, PointerByReference variable, PointerByReference expression);
	/**
	 * Original signature : <code>char* OpenMM_CustomIntegrator_getKineticEnergyExpression(const OpenMM_CustomIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_getKineticEnergyExpression(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomIntegrator_getKineticEnergyExpression(Pointer target);
	/** Original signature : <code>char* OpenMM_CustomIntegrator_getKineticEnergyExpression(const OpenMM_CustomIntegrator*)</code> */
	Pointer OpenMM_CustomIntegrator_getKineticEnergyExpression(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomIntegrator_setKineticEnergyExpression(OpenMM_CustomIntegrator*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomIntegrator_setKineticEnergyExpression(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomIntegrator_setKineticEnergyExpression(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomIntegrator_setKineticEnergyExpression(Pointer target, Pointer expression);
	/** Original signature : <code>void OpenMM_CustomIntegrator_setKineticEnergyExpression(OpenMM_CustomIntegrator*, const char*)</code> */
	void OpenMM_CustomIntegrator_setKineticEnergyExpression(PointerByReference target, String expression);
	/** Original signature : <code>void OpenMM_CustomIntegrator_setKineticEnergyExpression(OpenMM_CustomIntegrator*, const char*)</code> */
	void OpenMM_CustomIntegrator_setKineticEnergyExpression(PointerByReference target, Pointer expression);
	/**
	 * Original signature : <code>int OpenMM_CustomIntegrator_getRandomNumberSeed(const OpenMM_CustomIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_getRandomNumberSeed(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomIntegrator_getRandomNumberSeed(Pointer target);
	/** Original signature : <code>int OpenMM_CustomIntegrator_getRandomNumberSeed(const OpenMM_CustomIntegrator*)</code> */
	int OpenMM_CustomIntegrator_getRandomNumberSeed(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomIntegrator_setRandomNumberSeed(OpenMM_CustomIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_setRandomNumberSeed(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomIntegrator_setRandomNumberSeed(Pointer target, int seed);
	/** Original signature : <code>void OpenMM_CustomIntegrator_setRandomNumberSeed(OpenMM_CustomIntegrator*, int)</code> */
	void OpenMM_CustomIntegrator_setRandomNumberSeed(PointerByReference target, int seed);
	/**
	 * Original signature : <code>void OpenMM_CustomIntegrator_step(OpenMM_CustomIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomIntegrator_step(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomIntegrator_step(Pointer target, int steps);
	/** Original signature : <code>void OpenMM_CustomIntegrator_step(OpenMM_CustomIntegrator*, int)</code> */
	void OpenMM_CustomIntegrator_step(PointerByReference target, int steps);
	/**
	 * Original signature : <code>OpenMM_CustomManyParticleForce* OpenMM_CustomManyParticleForce_create(int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomManyParticleForce_create(int, java.lang.String)} and {@link #OpenMM_CustomManyParticleForce_create(int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomManyParticleForce_create(int particlesPerSet, Pointer energy);
	/** Original signature : <code>OpenMM_CustomManyParticleForce* OpenMM_CustomManyParticleForce_create(int, const char*)</code> */
	PointerByReference OpenMM_CustomManyParticleForce_create(int particlesPerSet, String energy);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_destroy(OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_destroy(OpenMM_CustomManyParticleForce*)</code> */
	void OpenMM_CustomManyParticleForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomManyParticleForce_getNumParticlesPerSet(const OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getNumParticlesPerSet(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_getNumParticlesPerSet(Pointer target);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_getNumParticlesPerSet(const OpenMM_CustomManyParticleForce*)</code> */
	int OpenMM_CustomManyParticleForce_getNumParticlesPerSet(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomManyParticleForce_getNumParticles(const OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getNumParticles(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_getNumParticles(Pointer target);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_getNumParticles(const OpenMM_CustomManyParticleForce*)</code> */
	int OpenMM_CustomManyParticleForce_getNumParticles(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomManyParticleForce_getNumExclusions(const OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getNumExclusions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_getNumExclusions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_getNumExclusions(const OpenMM_CustomManyParticleForce*)</code> */
	int OpenMM_CustomManyParticleForce_getNumExclusions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomManyParticleForce_getNumPerParticleParameters(const OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getNumPerParticleParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_getNumPerParticleParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_getNumPerParticleParameters(const OpenMM_CustomManyParticleForce*)</code> */
	int OpenMM_CustomManyParticleForce_getNumPerParticleParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomManyParticleForce_getNumGlobalParameters(const OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getNumGlobalParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_getNumGlobalParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_getNumGlobalParameters(const OpenMM_CustomManyParticleForce*)</code> */
	int OpenMM_CustomManyParticleForce_getNumGlobalParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomManyParticleForce_getNumTabulatedFunctions(const OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getNumTabulatedFunctions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_getNumTabulatedFunctions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_getNumTabulatedFunctions(const OpenMM_CustomManyParticleForce*)</code> */
	int OpenMM_CustomManyParticleForce_getNumTabulatedFunctions(PointerByReference target);
	/**
	 * Original signature : <code>char* OpenMM_CustomManyParticleForce_getEnergyFunction(const OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getEnergyFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomManyParticleForce_getEnergyFunction(Pointer target);
	/** Original signature : <code>char* OpenMM_CustomManyParticleForce_getEnergyFunction(const OpenMM_CustomManyParticleForce*)</code> */
	Pointer OpenMM_CustomManyParticleForce_getEnergyFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_setEnergyFunction(OpenMM_CustomManyParticleForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomManyParticleForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomManyParticleForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_setEnergyFunction(Pointer target, Pointer energy);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setEnergyFunction(OpenMM_CustomManyParticleForce*, const char*)</code> */
	void OpenMM_CustomManyParticleForce_setEnergyFunction(PointerByReference target, String energy);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setEnergyFunction(OpenMM_CustomManyParticleForce*, const char*)</code> */
	void OpenMM_CustomManyParticleForce_setEnergyFunction(PointerByReference target, Pointer energy);
	/**
	 * Original signature : <code>OpenMM_CustomManyParticleForce_NonbondedMethod OpenMM_CustomManyParticleForce_getNonbondedMethod(const OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getNonbondedMethod(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_getNonbondedMethod(Pointer target);
	/** Original signature : <code>OpenMM_CustomManyParticleForce_NonbondedMethod OpenMM_CustomManyParticleForce_getNonbondedMethod(const OpenMM_CustomManyParticleForce*)</code> */
	int OpenMM_CustomManyParticleForce_getNonbondedMethod(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_setNonbondedMethod(OpenMM_CustomManyParticleForce*, OpenMM_CustomManyParticleForce_NonbondedMethod)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_setNonbondedMethod(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_setNonbondedMethod(Pointer target, int method);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setNonbondedMethod(OpenMM_CustomManyParticleForce*, OpenMM_CustomManyParticleForce_NonbondedMethod)</code> */
	void OpenMM_CustomManyParticleForce_setNonbondedMethod(PointerByReference target, int method);
	/**
	 * Original signature : <code>OpenMM_CustomManyParticleForce_PermutationMode OpenMM_CustomManyParticleForce_getPermutationMode(const OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getPermutationMode(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_getPermutationMode(Pointer target);
	/** Original signature : <code>OpenMM_CustomManyParticleForce_PermutationMode OpenMM_CustomManyParticleForce_getPermutationMode(const OpenMM_CustomManyParticleForce*)</code> */
	int OpenMM_CustomManyParticleForce_getPermutationMode(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_setPermutationMode(OpenMM_CustomManyParticleForce*, OpenMM_CustomManyParticleForce_PermutationMode)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_setPermutationMode(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_setPermutationMode(Pointer target, int mode);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setPermutationMode(OpenMM_CustomManyParticleForce*, OpenMM_CustomManyParticleForce_PermutationMode)</code> */
	void OpenMM_CustomManyParticleForce_setPermutationMode(PointerByReference target, int mode);
	/**
	 * Original signature : <code>double OpenMM_CustomManyParticleForce_getCutoffDistance(const OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getCutoffDistance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_CustomManyParticleForce_getCutoffDistance(Pointer target);
	/** Original signature : <code>double OpenMM_CustomManyParticleForce_getCutoffDistance(const OpenMM_CustomManyParticleForce*)</code> */
	double OpenMM_CustomManyParticleForce_getCutoffDistance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_setCutoffDistance(OpenMM_CustomManyParticleForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_setCutoffDistance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_setCutoffDistance(Pointer target, double distance);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setCutoffDistance(OpenMM_CustomManyParticleForce*, double)</code> */
	void OpenMM_CustomManyParticleForce_setCutoffDistance(PointerByReference target, double distance);
	/**
	 * Original signature : <code>int OpenMM_CustomManyParticleForce_addPerParticleParameter(OpenMM_CustomManyParticleForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomManyParticleForce_addPerParticleParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomManyParticleForce_addPerParticleParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_addPerParticleParameter(Pointer target, Pointer name);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_addPerParticleParameter(OpenMM_CustomManyParticleForce*, const char*)</code> */
	int OpenMM_CustomManyParticleForce_addPerParticleParameter(PointerByReference target, String name);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_addPerParticleParameter(OpenMM_CustomManyParticleForce*, const char*)</code> */
	int OpenMM_CustomManyParticleForce_addPerParticleParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomManyParticleForce_getPerParticleParameterName(const OpenMM_CustomManyParticleForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomManyParticleForce_getPerParticleParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomManyParticleForce_getPerParticleParameterName(const OpenMM_CustomManyParticleForce*, int)</code> */
	Pointer OpenMM_CustomManyParticleForce_getPerParticleParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_setPerParticleParameterName(OpenMM_CustomManyParticleForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomManyParticleForce_setPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomManyParticleForce_setPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_setPerParticleParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setPerParticleParameterName(OpenMM_CustomManyParticleForce*, int, const char*)</code> */
	void OpenMM_CustomManyParticleForce_setPerParticleParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setPerParticleParameterName(OpenMM_CustomManyParticleForce*, int, const char*)</code> */
	void OpenMM_CustomManyParticleForce_setPerParticleParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>int OpenMM_CustomManyParticleForce_addGlobalParameter(OpenMM_CustomManyParticleForce*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomManyParticleForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomManyParticleForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_addGlobalParameter(Pointer target, Pointer name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_addGlobalParameter(OpenMM_CustomManyParticleForce*, const char*, double)</code> */
	int OpenMM_CustomManyParticleForce_addGlobalParameter(PointerByReference target, String name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_addGlobalParameter(OpenMM_CustomManyParticleForce*, const char*, double)</code> */
	int OpenMM_CustomManyParticleForce_addGlobalParameter(PointerByReference target, Pointer name, double defaultValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomManyParticleForce_getGlobalParameterName(const OpenMM_CustomManyParticleForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getGlobalParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomManyParticleForce_getGlobalParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomManyParticleForce_getGlobalParameterName(const OpenMM_CustomManyParticleForce*, int)</code> */
	Pointer OpenMM_CustomManyParticleForce_getGlobalParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_setGlobalParameterName(OpenMM_CustomManyParticleForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomManyParticleForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomManyParticleForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_setGlobalParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setGlobalParameterName(OpenMM_CustomManyParticleForce*, int, const char*)</code> */
	void OpenMM_CustomManyParticleForce_setGlobalParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setGlobalParameterName(OpenMM_CustomManyParticleForce*, int, const char*)</code> */
	void OpenMM_CustomManyParticleForce_setGlobalParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>double OpenMM_CustomManyParticleForce_getGlobalParameterDefaultValue(const OpenMM_CustomManyParticleForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_CustomManyParticleForce_getGlobalParameterDefaultValue(Pointer target, int index);
	/** Original signature : <code>double OpenMM_CustomManyParticleForce_getGlobalParameterDefaultValue(const OpenMM_CustomManyParticleForce*, int)</code> */
	double OpenMM_CustomManyParticleForce_getGlobalParameterDefaultValue(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_setGlobalParameterDefaultValue(OpenMM_CustomManyParticleForce*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_setGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_setGlobalParameterDefaultValue(Pointer target, int index, double defaultValue);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setGlobalParameterDefaultValue(OpenMM_CustomManyParticleForce*, int, double)</code> */
	void OpenMM_CustomManyParticleForce_setGlobalParameterDefaultValue(PointerByReference target, int index, double defaultValue);
	/**
	 * Original signature : <code>int OpenMM_CustomManyParticleForce_addParticle(OpenMM_CustomManyParticleForce*, const OpenMM_DoubleArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_addParticle(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_addParticle(Pointer target, Pointer parameters, int type);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_addParticle(OpenMM_CustomManyParticleForce*, const OpenMM_DoubleArray*, int)</code> */
	int OpenMM_CustomManyParticleForce_addParticle(PointerByReference target, PointerByReference parameters, int type);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_getParticleParameters(const OpenMM_CustomManyParticleForce*, int, OpenMM_DoubleArray*, int*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomManyParticleForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #OpenMM_CustomManyParticleForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_getParticleParameters(Pointer target, int index, Pointer parameters, IntByReference type);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_getParticleParameters(const OpenMM_CustomManyParticleForce*, int, OpenMM_DoubleArray*, int*)</code> */
	void OpenMM_CustomManyParticleForce_getParticleParameters(PointerByReference target, int index, PointerByReference parameters, IntBuffer type);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_getParticleParameters(const OpenMM_CustomManyParticleForce*, int, OpenMM_DoubleArray*, int*)</code> */
	void OpenMM_CustomManyParticleForce_getParticleParameters(PointerByReference target, int index, PointerByReference parameters, IntByReference type);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_setParticleParameters(OpenMM_CustomManyParticleForce*, int, const OpenMM_DoubleArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_setParticleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_setParticleParameters(Pointer target, int index, Pointer parameters, int type);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setParticleParameters(OpenMM_CustomManyParticleForce*, int, const OpenMM_DoubleArray*, int)</code> */
	void OpenMM_CustomManyParticleForce_setParticleParameters(PointerByReference target, int index, PointerByReference parameters, int type);
	/**
	 * Original signature : <code>int OpenMM_CustomManyParticleForce_addExclusion(OpenMM_CustomManyParticleForce*, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_addExclusion(com.sun.jna.ptr.PointerByReference, int, int)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_addExclusion(Pointer target, int particle1, int particle2);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_addExclusion(OpenMM_CustomManyParticleForce*, int, int)</code> */
	int OpenMM_CustomManyParticleForce_addExclusion(PointerByReference target, int particle1, int particle2);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_getExclusionParticles(const OpenMM_CustomManyParticleForce*, int, int*, int*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomManyParticleForce_getExclusionParticles(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #OpenMM_CustomManyParticleForce_getExclusionParticles(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_getExclusionParticles(Pointer target, int index, IntByReference particle1, IntByReference particle2);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_getExclusionParticles(const OpenMM_CustomManyParticleForce*, int, int*, int*)</code> */
	void OpenMM_CustomManyParticleForce_getExclusionParticles(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_getExclusionParticles(const OpenMM_CustomManyParticleForce*, int, int*, int*)</code> */
	void OpenMM_CustomManyParticleForce_getExclusionParticles(PointerByReference target, int index, IntByReference particle1, IntByReference particle2);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_setExclusionParticles(OpenMM_CustomManyParticleForce*, int, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_setExclusionParticles(com.sun.jna.ptr.PointerByReference, int, int, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_setExclusionParticles(Pointer target, int index, int particle1, int particle2);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setExclusionParticles(OpenMM_CustomManyParticleForce*, int, int, int)</code> */
	void OpenMM_CustomManyParticleForce_setExclusionParticles(PointerByReference target, int index, int particle1, int particle2);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_createExclusionsFromBonds(OpenMM_CustomManyParticleForce*, const OpenMM_BondArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_createExclusionsFromBonds(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_createExclusionsFromBonds(Pointer target, Pointer bonds, int bondCutoff);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_createExclusionsFromBonds(OpenMM_CustomManyParticleForce*, const OpenMM_BondArray*, int)</code> */
	void OpenMM_CustomManyParticleForce_createExclusionsFromBonds(PointerByReference target, PointerByReference bonds, int bondCutoff);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_getTypeFilter(const OpenMM_CustomManyParticleForce*, int, OpenMM_IntSet*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getTypeFilter(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_getTypeFilter(Pointer target, int index, Pointer types);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_getTypeFilter(const OpenMM_CustomManyParticleForce*, int, OpenMM_IntSet*)</code> */
	void OpenMM_CustomManyParticleForce_getTypeFilter(PointerByReference target, int index, PointerByReference types);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_setTypeFilter(OpenMM_CustomManyParticleForce*, int, const OpenMM_IntSet*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_setTypeFilter(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_setTypeFilter(Pointer target, int index, Pointer types);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_setTypeFilter(OpenMM_CustomManyParticleForce*, int, const OpenMM_IntSet*)</code> */
	void OpenMM_CustomManyParticleForce_setTypeFilter(PointerByReference target, int index, PointerByReference types);
	/**
	 * Original signature : <code>int OpenMM_CustomManyParticleForce_addTabulatedFunction(OpenMM_CustomManyParticleForce*, const char*, OpenMM_TabulatedFunction*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomManyParticleForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomManyParticleForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_addTabulatedFunction(Pointer target, Pointer name, Pointer function);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_addTabulatedFunction(OpenMM_CustomManyParticleForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomManyParticleForce_addTabulatedFunction(PointerByReference target, String name, PointerByReference function);
	/** Original signature : <code>int OpenMM_CustomManyParticleForce_addTabulatedFunction(OpenMM_CustomManyParticleForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomManyParticleForce_addTabulatedFunction(PointerByReference target, Pointer name, PointerByReference function);
	/**
	 * Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomManyParticleForce_getTabulatedFunction(OpenMM_CustomManyParticleForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getTabulatedFunction(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomManyParticleForce_getTabulatedFunction(Pointer target, int index);
	/** Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomManyParticleForce_getTabulatedFunction(OpenMM_CustomManyParticleForce*, int)</code> */
	PointerByReference OpenMM_CustomManyParticleForce_getTabulatedFunction(PointerByReference target, int index);
	/**
	 * Original signature : <code>char* OpenMM_CustomManyParticleForce_getTabulatedFunctionName(const OpenMM_CustomManyParticleForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_getTabulatedFunctionName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomManyParticleForce_getTabulatedFunctionName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomManyParticleForce_getTabulatedFunctionName(const OpenMM_CustomManyParticleForce*, int)</code> */
	Pointer OpenMM_CustomManyParticleForce_getTabulatedFunctionName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomManyParticleForce_updateParametersInContext(OpenMM_CustomManyParticleForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomManyParticleForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_CustomManyParticleForce_updateParametersInContext(OpenMM_CustomManyParticleForce*, OpenMM_Context*)</code> */
	void OpenMM_CustomManyParticleForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomManyParticleForce_usesPeriodicBoundaryConditions(const OpenMM_CustomManyParticleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomManyParticleForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomManyParticleForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomManyParticleForce_usesPeriodicBoundaryConditions(const OpenMM_CustomManyParticleForce*)</code> */
	int OpenMM_CustomManyParticleForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_CustomNonbondedForce* OpenMM_CustomNonbondedForce_create(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_create(java.lang.String)} and {@link #OpenMM_CustomNonbondedForce_create(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomNonbondedForce_create(Pointer energy);
	/** Original signature : <code>OpenMM_CustomNonbondedForce* OpenMM_CustomNonbondedForce_create(const char*)</code> */
	PointerByReference OpenMM_CustomNonbondedForce_create(String energy);
	/**
	 * Original signature : <code>OpenMM_CustomNonbondedForce* OpenMM_CustomNonbondedForce_create_2(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_create_2(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomNonbondedForce_create_2(Pointer rhs);
	/** Original signature : <code>OpenMM_CustomNonbondedForce* OpenMM_CustomNonbondedForce_create_2(const OpenMM_CustomNonbondedForce*)</code> */
	PointerByReference OpenMM_CustomNonbondedForce_create_2(PointerByReference rhs);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_destroy(OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_destroy(OpenMM_CustomNonbondedForce*)</code> */
	void OpenMM_CustomNonbondedForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_getNumParticles(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getNumParticles(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_getNumParticles(Pointer target);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_getNumParticles(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_getNumParticles(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_getNumExclusions(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getNumExclusions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_getNumExclusions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_getNumExclusions(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_getNumExclusions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_getNumPerParticleParameters(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getNumPerParticleParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_getNumPerParticleParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_getNumPerParticleParameters(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_getNumPerParticleParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_getNumGlobalParameters(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getNumGlobalParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_getNumGlobalParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_getNumGlobalParameters(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_getNumGlobalParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_getNumTabulatedFunctions(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getNumTabulatedFunctions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_getNumTabulatedFunctions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_getNumTabulatedFunctions(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_getNumTabulatedFunctions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_getNumFunctions(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getNumFunctions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_getNumFunctions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_getNumFunctions(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_getNumFunctions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_getNumInteractionGroups(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getNumInteractionGroups(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_getNumInteractionGroups(Pointer target);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_getNumInteractionGroups(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_getNumInteractionGroups(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_getNumEnergyParameterDerivatives(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getNumEnergyParameterDerivatives(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_getNumEnergyParameterDerivatives(Pointer target);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_getNumEnergyParameterDerivatives(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_getNumEnergyParameterDerivatives(PointerByReference target);
	/**
	 * Original signature : <code>char* OpenMM_CustomNonbondedForce_getEnergyFunction(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getEnergyFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomNonbondedForce_getEnergyFunction(Pointer target);
	/** Original signature : <code>char* OpenMM_CustomNonbondedForce_getEnergyFunction(const OpenMM_CustomNonbondedForce*)</code> */
	Pointer OpenMM_CustomNonbondedForce_getEnergyFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setEnergyFunction(OpenMM_CustomNonbondedForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomNonbondedForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setEnergyFunction(Pointer target, Pointer energy);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setEnergyFunction(OpenMM_CustomNonbondedForce*, const char*)</code> */
	void OpenMM_CustomNonbondedForce_setEnergyFunction(PointerByReference target, String energy);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setEnergyFunction(OpenMM_CustomNonbondedForce*, const char*)</code> */
	void OpenMM_CustomNonbondedForce_setEnergyFunction(PointerByReference target, Pointer energy);
	/**
	 * Original signature : <code>OpenMM_CustomNonbondedForce_NonbondedMethod OpenMM_CustomNonbondedForce_getNonbondedMethod(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getNonbondedMethod(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_getNonbondedMethod(Pointer target);
	/** Original signature : <code>OpenMM_CustomNonbondedForce_NonbondedMethod OpenMM_CustomNonbondedForce_getNonbondedMethod(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_getNonbondedMethod(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setNonbondedMethod(OpenMM_CustomNonbondedForce*, OpenMM_CustomNonbondedForce_NonbondedMethod)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_setNonbondedMethod(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setNonbondedMethod(Pointer target, int method);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setNonbondedMethod(OpenMM_CustomNonbondedForce*, OpenMM_CustomNonbondedForce_NonbondedMethod)</code> */
	void OpenMM_CustomNonbondedForce_setNonbondedMethod(PointerByReference target, int method);
	/**
	 * Original signature : <code>double OpenMM_CustomNonbondedForce_getCutoffDistance(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getCutoffDistance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_CustomNonbondedForce_getCutoffDistance(Pointer target);
	/** Original signature : <code>double OpenMM_CustomNonbondedForce_getCutoffDistance(const OpenMM_CustomNonbondedForce*)</code> */
	double OpenMM_CustomNonbondedForce_getCutoffDistance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setCutoffDistance(OpenMM_CustomNonbondedForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_setCutoffDistance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setCutoffDistance(Pointer target, double distance);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setCutoffDistance(OpenMM_CustomNonbondedForce*, double)</code> */
	void OpenMM_CustomNonbondedForce_setCutoffDistance(PointerByReference target, double distance);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomNonbondedForce_getUseSwitchingFunction(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getUseSwitchingFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_getUseSwitchingFunction(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomNonbondedForce_getUseSwitchingFunction(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_getUseSwitchingFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setUseSwitchingFunction(OpenMM_CustomNonbondedForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_setUseSwitchingFunction(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setUseSwitchingFunction(Pointer target, int use);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setUseSwitchingFunction(OpenMM_CustomNonbondedForce*, OpenMM_Boolean)</code> */
	void OpenMM_CustomNonbondedForce_setUseSwitchingFunction(PointerByReference target, int use);
	/**
	 * Original signature : <code>double OpenMM_CustomNonbondedForce_getSwitchingDistance(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getSwitchingDistance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_CustomNonbondedForce_getSwitchingDistance(Pointer target);
	/** Original signature : <code>double OpenMM_CustomNonbondedForce_getSwitchingDistance(const OpenMM_CustomNonbondedForce*)</code> */
	double OpenMM_CustomNonbondedForce_getSwitchingDistance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setSwitchingDistance(OpenMM_CustomNonbondedForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_setSwitchingDistance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setSwitchingDistance(Pointer target, double distance);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setSwitchingDistance(OpenMM_CustomNonbondedForce*, double)</code> */
	void OpenMM_CustomNonbondedForce_setSwitchingDistance(PointerByReference target, double distance);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomNonbondedForce_getUseLongRangeCorrection(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getUseLongRangeCorrection(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_getUseLongRangeCorrection(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomNonbondedForce_getUseLongRangeCorrection(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_getUseLongRangeCorrection(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setUseLongRangeCorrection(OpenMM_CustomNonbondedForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_setUseLongRangeCorrection(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setUseLongRangeCorrection(Pointer target, int use);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setUseLongRangeCorrection(OpenMM_CustomNonbondedForce*, OpenMM_Boolean)</code> */
	void OpenMM_CustomNonbondedForce_setUseLongRangeCorrection(PointerByReference target, int use);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_addPerParticleParameter(OpenMM_CustomNonbondedForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_addPerParticleParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomNonbondedForce_addPerParticleParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_addPerParticleParameter(Pointer target, Pointer name);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_addPerParticleParameter(OpenMM_CustomNonbondedForce*, const char*)</code> */
	int OpenMM_CustomNonbondedForce_addPerParticleParameter(PointerByReference target, String name);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_addPerParticleParameter(OpenMM_CustomNonbondedForce*, const char*)</code> */
	int OpenMM_CustomNonbondedForce_addPerParticleParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomNonbondedForce_getPerParticleParameterName(const OpenMM_CustomNonbondedForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomNonbondedForce_getPerParticleParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomNonbondedForce_getPerParticleParameterName(const OpenMM_CustomNonbondedForce*, int)</code> */
	Pointer OpenMM_CustomNonbondedForce_getPerParticleParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setPerParticleParameterName(OpenMM_CustomNonbondedForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_setPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomNonbondedForce_setPerParticleParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setPerParticleParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setPerParticleParameterName(OpenMM_CustomNonbondedForce*, int, const char*)</code> */
	void OpenMM_CustomNonbondedForce_setPerParticleParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setPerParticleParameterName(OpenMM_CustomNonbondedForce*, int, const char*)</code> */
	void OpenMM_CustomNonbondedForce_setPerParticleParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_addGlobalParameter(OpenMM_CustomNonbondedForce*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomNonbondedForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_addGlobalParameter(Pointer target, Pointer name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_addGlobalParameter(OpenMM_CustomNonbondedForce*, const char*, double)</code> */
	int OpenMM_CustomNonbondedForce_addGlobalParameter(PointerByReference target, String name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_addGlobalParameter(OpenMM_CustomNonbondedForce*, const char*, double)</code> */
	int OpenMM_CustomNonbondedForce_addGlobalParameter(PointerByReference target, Pointer name, double defaultValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomNonbondedForce_getGlobalParameterName(const OpenMM_CustomNonbondedForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getGlobalParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomNonbondedForce_getGlobalParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomNonbondedForce_getGlobalParameterName(const OpenMM_CustomNonbondedForce*, int)</code> */
	Pointer OpenMM_CustomNonbondedForce_getGlobalParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setGlobalParameterName(OpenMM_CustomNonbondedForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomNonbondedForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setGlobalParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setGlobalParameterName(OpenMM_CustomNonbondedForce*, int, const char*)</code> */
	void OpenMM_CustomNonbondedForce_setGlobalParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setGlobalParameterName(OpenMM_CustomNonbondedForce*, int, const char*)</code> */
	void OpenMM_CustomNonbondedForce_setGlobalParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>double OpenMM_CustomNonbondedForce_getGlobalParameterDefaultValue(const OpenMM_CustomNonbondedForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_CustomNonbondedForce_getGlobalParameterDefaultValue(Pointer target, int index);
	/** Original signature : <code>double OpenMM_CustomNonbondedForce_getGlobalParameterDefaultValue(const OpenMM_CustomNonbondedForce*, int)</code> */
	double OpenMM_CustomNonbondedForce_getGlobalParameterDefaultValue(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setGlobalParameterDefaultValue(OpenMM_CustomNonbondedForce*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_setGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setGlobalParameterDefaultValue(Pointer target, int index, double defaultValue);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setGlobalParameterDefaultValue(OpenMM_CustomNonbondedForce*, int, double)</code> */
	void OpenMM_CustomNonbondedForce_setGlobalParameterDefaultValue(PointerByReference target, int index, double defaultValue);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_addEnergyParameterDerivative(OpenMM_CustomNonbondedForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomNonbondedForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_addEnergyParameterDerivative(Pointer target, Pointer name);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_addEnergyParameterDerivative(OpenMM_CustomNonbondedForce*, const char*)</code> */
	void OpenMM_CustomNonbondedForce_addEnergyParameterDerivative(PointerByReference target, String name);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_addEnergyParameterDerivative(OpenMM_CustomNonbondedForce*, const char*)</code> */
	void OpenMM_CustomNonbondedForce_addEnergyParameterDerivative(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomNonbondedForce_getEnergyParameterDerivativeName(const OpenMM_CustomNonbondedForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getEnergyParameterDerivativeName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomNonbondedForce_getEnergyParameterDerivativeName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomNonbondedForce_getEnergyParameterDerivativeName(const OpenMM_CustomNonbondedForce*, int)</code> */
	Pointer OpenMM_CustomNonbondedForce_getEnergyParameterDerivativeName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_addParticle(OpenMM_CustomNonbondedForce*, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_addParticle(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_addParticle(Pointer target, Pointer parameters);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_addParticle(OpenMM_CustomNonbondedForce*, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CustomNonbondedForce_addParticle(PointerByReference target, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_getParticleParameters(const OpenMM_CustomNonbondedForce*, int, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_getParticleParameters(Pointer target, int index, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_getParticleParameters(const OpenMM_CustomNonbondedForce*, int, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomNonbondedForce_getParticleParameters(PointerByReference target, int index, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setParticleParameters(OpenMM_CustomNonbondedForce*, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_setParticleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setParticleParameters(Pointer target, int index, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setParticleParameters(OpenMM_CustomNonbondedForce*, int, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomNonbondedForce_setParticleParameters(PointerByReference target, int index, PointerByReference parameters);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_addExclusion(OpenMM_CustomNonbondedForce*, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_addExclusion(com.sun.jna.ptr.PointerByReference, int, int)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_addExclusion(Pointer target, int particle1, int particle2);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_addExclusion(OpenMM_CustomNonbondedForce*, int, int)</code> */
	int OpenMM_CustomNonbondedForce_addExclusion(PointerByReference target, int particle1, int particle2);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_getExclusionParticles(const OpenMM_CustomNonbondedForce*, int, int*, int*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_getExclusionParticles(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #OpenMM_CustomNonbondedForce_getExclusionParticles(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_getExclusionParticles(Pointer target, int index, IntByReference particle1, IntByReference particle2);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_getExclusionParticles(const OpenMM_CustomNonbondedForce*, int, int*, int*)</code> */
	void OpenMM_CustomNonbondedForce_getExclusionParticles(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_getExclusionParticles(const OpenMM_CustomNonbondedForce*, int, int*, int*)</code> */
	void OpenMM_CustomNonbondedForce_getExclusionParticles(PointerByReference target, int index, IntByReference particle1, IntByReference particle2);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setExclusionParticles(OpenMM_CustomNonbondedForce*, int, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_setExclusionParticles(com.sun.jna.ptr.PointerByReference, int, int, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setExclusionParticles(Pointer target, int index, int particle1, int particle2);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setExclusionParticles(OpenMM_CustomNonbondedForce*, int, int, int)</code> */
	void OpenMM_CustomNonbondedForce_setExclusionParticles(PointerByReference target, int index, int particle1, int particle2);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_createExclusionsFromBonds(OpenMM_CustomNonbondedForce*, const OpenMM_BondArray*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_createExclusionsFromBonds(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_createExclusionsFromBonds(Pointer target, Pointer bonds, int bondCutoff);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_createExclusionsFromBonds(OpenMM_CustomNonbondedForce*, const OpenMM_BondArray*, int)</code> */
	void OpenMM_CustomNonbondedForce_createExclusionsFromBonds(PointerByReference target, PointerByReference bonds, int bondCutoff);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_addTabulatedFunction(OpenMM_CustomNonbondedForce*, const char*, OpenMM_TabulatedFunction*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomNonbondedForce_addTabulatedFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_addTabulatedFunction(Pointer target, Pointer name, Pointer function);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_addTabulatedFunction(OpenMM_CustomNonbondedForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomNonbondedForce_addTabulatedFunction(PointerByReference target, String name, PointerByReference function);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_addTabulatedFunction(OpenMM_CustomNonbondedForce*, const char*, OpenMM_TabulatedFunction*)</code> */
	int OpenMM_CustomNonbondedForce_addTabulatedFunction(PointerByReference target, Pointer name, PointerByReference function);
	/**
	 * Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomNonbondedForce_getTabulatedFunction(OpenMM_CustomNonbondedForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getTabulatedFunction(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomNonbondedForce_getTabulatedFunction(Pointer target, int index);
	/** Original signature : <code>OpenMM_TabulatedFunction* OpenMM_CustomNonbondedForce_getTabulatedFunction(OpenMM_CustomNonbondedForce*, int)</code> */
	PointerByReference OpenMM_CustomNonbondedForce_getTabulatedFunction(PointerByReference target, int index);
	/**
	 * Original signature : <code>char* OpenMM_CustomNonbondedForce_getTabulatedFunctionName(const OpenMM_CustomNonbondedForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getTabulatedFunctionName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomNonbondedForce_getTabulatedFunctionName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomNonbondedForce_getTabulatedFunctionName(const OpenMM_CustomNonbondedForce*, int)</code> */
	Pointer OpenMM_CustomNonbondedForce_getTabulatedFunctionName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_addFunction(OpenMM_CustomNonbondedForce*, const char*, const OpenMM_DoubleArray*, double, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_addFunction(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference, double, double)} and {@link #OpenMM_CustomNonbondedForce_addFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, double, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_addFunction(Pointer target, Pointer name, Pointer values, double min, double max);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_addFunction(OpenMM_CustomNonbondedForce*, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	int OpenMM_CustomNonbondedForce_addFunction(PointerByReference target, String name, PointerByReference values, double min, double max);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_addFunction(OpenMM_CustomNonbondedForce*, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	int OpenMM_CustomNonbondedForce_addFunction(PointerByReference target, Pointer name, PointerByReference values, double min, double max);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_getFunctionParameters(const OpenMM_CustomNonbondedForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_getFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_CustomNonbondedForce_getFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_getFunctionParameters(Pointer target, int index, PointerByReference name, Pointer values, DoubleByReference min, DoubleByReference max);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_getFunctionParameters(const OpenMM_CustomNonbondedForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code> */
	void OpenMM_CustomNonbondedForce_getFunctionParameters(PointerByReference target, int index, PointerByReference name, PointerByReference values, DoubleBuffer min, DoubleBuffer max);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_getFunctionParameters(const OpenMM_CustomNonbondedForce*, int, char**, OpenMM_DoubleArray*, double*, double*)</code> */
	void OpenMM_CustomNonbondedForce_getFunctionParameters(PointerByReference target, int index, PointerByReference name, PointerByReference values, DoubleByReference min, DoubleByReference max);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setFunctionParameters(OpenMM_CustomNonbondedForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomNonbondedForce_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, java.lang.String, com.sun.jna.ptr.PointerByReference, double, double)} and {@link #OpenMM_CustomNonbondedForce_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setFunctionParameters(Pointer target, int index, Pointer name, Pointer values, double min, double max);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setFunctionParameters(OpenMM_CustomNonbondedForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	void OpenMM_CustomNonbondedForce_setFunctionParameters(PointerByReference target, int index, String name, PointerByReference values, double min, double max);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setFunctionParameters(OpenMM_CustomNonbondedForce*, int, const char*, const OpenMM_DoubleArray*, double, double)</code> */
	void OpenMM_CustomNonbondedForce_setFunctionParameters(PointerByReference target, int index, Pointer name, PointerByReference values, double min, double max);
	/**
	 * Original signature : <code>int OpenMM_CustomNonbondedForce_addInteractionGroup(OpenMM_CustomNonbondedForce*, const OpenMM_IntSet*, const OpenMM_IntSet*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_addInteractionGroup(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_addInteractionGroup(Pointer target, Pointer set1, Pointer set2);
	/** Original signature : <code>int OpenMM_CustomNonbondedForce_addInteractionGroup(OpenMM_CustomNonbondedForce*, const OpenMM_IntSet*, const OpenMM_IntSet*)</code> */
	int OpenMM_CustomNonbondedForce_addInteractionGroup(PointerByReference target, PointerByReference set1, PointerByReference set2);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_getInteractionGroupParameters(const OpenMM_CustomNonbondedForce*, int, OpenMM_IntSet*, OpenMM_IntSet*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_getInteractionGroupParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_getInteractionGroupParameters(Pointer target, int index, Pointer set1, Pointer set2);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_getInteractionGroupParameters(const OpenMM_CustomNonbondedForce*, int, OpenMM_IntSet*, OpenMM_IntSet*)</code> */
	void OpenMM_CustomNonbondedForce_getInteractionGroupParameters(PointerByReference target, int index, PointerByReference set1, PointerByReference set2);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_setInteractionGroupParameters(OpenMM_CustomNonbondedForce*, int, const OpenMM_IntSet*, const OpenMM_IntSet*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_setInteractionGroupParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_setInteractionGroupParameters(Pointer target, int index, Pointer set1, Pointer set2);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_setInteractionGroupParameters(OpenMM_CustomNonbondedForce*, int, const OpenMM_IntSet*, const OpenMM_IntSet*)</code> */
	void OpenMM_CustomNonbondedForce_setInteractionGroupParameters(PointerByReference target, int index, PointerByReference set1, PointerByReference set2);
	/**
	 * Original signature : <code>void OpenMM_CustomNonbondedForce_updateParametersInContext(OpenMM_CustomNonbondedForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomNonbondedForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_CustomNonbondedForce_updateParametersInContext(OpenMM_CustomNonbondedForce*, OpenMM_Context*)</code> */
	void OpenMM_CustomNonbondedForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomNonbondedForce_usesPeriodicBoundaryConditions(const OpenMM_CustomNonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomNonbondedForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomNonbondedForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomNonbondedForce_usesPeriodicBoundaryConditions(const OpenMM_CustomNonbondedForce*)</code> */
	int OpenMM_CustomNonbondedForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * CustomTorsionForce<br>
	 * Original signature : <code>OpenMM_CustomTorsionForce* OpenMM_CustomTorsionForce_create(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomTorsionForce_create(java.lang.String)} and {@link #OpenMM_CustomTorsionForce_create(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_CustomTorsionForce_create(Pointer energy);
	/**
	 * CustomTorsionForce<br>
	 * Original signature : <code>OpenMM_CustomTorsionForce* OpenMM_CustomTorsionForce_create(const char*)</code>
	 */
	PointerByReference OpenMM_CustomTorsionForce_create(String energy);
	/**
	 * Original signature : <code>void OpenMM_CustomTorsionForce_destroy(OpenMM_CustomTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomTorsionForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_destroy(OpenMM_CustomTorsionForce*)</code> */
	void OpenMM_CustomTorsionForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomTorsionForce_getNumTorsions(const OpenMM_CustomTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_getNumTorsions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomTorsionForce_getNumTorsions(Pointer target);
	/** Original signature : <code>int OpenMM_CustomTorsionForce_getNumTorsions(const OpenMM_CustomTorsionForce*)</code> */
	int OpenMM_CustomTorsionForce_getNumTorsions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomTorsionForce_getNumPerTorsionParameters(const OpenMM_CustomTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_getNumPerTorsionParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomTorsionForce_getNumPerTorsionParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomTorsionForce_getNumPerTorsionParameters(const OpenMM_CustomTorsionForce*)</code> */
	int OpenMM_CustomTorsionForce_getNumPerTorsionParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomTorsionForce_getNumGlobalParameters(const OpenMM_CustomTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_getNumGlobalParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomTorsionForce_getNumGlobalParameters(Pointer target);
	/** Original signature : <code>int OpenMM_CustomTorsionForce_getNumGlobalParameters(const OpenMM_CustomTorsionForce*)</code> */
	int OpenMM_CustomTorsionForce_getNumGlobalParameters(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_CustomTorsionForce_getNumEnergyParameterDerivatives(const OpenMM_CustomTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_getNumEnergyParameterDerivatives(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomTorsionForce_getNumEnergyParameterDerivatives(Pointer target);
	/** Original signature : <code>int OpenMM_CustomTorsionForce_getNumEnergyParameterDerivatives(const OpenMM_CustomTorsionForce*)</code> */
	int OpenMM_CustomTorsionForce_getNumEnergyParameterDerivatives(PointerByReference target);
	/**
	 * Original signature : <code>char* OpenMM_CustomTorsionForce_getEnergyFunction(const OpenMM_CustomTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_getEnergyFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomTorsionForce_getEnergyFunction(Pointer target);
	/** Original signature : <code>char* OpenMM_CustomTorsionForce_getEnergyFunction(const OpenMM_CustomTorsionForce*)</code> */
	Pointer OpenMM_CustomTorsionForce_getEnergyFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_CustomTorsionForce_setEnergyFunction(OpenMM_CustomTorsionForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomTorsionForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomTorsionForce_setEnergyFunction(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomTorsionForce_setEnergyFunction(Pointer target, Pointer energy);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_setEnergyFunction(OpenMM_CustomTorsionForce*, const char*)</code> */
	void OpenMM_CustomTorsionForce_setEnergyFunction(PointerByReference target, String energy);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_setEnergyFunction(OpenMM_CustomTorsionForce*, const char*)</code> */
	void OpenMM_CustomTorsionForce_setEnergyFunction(PointerByReference target, Pointer energy);
	/**
	 * Original signature : <code>int OpenMM_CustomTorsionForce_addPerTorsionParameter(OpenMM_CustomTorsionForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomTorsionForce_addPerTorsionParameter(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomTorsionForce_addPerTorsionParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int OpenMM_CustomTorsionForce_addPerTorsionParameter(Pointer target, Pointer name);
	/** Original signature : <code>int OpenMM_CustomTorsionForce_addPerTorsionParameter(OpenMM_CustomTorsionForce*, const char*)</code> */
	int OpenMM_CustomTorsionForce_addPerTorsionParameter(PointerByReference target, String name);
	/** Original signature : <code>int OpenMM_CustomTorsionForce_addPerTorsionParameter(OpenMM_CustomTorsionForce*, const char*)</code> */
	int OpenMM_CustomTorsionForce_addPerTorsionParameter(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomTorsionForce_getPerTorsionParameterName(const OpenMM_CustomTorsionForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_getPerTorsionParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomTorsionForce_getPerTorsionParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomTorsionForce_getPerTorsionParameterName(const OpenMM_CustomTorsionForce*, int)</code> */
	Pointer OpenMM_CustomTorsionForce_getPerTorsionParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomTorsionForce_setPerTorsionParameterName(OpenMM_CustomTorsionForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomTorsionForce_setPerTorsionParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomTorsionForce_setPerTorsionParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomTorsionForce_setPerTorsionParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_setPerTorsionParameterName(OpenMM_CustomTorsionForce*, int, const char*)</code> */
	void OpenMM_CustomTorsionForce_setPerTorsionParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_setPerTorsionParameterName(OpenMM_CustomTorsionForce*, int, const char*)</code> */
	void OpenMM_CustomTorsionForce_setPerTorsionParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>int OpenMM_CustomTorsionForce_addGlobalParameter(OpenMM_CustomTorsionForce*, const char*, double)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomTorsionForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, java.lang.String, double)} and {@link #OpenMM_CustomTorsionForce_addGlobalParameter(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int OpenMM_CustomTorsionForce_addGlobalParameter(Pointer target, Pointer name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomTorsionForce_addGlobalParameter(OpenMM_CustomTorsionForce*, const char*, double)</code> */
	int OpenMM_CustomTorsionForce_addGlobalParameter(PointerByReference target, String name, double defaultValue);
	/** Original signature : <code>int OpenMM_CustomTorsionForce_addGlobalParameter(OpenMM_CustomTorsionForce*, const char*, double)</code> */
	int OpenMM_CustomTorsionForce_addGlobalParameter(PointerByReference target, Pointer name, double defaultValue);
	/**
	 * Original signature : <code>char* OpenMM_CustomTorsionForce_getGlobalParameterName(const OpenMM_CustomTorsionForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_getGlobalParameterName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomTorsionForce_getGlobalParameterName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomTorsionForce_getGlobalParameterName(const OpenMM_CustomTorsionForce*, int)</code> */
	Pointer OpenMM_CustomTorsionForce_getGlobalParameterName(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomTorsionForce_setGlobalParameterName(OpenMM_CustomTorsionForce*, int, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomTorsionForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #OpenMM_CustomTorsionForce_setGlobalParameterName(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomTorsionForce_setGlobalParameterName(Pointer target, int index, Pointer name);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_setGlobalParameterName(OpenMM_CustomTorsionForce*, int, const char*)</code> */
	void OpenMM_CustomTorsionForce_setGlobalParameterName(PointerByReference target, int index, String name);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_setGlobalParameterName(OpenMM_CustomTorsionForce*, int, const char*)</code> */
	void OpenMM_CustomTorsionForce_setGlobalParameterName(PointerByReference target, int index, Pointer name);
	/**
	 * Original signature : <code>double OpenMM_CustomTorsionForce_getGlobalParameterDefaultValue(const OpenMM_CustomTorsionForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_getGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_CustomTorsionForce_getGlobalParameterDefaultValue(Pointer target, int index);
	/** Original signature : <code>double OpenMM_CustomTorsionForce_getGlobalParameterDefaultValue(const OpenMM_CustomTorsionForce*, int)</code> */
	double OpenMM_CustomTorsionForce_getGlobalParameterDefaultValue(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_CustomTorsionForce_setGlobalParameterDefaultValue(OpenMM_CustomTorsionForce*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_setGlobalParameterDefaultValue(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_CustomTorsionForce_setGlobalParameterDefaultValue(Pointer target, int index, double defaultValue);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_setGlobalParameterDefaultValue(OpenMM_CustomTorsionForce*, int, double)</code> */
	void OpenMM_CustomTorsionForce_setGlobalParameterDefaultValue(PointerByReference target, int index, double defaultValue);
	/**
	 * Original signature : <code>void OpenMM_CustomTorsionForce_addEnergyParameterDerivative(OpenMM_CustomTorsionForce*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomTorsionForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #OpenMM_CustomTorsionForce_addEnergyParameterDerivative(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_CustomTorsionForce_addEnergyParameterDerivative(Pointer target, Pointer name);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_addEnergyParameterDerivative(OpenMM_CustomTorsionForce*, const char*)</code> */
	void OpenMM_CustomTorsionForce_addEnergyParameterDerivative(PointerByReference target, String name);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_addEnergyParameterDerivative(OpenMM_CustomTorsionForce*, const char*)</code> */
	void OpenMM_CustomTorsionForce_addEnergyParameterDerivative(PointerByReference target, Pointer name);
	/**
	 * Original signature : <code>char* OpenMM_CustomTorsionForce_getEnergyParameterDerivativeName(const OpenMM_CustomTorsionForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_getEnergyParameterDerivativeName(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer OpenMM_CustomTorsionForce_getEnergyParameterDerivativeName(Pointer target, int index);
	/** Original signature : <code>char* OpenMM_CustomTorsionForce_getEnergyParameterDerivativeName(const OpenMM_CustomTorsionForce*, int)</code> */
	Pointer OpenMM_CustomTorsionForce_getEnergyParameterDerivativeName(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_CustomTorsionForce_addTorsion(OpenMM_CustomTorsionForce*, int, int, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_addTorsion(com.sun.jna.ptr.PointerByReference, int, int, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomTorsionForce_addTorsion(Pointer target, int particle1, int particle2, int particle3, int particle4, Pointer parameters);
	/** Original signature : <code>int OpenMM_CustomTorsionForce_addTorsion(OpenMM_CustomTorsionForce*, int, int, int, int, const OpenMM_DoubleArray*)</code> */
	int OpenMM_CustomTorsionForce_addTorsion(PointerByReference target, int particle1, int particle2, int particle3, int particle4, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomTorsionForce_getTorsionParameters(const OpenMM_CustomTorsionForce*, int, int*, int*, int*, int*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_CustomTorsionForce_getTorsionParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_CustomTorsionForce_getTorsionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomTorsionForce_getTorsionParameters(Pointer target, int index, IntByReference particle1, IntByReference particle2, IntByReference particle3, IntByReference particle4, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_getTorsionParameters(const OpenMM_CustomTorsionForce*, int, int*, int*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomTorsionForce_getTorsionParameters(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2, IntBuffer particle3, IntBuffer particle4, PointerByReference parameters);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_getTorsionParameters(const OpenMM_CustomTorsionForce*, int, int*, int*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomTorsionForce_getTorsionParameters(PointerByReference target, int index, IntByReference particle1, IntByReference particle2, IntByReference particle3, IntByReference particle4, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomTorsionForce_setTorsionParameters(OpenMM_CustomTorsionForce*, int, int, int, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_setTorsionParameters(com.sun.jna.ptr.PointerByReference, int, int, int, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomTorsionForce_setTorsionParameters(Pointer target, int index, int particle1, int particle2, int particle3, int particle4, Pointer parameters);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_setTorsionParameters(OpenMM_CustomTorsionForce*, int, int, int, int, int, const OpenMM_DoubleArray*)</code> */
	void OpenMM_CustomTorsionForce_setTorsionParameters(PointerByReference target, int index, int particle1, int particle2, int particle3, int particle4, PointerByReference parameters);
	/**
	 * Original signature : <code>void OpenMM_CustomTorsionForce_updateParametersInContext(OpenMM_CustomTorsionForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_CustomTorsionForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_updateParametersInContext(OpenMM_CustomTorsionForce*, OpenMM_Context*)</code> */
	void OpenMM_CustomTorsionForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>void OpenMM_CustomTorsionForce_setUsesPeriodicBoundaryConditions(OpenMM_CustomTorsionForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_setUsesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_CustomTorsionForce_setUsesPeriodicBoundaryConditions(Pointer target, int periodic);
	/** Original signature : <code>void OpenMM_CustomTorsionForce_setUsesPeriodicBoundaryConditions(OpenMM_CustomTorsionForce*, OpenMM_Boolean)</code> */
	void OpenMM_CustomTorsionForce_setUsesPeriodicBoundaryConditions(PointerByReference target, int periodic);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_CustomTorsionForce_usesPeriodicBoundaryConditions(const OpenMM_CustomTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_CustomTorsionForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_CustomTorsionForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_CustomTorsionForce_usesPeriodicBoundaryConditions(const OpenMM_CustomTorsionForce*)</code> */
	int OpenMM_CustomTorsionForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * Discrete1DFunction<br>
	 * Original signature : <code>OpenMM_Discrete1DFunction* OpenMM_Discrete1DFunction_create(const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete1DFunction_create(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Discrete1DFunction_create(Pointer values);
	/**
	 * Discrete1DFunction<br>
	 * Original signature : <code>OpenMM_Discrete1DFunction* OpenMM_Discrete1DFunction_create(const OpenMM_DoubleArray*)</code>
	 */
	PointerByReference OpenMM_Discrete1DFunction_create(PointerByReference values);
	/**
	 * Original signature : <code>void OpenMM_Discrete1DFunction_destroy(OpenMM_Discrete1DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete1DFunction_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Discrete1DFunction_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_Discrete1DFunction_destroy(OpenMM_Discrete1DFunction*)</code> */
	void OpenMM_Discrete1DFunction_destroy(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Discrete1DFunction_getFunctionParameters(const OpenMM_Discrete1DFunction*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete1DFunction_getFunctionParameters(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Discrete1DFunction_getFunctionParameters(Pointer target, Pointer values);
	/** Original signature : <code>void OpenMM_Discrete1DFunction_getFunctionParameters(const OpenMM_Discrete1DFunction*, OpenMM_DoubleArray*)</code> */
	void OpenMM_Discrete1DFunction_getFunctionParameters(PointerByReference target, PointerByReference values);
	/**
	 * Original signature : <code>void OpenMM_Discrete1DFunction_setFunctionParameters(OpenMM_Discrete1DFunction*, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete1DFunction_setFunctionParameters(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Discrete1DFunction_setFunctionParameters(Pointer target, Pointer values);
	/** Original signature : <code>void OpenMM_Discrete1DFunction_setFunctionParameters(OpenMM_Discrete1DFunction*, const OpenMM_DoubleArray*)</code> */
	void OpenMM_Discrete1DFunction_setFunctionParameters(PointerByReference target, PointerByReference values);
	/**
	 * Original signature : <code>OpenMM_Discrete1DFunction* OpenMM_Discrete1DFunction_Copy(const OpenMM_Discrete1DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete1DFunction_Copy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Discrete1DFunction_Copy(Pointer target);
	/** Original signature : <code>OpenMM_Discrete1DFunction* OpenMM_Discrete1DFunction_Copy(const OpenMM_Discrete1DFunction*)</code> */
	PointerByReference OpenMM_Discrete1DFunction_Copy(PointerByReference target);
	/**
	 * Discrete2DFunction<br>
	 * Original signature : <code>OpenMM_Discrete2DFunction* OpenMM_Discrete2DFunction_create(int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete2DFunction_create(int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Discrete2DFunction_create(int xsize, int ysize, Pointer values);
	/**
	 * Discrete2DFunction<br>
	 * Original signature : <code>OpenMM_Discrete2DFunction* OpenMM_Discrete2DFunction_create(int, int, const OpenMM_DoubleArray*)</code>
	 */
	PointerByReference OpenMM_Discrete2DFunction_create(int xsize, int ysize, PointerByReference values);
	/**
	 * Original signature : <code>void OpenMM_Discrete2DFunction_destroy(OpenMM_Discrete2DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete2DFunction_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Discrete2DFunction_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_Discrete2DFunction_destroy(OpenMM_Discrete2DFunction*)</code> */
	void OpenMM_Discrete2DFunction_destroy(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Discrete2DFunction_getFunctionParameters(const OpenMM_Discrete2DFunction*, int*, int*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Discrete2DFunction_getFunctionParameters(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_Discrete2DFunction_getFunctionParameters(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Discrete2DFunction_getFunctionParameters(Pointer target, IntByReference xsize, IntByReference ysize, Pointer values);
	/** Original signature : <code>void OpenMM_Discrete2DFunction_getFunctionParameters(const OpenMM_Discrete2DFunction*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_Discrete2DFunction_getFunctionParameters(PointerByReference target, IntBuffer xsize, IntBuffer ysize, PointerByReference values);
	/** Original signature : <code>void OpenMM_Discrete2DFunction_getFunctionParameters(const OpenMM_Discrete2DFunction*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_Discrete2DFunction_getFunctionParameters(PointerByReference target, IntByReference xsize, IntByReference ysize, PointerByReference values);
	/**
	 * Original signature : <code>void OpenMM_Discrete2DFunction_setFunctionParameters(OpenMM_Discrete2DFunction*, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete2DFunction_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Discrete2DFunction_setFunctionParameters(Pointer target, int xsize, int ysize, Pointer values);
	/** Original signature : <code>void OpenMM_Discrete2DFunction_setFunctionParameters(OpenMM_Discrete2DFunction*, int, int, const OpenMM_DoubleArray*)</code> */
	void OpenMM_Discrete2DFunction_setFunctionParameters(PointerByReference target, int xsize, int ysize, PointerByReference values);
	/**
	 * Original signature : <code>OpenMM_Discrete2DFunction* OpenMM_Discrete2DFunction_Copy(const OpenMM_Discrete2DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete2DFunction_Copy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Discrete2DFunction_Copy(Pointer target);
	/** Original signature : <code>OpenMM_Discrete2DFunction* OpenMM_Discrete2DFunction_Copy(const OpenMM_Discrete2DFunction*)</code> */
	PointerByReference OpenMM_Discrete2DFunction_Copy(PointerByReference target);
	/**
	 * Discrete3DFunction<br>
	 * Original signature : <code>OpenMM_Discrete3DFunction* OpenMM_Discrete3DFunction_create(int, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete3DFunction_create(int, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Discrete3DFunction_create(int xsize, int ysize, int zsize, Pointer values);
	/**
	 * Discrete3DFunction<br>
	 * Original signature : <code>OpenMM_Discrete3DFunction* OpenMM_Discrete3DFunction_create(int, int, int, const OpenMM_DoubleArray*)</code>
	 */
	PointerByReference OpenMM_Discrete3DFunction_create(int xsize, int ysize, int zsize, PointerByReference values);
	/**
	 * Original signature : <code>void OpenMM_Discrete3DFunction_destroy(OpenMM_Discrete3DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete3DFunction_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Discrete3DFunction_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_Discrete3DFunction_destroy(OpenMM_Discrete3DFunction*)</code> */
	void OpenMM_Discrete3DFunction_destroy(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Discrete3DFunction_getFunctionParameters(const OpenMM_Discrete3DFunction*, int*, int*, int*, OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Discrete3DFunction_getFunctionParameters(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #OpenMM_Discrete3DFunction_getFunctionParameters(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Discrete3DFunction_getFunctionParameters(Pointer target, IntByReference xsize, IntByReference ysize, IntByReference zsize, Pointer values);
	/** Original signature : <code>void OpenMM_Discrete3DFunction_getFunctionParameters(const OpenMM_Discrete3DFunction*, int*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_Discrete3DFunction_getFunctionParameters(PointerByReference target, IntBuffer xsize, IntBuffer ysize, IntBuffer zsize, PointerByReference values);
	/** Original signature : <code>void OpenMM_Discrete3DFunction_getFunctionParameters(const OpenMM_Discrete3DFunction*, int*, int*, int*, OpenMM_DoubleArray*)</code> */
	void OpenMM_Discrete3DFunction_getFunctionParameters(PointerByReference target, IntByReference xsize, IntByReference ysize, IntByReference zsize, PointerByReference values);
	/**
	 * Original signature : <code>void OpenMM_Discrete3DFunction_setFunctionParameters(OpenMM_Discrete3DFunction*, int, int, int, const OpenMM_DoubleArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete3DFunction_setFunctionParameters(com.sun.jna.ptr.PointerByReference, int, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Discrete3DFunction_setFunctionParameters(Pointer target, int xsize, int ysize, int zsize, Pointer values);
	/** Original signature : <code>void OpenMM_Discrete3DFunction_setFunctionParameters(OpenMM_Discrete3DFunction*, int, int, int, const OpenMM_DoubleArray*)</code> */
	void OpenMM_Discrete3DFunction_setFunctionParameters(PointerByReference target, int xsize, int ysize, int zsize, PointerByReference values);
	/**
	 * Original signature : <code>OpenMM_Discrete3DFunction* OpenMM_Discrete3DFunction_Copy(const OpenMM_Discrete3DFunction*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Discrete3DFunction_Copy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Discrete3DFunction_Copy(Pointer target);
	/** Original signature : <code>OpenMM_Discrete3DFunction* OpenMM_Discrete3DFunction_Copy(const OpenMM_Discrete3DFunction*)</code> */
	PointerByReference OpenMM_Discrete3DFunction_Copy(PointerByReference target);
	/** Original signature : <code>OpenMM_GayBerneForce* OpenMM_GayBerneForce_create()</code> */
	PointerByReference OpenMM_GayBerneForce_create();
	/**
	 * Original signature : <code>void OpenMM_GayBerneForce_destroy(OpenMM_GayBerneForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_GayBerneForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_GayBerneForce_destroy(OpenMM_GayBerneForce*)</code> */
	void OpenMM_GayBerneForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_GayBerneForce_getNumParticles(const OpenMM_GayBerneForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_getNumParticles(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_GayBerneForce_getNumParticles(Pointer target);
	/** Original signature : <code>int OpenMM_GayBerneForce_getNumParticles(const OpenMM_GayBerneForce*)</code> */
	int OpenMM_GayBerneForce_getNumParticles(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_GayBerneForce_getNumExceptions(const OpenMM_GayBerneForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_getNumExceptions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_GayBerneForce_getNumExceptions(Pointer target);
	/** Original signature : <code>int OpenMM_GayBerneForce_getNumExceptions(const OpenMM_GayBerneForce*)</code> */
	int OpenMM_GayBerneForce_getNumExceptions(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_GayBerneForce_NonbondedMethod OpenMM_GayBerneForce_getNonbondedMethod(const OpenMM_GayBerneForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_getNonbondedMethod(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_GayBerneForce_getNonbondedMethod(Pointer target);
	/** Original signature : <code>OpenMM_GayBerneForce_NonbondedMethod OpenMM_GayBerneForce_getNonbondedMethod(const OpenMM_GayBerneForce*)</code> */
	int OpenMM_GayBerneForce_getNonbondedMethod(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_GayBerneForce_setNonbondedMethod(OpenMM_GayBerneForce*, OpenMM_GayBerneForce_NonbondedMethod)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_setNonbondedMethod(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_GayBerneForce_setNonbondedMethod(Pointer target, int method);
	/** Original signature : <code>void OpenMM_GayBerneForce_setNonbondedMethod(OpenMM_GayBerneForce*, OpenMM_GayBerneForce_NonbondedMethod)</code> */
	void OpenMM_GayBerneForce_setNonbondedMethod(PointerByReference target, int method);
	/**
	 * Original signature : <code>double OpenMM_GayBerneForce_getCutoffDistance(const OpenMM_GayBerneForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_getCutoffDistance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_GayBerneForce_getCutoffDistance(Pointer target);
	/** Original signature : <code>double OpenMM_GayBerneForce_getCutoffDistance(const OpenMM_GayBerneForce*)</code> */
	double OpenMM_GayBerneForce_getCutoffDistance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_GayBerneForce_setCutoffDistance(OpenMM_GayBerneForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_setCutoffDistance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_GayBerneForce_setCutoffDistance(Pointer target, double distance);
	/** Original signature : <code>void OpenMM_GayBerneForce_setCutoffDistance(OpenMM_GayBerneForce*, double)</code> */
	void OpenMM_GayBerneForce_setCutoffDistance(PointerByReference target, double distance);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_GayBerneForce_getUseSwitchingFunction(const OpenMM_GayBerneForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_getUseSwitchingFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_GayBerneForce_getUseSwitchingFunction(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_GayBerneForce_getUseSwitchingFunction(const OpenMM_GayBerneForce*)</code> */
	int OpenMM_GayBerneForce_getUseSwitchingFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_GayBerneForce_setUseSwitchingFunction(OpenMM_GayBerneForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_setUseSwitchingFunction(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_GayBerneForce_setUseSwitchingFunction(Pointer target, int use);
	/** Original signature : <code>void OpenMM_GayBerneForce_setUseSwitchingFunction(OpenMM_GayBerneForce*, OpenMM_Boolean)</code> */
	void OpenMM_GayBerneForce_setUseSwitchingFunction(PointerByReference target, int use);
	/**
	 * Original signature : <code>double OpenMM_GayBerneForce_getSwitchingDistance(const OpenMM_GayBerneForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_getSwitchingDistance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_GayBerneForce_getSwitchingDistance(Pointer target);
	/** Original signature : <code>double OpenMM_GayBerneForce_getSwitchingDistance(const OpenMM_GayBerneForce*)</code> */
	double OpenMM_GayBerneForce_getSwitchingDistance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_GayBerneForce_setSwitchingDistance(OpenMM_GayBerneForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_setSwitchingDistance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_GayBerneForce_setSwitchingDistance(Pointer target, double distance);
	/** Original signature : <code>void OpenMM_GayBerneForce_setSwitchingDistance(OpenMM_GayBerneForce*, double)</code> */
	void OpenMM_GayBerneForce_setSwitchingDistance(PointerByReference target, double distance);
	/**
	 * Original signature : <code>int OpenMM_GayBerneForce_addParticle(OpenMM_GayBerneForce*, double, double, int, int, double, double, double, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_addParticle(com.sun.jna.ptr.PointerByReference, double, double, int, int, double, double, double, double, double, double)} instead
	 */
	@Deprecated 
	int OpenMM_GayBerneForce_addParticle(Pointer target, double sigma, double epsilon, int xparticle, int yparticle, double sx, double sy, double sz, double ex, double ey, double ez);
	/** Original signature : <code>int OpenMM_GayBerneForce_addParticle(OpenMM_GayBerneForce*, double, double, int, int, double, double, double, double, double, double)</code> */
	int OpenMM_GayBerneForce_addParticle(PointerByReference target, double sigma, double epsilon, int xparticle, int yparticle, double sx, double sy, double sz, double ex, double ey, double ez);
	/**
	 * Original signature : <code>void OpenMM_GayBerneForce_getParticleParameters(const OpenMM_GayBerneForce*, int, double*, double*, int*, int*, double*, double*, double*, double*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_GayBerneForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_GayBerneForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_GayBerneForce_getParticleParameters(Pointer target, int index, DoubleByReference sigma, DoubleByReference epsilon, IntByReference xparticle, IntByReference yparticle, DoubleByReference sx, DoubleByReference sy, DoubleByReference sz, DoubleByReference ex, DoubleByReference ey, DoubleByReference ez);
	/** Original signature : <code>void OpenMM_GayBerneForce_getParticleParameters(const OpenMM_GayBerneForce*, int, double*, double*, int*, int*, double*, double*, double*, double*, double*, double*)</code> */
	void OpenMM_GayBerneForce_getParticleParameters(PointerByReference target, int index, DoubleBuffer sigma, DoubleBuffer epsilon, IntBuffer xparticle, IntBuffer yparticle, DoubleBuffer sx, DoubleBuffer sy, DoubleBuffer sz, DoubleBuffer ex, DoubleBuffer ey, DoubleBuffer ez);
	/** Original signature : <code>void OpenMM_GayBerneForce_getParticleParameters(const OpenMM_GayBerneForce*, int, double*, double*, int*, int*, double*, double*, double*, double*, double*, double*)</code> */
	void OpenMM_GayBerneForce_getParticleParameters(PointerByReference target, int index, DoubleByReference sigma, DoubleByReference epsilon, IntByReference xparticle, IntByReference yparticle, DoubleByReference sx, DoubleByReference sy, DoubleByReference sz, DoubleByReference ex, DoubleByReference ey, DoubleByReference ez);
	/**
	 * Original signature : <code>void OpenMM_GayBerneForce_setParticleParameters(OpenMM_GayBerneForce*, int, double, double, int, int, double, double, double, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_setParticleParameters(com.sun.jna.ptr.PointerByReference, int, double, double, int, int, double, double, double, double, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_GayBerneForce_setParticleParameters(Pointer target, int index, double sigma, double epsilon, int xparticle, int yparticle, double sx, double sy, double sz, double ex, double ey, double ez);
	/** Original signature : <code>void OpenMM_GayBerneForce_setParticleParameters(OpenMM_GayBerneForce*, int, double, double, int, int, double, double, double, double, double, double)</code> */
	void OpenMM_GayBerneForce_setParticleParameters(PointerByReference target, int index, double sigma, double epsilon, int xparticle, int yparticle, double sx, double sy, double sz, double ex, double ey, double ez);
	/**
	 * Original signature : <code>int OpenMM_GayBerneForce_addException(OpenMM_GayBerneForce*, int, int, double, double, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_addException(com.sun.jna.ptr.PointerByReference, int, int, double, double, int)} instead
	 */
	@Deprecated 
	int OpenMM_GayBerneForce_addException(Pointer target, int particle1, int particle2, double sigma, double epsilon, int replace);
	/** Original signature : <code>int OpenMM_GayBerneForce_addException(OpenMM_GayBerneForce*, int, int, double, double, OpenMM_Boolean)</code> */
	int OpenMM_GayBerneForce_addException(PointerByReference target, int particle1, int particle2, double sigma, double epsilon, int replace);
	/**
	 * Original signature : <code>void OpenMM_GayBerneForce_getExceptionParameters(const OpenMM_GayBerneForce*, int, int*, int*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_GayBerneForce_getExceptionParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_GayBerneForce_getExceptionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_GayBerneForce_getExceptionParameters(Pointer target, int index, IntByReference particle1, IntByReference particle2, DoubleByReference sigma, DoubleByReference epsilon);
	/** Original signature : <code>void OpenMM_GayBerneForce_getExceptionParameters(const OpenMM_GayBerneForce*, int, int*, int*, double*, double*)</code> */
	void OpenMM_GayBerneForce_getExceptionParameters(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2, DoubleBuffer sigma, DoubleBuffer epsilon);
	/** Original signature : <code>void OpenMM_GayBerneForce_getExceptionParameters(const OpenMM_GayBerneForce*, int, int*, int*, double*, double*)</code> */
	void OpenMM_GayBerneForce_getExceptionParameters(PointerByReference target, int index, IntByReference particle1, IntByReference particle2, DoubleByReference sigma, DoubleByReference epsilon);
	/**
	 * Original signature : <code>void OpenMM_GayBerneForce_setExceptionParameters(OpenMM_GayBerneForce*, int, int, int, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_setExceptionParameters(com.sun.jna.ptr.PointerByReference, int, int, int, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_GayBerneForce_setExceptionParameters(Pointer target, int index, int particle1, int particle2, double sigma, double epsilon);
	/** Original signature : <code>void OpenMM_GayBerneForce_setExceptionParameters(OpenMM_GayBerneForce*, int, int, int, double, double)</code> */
	void OpenMM_GayBerneForce_setExceptionParameters(PointerByReference target, int index, int particle1, int particle2, double sigma, double epsilon);
	/**
	 * Original signature : <code>void OpenMM_GayBerneForce_updateParametersInContext(OpenMM_GayBerneForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_GayBerneForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_GayBerneForce_updateParametersInContext(OpenMM_GayBerneForce*, OpenMM_Context*)</code> */
	void OpenMM_GayBerneForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_GayBerneForce_usesPeriodicBoundaryConditions(const OpenMM_GayBerneForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GayBerneForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_GayBerneForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_GayBerneForce_usesPeriodicBoundaryConditions(const OpenMM_GayBerneForce*)</code> */
	int OpenMM_GayBerneForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/** Original signature : <code>OpenMM_GBSAOBCForce* OpenMM_GBSAOBCForce_create()</code> */
	PointerByReference OpenMM_GBSAOBCForce_create();
	/**
	 * Original signature : <code>void OpenMM_GBSAOBCForce_destroy(OpenMM_GBSAOBCForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_GBSAOBCForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_GBSAOBCForce_destroy(OpenMM_GBSAOBCForce*)</code> */
	void OpenMM_GBSAOBCForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_GBSAOBCForce_getNumParticles(const OpenMM_GBSAOBCForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_getNumParticles(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_GBSAOBCForce_getNumParticles(Pointer target);
	/** Original signature : <code>int OpenMM_GBSAOBCForce_getNumParticles(const OpenMM_GBSAOBCForce*)</code> */
	int OpenMM_GBSAOBCForce_getNumParticles(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_GBSAOBCForce_addParticle(OpenMM_GBSAOBCForce*, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_addParticle(com.sun.jna.ptr.PointerByReference, double, double, double)} instead
	 */
	@Deprecated 
	int OpenMM_GBSAOBCForce_addParticle(Pointer target, double charge, double radius, double scalingFactor);
	/** Original signature : <code>int OpenMM_GBSAOBCForce_addParticle(OpenMM_GBSAOBCForce*, double, double, double)</code> */
	int OpenMM_GBSAOBCForce_addParticle(PointerByReference target, double charge, double radius, double scalingFactor);
	/**
	 * Original signature : <code>void OpenMM_GBSAOBCForce_getParticleParameters(const OpenMM_GBSAOBCForce*, int, double*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_GBSAOBCForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_GBSAOBCForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_GBSAOBCForce_getParticleParameters(Pointer target, int index, DoubleByReference charge, DoubleByReference radius, DoubleByReference scalingFactor);
	/** Original signature : <code>void OpenMM_GBSAOBCForce_getParticleParameters(const OpenMM_GBSAOBCForce*, int, double*, double*, double*)</code> */
	void OpenMM_GBSAOBCForce_getParticleParameters(PointerByReference target, int index, DoubleBuffer charge, DoubleBuffer radius, DoubleBuffer scalingFactor);
	/** Original signature : <code>void OpenMM_GBSAOBCForce_getParticleParameters(const OpenMM_GBSAOBCForce*, int, double*, double*, double*)</code> */
	void OpenMM_GBSAOBCForce_getParticleParameters(PointerByReference target, int index, DoubleByReference charge, DoubleByReference radius, DoubleByReference scalingFactor);
	/**
	 * Original signature : <code>void OpenMM_GBSAOBCForce_setParticleParameters(OpenMM_GBSAOBCForce*, int, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_setParticleParameters(com.sun.jna.ptr.PointerByReference, int, double, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_GBSAOBCForce_setParticleParameters(Pointer target, int index, double charge, double radius, double scalingFactor);
	/** Original signature : <code>void OpenMM_GBSAOBCForce_setParticleParameters(OpenMM_GBSAOBCForce*, int, double, double, double)</code> */
	void OpenMM_GBSAOBCForce_setParticleParameters(PointerByReference target, int index, double charge, double radius, double scalingFactor);
	/**
	 * Original signature : <code>double OpenMM_GBSAOBCForce_getSolventDielectric(const OpenMM_GBSAOBCForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_getSolventDielectric(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_GBSAOBCForce_getSolventDielectric(Pointer target);
	/** Original signature : <code>double OpenMM_GBSAOBCForce_getSolventDielectric(const OpenMM_GBSAOBCForce*)</code> */
	double OpenMM_GBSAOBCForce_getSolventDielectric(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_GBSAOBCForce_setSolventDielectric(OpenMM_GBSAOBCForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_setSolventDielectric(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_GBSAOBCForce_setSolventDielectric(Pointer target, double dielectric);
	/** Original signature : <code>void OpenMM_GBSAOBCForce_setSolventDielectric(OpenMM_GBSAOBCForce*, double)</code> */
	void OpenMM_GBSAOBCForce_setSolventDielectric(PointerByReference target, double dielectric);
	/**
	 * Original signature : <code>double OpenMM_GBSAOBCForce_getSoluteDielectric(const OpenMM_GBSAOBCForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_getSoluteDielectric(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_GBSAOBCForce_getSoluteDielectric(Pointer target);
	/** Original signature : <code>double OpenMM_GBSAOBCForce_getSoluteDielectric(const OpenMM_GBSAOBCForce*)</code> */
	double OpenMM_GBSAOBCForce_getSoluteDielectric(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_GBSAOBCForce_setSoluteDielectric(OpenMM_GBSAOBCForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_setSoluteDielectric(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_GBSAOBCForce_setSoluteDielectric(Pointer target, double dielectric);
	/** Original signature : <code>void OpenMM_GBSAOBCForce_setSoluteDielectric(OpenMM_GBSAOBCForce*, double)</code> */
	void OpenMM_GBSAOBCForce_setSoluteDielectric(PointerByReference target, double dielectric);
	/**
	 * Original signature : <code>double OpenMM_GBSAOBCForce_getSurfaceAreaEnergy(const OpenMM_GBSAOBCForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_getSurfaceAreaEnergy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_GBSAOBCForce_getSurfaceAreaEnergy(Pointer target);
	/** Original signature : <code>double OpenMM_GBSAOBCForce_getSurfaceAreaEnergy(const OpenMM_GBSAOBCForce*)</code> */
	double OpenMM_GBSAOBCForce_getSurfaceAreaEnergy(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_GBSAOBCForce_setSurfaceAreaEnergy(OpenMM_GBSAOBCForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_setSurfaceAreaEnergy(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_GBSAOBCForce_setSurfaceAreaEnergy(Pointer target, double energy);
	/** Original signature : <code>void OpenMM_GBSAOBCForce_setSurfaceAreaEnergy(OpenMM_GBSAOBCForce*, double)</code> */
	void OpenMM_GBSAOBCForce_setSurfaceAreaEnergy(PointerByReference target, double energy);
	/**
	 * Original signature : <code>OpenMM_GBSAOBCForce_NonbondedMethod OpenMM_GBSAOBCForce_getNonbondedMethod(const OpenMM_GBSAOBCForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_getNonbondedMethod(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_GBSAOBCForce_getNonbondedMethod(Pointer target);
	/** Original signature : <code>OpenMM_GBSAOBCForce_NonbondedMethod OpenMM_GBSAOBCForce_getNonbondedMethod(const OpenMM_GBSAOBCForce*)</code> */
	int OpenMM_GBSAOBCForce_getNonbondedMethod(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_GBSAOBCForce_setNonbondedMethod(OpenMM_GBSAOBCForce*, OpenMM_GBSAOBCForce_NonbondedMethod)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_setNonbondedMethod(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_GBSAOBCForce_setNonbondedMethod(Pointer target, int method);
	/** Original signature : <code>void OpenMM_GBSAOBCForce_setNonbondedMethod(OpenMM_GBSAOBCForce*, OpenMM_GBSAOBCForce_NonbondedMethod)</code> */
	void OpenMM_GBSAOBCForce_setNonbondedMethod(PointerByReference target, int method);
	/**
	 * Original signature : <code>double OpenMM_GBSAOBCForce_getCutoffDistance(const OpenMM_GBSAOBCForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_getCutoffDistance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_GBSAOBCForce_getCutoffDistance(Pointer target);
	/** Original signature : <code>double OpenMM_GBSAOBCForce_getCutoffDistance(const OpenMM_GBSAOBCForce*)</code> */
	double OpenMM_GBSAOBCForce_getCutoffDistance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_GBSAOBCForce_setCutoffDistance(OpenMM_GBSAOBCForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_setCutoffDistance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_GBSAOBCForce_setCutoffDistance(Pointer target, double distance);
	/** Original signature : <code>void OpenMM_GBSAOBCForce_setCutoffDistance(OpenMM_GBSAOBCForce*, double)</code> */
	void OpenMM_GBSAOBCForce_setCutoffDistance(PointerByReference target, double distance);
	/**
	 * Original signature : <code>void OpenMM_GBSAOBCForce_updateParametersInContext(OpenMM_GBSAOBCForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_GBSAOBCForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_GBSAOBCForce_updateParametersInContext(OpenMM_GBSAOBCForce*, OpenMM_Context*)</code> */
	void OpenMM_GBSAOBCForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_GBSAOBCForce_usesPeriodicBoundaryConditions(const OpenMM_GBSAOBCForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_GBSAOBCForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_GBSAOBCForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_GBSAOBCForce_usesPeriodicBoundaryConditions(const OpenMM_GBSAOBCForce*)</code> */
	int OpenMM_GBSAOBCForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * HarmonicAngleForce<br>
	 * Original signature : <code>OpenMM_HarmonicAngleForce* OpenMM_HarmonicAngleForce_create()</code>
	 */
	PointerByReference OpenMM_HarmonicAngleForce_create();
	/**
	 * Original signature : <code>void OpenMM_HarmonicAngleForce_destroy(OpenMM_HarmonicAngleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicAngleForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_HarmonicAngleForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_HarmonicAngleForce_destroy(OpenMM_HarmonicAngleForce*)</code> */
	void OpenMM_HarmonicAngleForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_HarmonicAngleForce_getNumAngles(const OpenMM_HarmonicAngleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicAngleForce_getNumAngles(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_HarmonicAngleForce_getNumAngles(Pointer target);
	/** Original signature : <code>int OpenMM_HarmonicAngleForce_getNumAngles(const OpenMM_HarmonicAngleForce*)</code> */
	int OpenMM_HarmonicAngleForce_getNumAngles(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_HarmonicAngleForce_addAngle(OpenMM_HarmonicAngleForce*, int, int, int, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicAngleForce_addAngle(com.sun.jna.ptr.PointerByReference, int, int, int, double, double)} instead
	 */
	@Deprecated 
	int OpenMM_HarmonicAngleForce_addAngle(Pointer target, int particle1, int particle2, int particle3, double angle, double k);
	/** Original signature : <code>int OpenMM_HarmonicAngleForce_addAngle(OpenMM_HarmonicAngleForce*, int, int, int, double, double)</code> */
	int OpenMM_HarmonicAngleForce_addAngle(PointerByReference target, int particle1, int particle2, int particle3, double angle, double k);
	/**
	 * Original signature : <code>void OpenMM_HarmonicAngleForce_getAngleParameters(const OpenMM_HarmonicAngleForce*, int, int*, int*, int*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_HarmonicAngleForce_getAngleParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_HarmonicAngleForce_getAngleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_HarmonicAngleForce_getAngleParameters(Pointer target, int index, IntByReference particle1, IntByReference particle2, IntByReference particle3, DoubleByReference angle, DoubleByReference k);
	/** Original signature : <code>void OpenMM_HarmonicAngleForce_getAngleParameters(const OpenMM_HarmonicAngleForce*, int, int*, int*, int*, double*, double*)</code> */
	void OpenMM_HarmonicAngleForce_getAngleParameters(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2, IntBuffer particle3, DoubleBuffer angle, DoubleBuffer k);
	/** Original signature : <code>void OpenMM_HarmonicAngleForce_getAngleParameters(const OpenMM_HarmonicAngleForce*, int, int*, int*, int*, double*, double*)</code> */
	void OpenMM_HarmonicAngleForce_getAngleParameters(PointerByReference target, int index, IntByReference particle1, IntByReference particle2, IntByReference particle3, DoubleByReference angle, DoubleByReference k);
	/**
	 * Original signature : <code>void OpenMM_HarmonicAngleForce_setAngleParameters(OpenMM_HarmonicAngleForce*, int, int, int, int, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicAngleForce_setAngleParameters(com.sun.jna.ptr.PointerByReference, int, int, int, int, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_HarmonicAngleForce_setAngleParameters(Pointer target, int index, int particle1, int particle2, int particle3, double angle, double k);
	/** Original signature : <code>void OpenMM_HarmonicAngleForce_setAngleParameters(OpenMM_HarmonicAngleForce*, int, int, int, int, double, double)</code> */
	void OpenMM_HarmonicAngleForce_setAngleParameters(PointerByReference target, int index, int particle1, int particle2, int particle3, double angle, double k);
	/**
	 * Original signature : <code>void OpenMM_HarmonicAngleForce_updateParametersInContext(OpenMM_HarmonicAngleForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicAngleForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_HarmonicAngleForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_HarmonicAngleForce_updateParametersInContext(OpenMM_HarmonicAngleForce*, OpenMM_Context*)</code> */
	void OpenMM_HarmonicAngleForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>void OpenMM_HarmonicAngleForce_setUsesPeriodicBoundaryConditions(OpenMM_HarmonicAngleForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicAngleForce_setUsesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_HarmonicAngleForce_setUsesPeriodicBoundaryConditions(Pointer target, int periodic);
	/** Original signature : <code>void OpenMM_HarmonicAngleForce_setUsesPeriodicBoundaryConditions(OpenMM_HarmonicAngleForce*, OpenMM_Boolean)</code> */
	void OpenMM_HarmonicAngleForce_setUsesPeriodicBoundaryConditions(PointerByReference target, int periodic);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_HarmonicAngleForce_usesPeriodicBoundaryConditions(const OpenMM_HarmonicAngleForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicAngleForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_HarmonicAngleForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_HarmonicAngleForce_usesPeriodicBoundaryConditions(const OpenMM_HarmonicAngleForce*)</code> */
	int OpenMM_HarmonicAngleForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * HarmonicBondForce<br>
	 * Original signature : <code>OpenMM_HarmonicBondForce* OpenMM_HarmonicBondForce_create()</code>
	 */
	PointerByReference OpenMM_HarmonicBondForce_create();
	/**
	 * Original signature : <code>void OpenMM_HarmonicBondForce_destroy(OpenMM_HarmonicBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicBondForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_HarmonicBondForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_HarmonicBondForce_destroy(OpenMM_HarmonicBondForce*)</code> */
	void OpenMM_HarmonicBondForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_HarmonicBondForce_getNumBonds(const OpenMM_HarmonicBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicBondForce_getNumBonds(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_HarmonicBondForce_getNumBonds(Pointer target);
	/** Original signature : <code>int OpenMM_HarmonicBondForce_getNumBonds(const OpenMM_HarmonicBondForce*)</code> */
	int OpenMM_HarmonicBondForce_getNumBonds(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_HarmonicBondForce_addBond(OpenMM_HarmonicBondForce*, int, int, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicBondForce_addBond(com.sun.jna.ptr.PointerByReference, int, int, double, double)} instead
	 */
	@Deprecated 
	int OpenMM_HarmonicBondForce_addBond(Pointer target, int particle1, int particle2, double length, double k);
	/** Original signature : <code>int OpenMM_HarmonicBondForce_addBond(OpenMM_HarmonicBondForce*, int, int, double, double)</code> */
	int OpenMM_HarmonicBondForce_addBond(PointerByReference target, int particle1, int particle2, double length, double k);
	/**
	 * Original signature : <code>void OpenMM_HarmonicBondForce_getBondParameters(const OpenMM_HarmonicBondForce*, int, int*, int*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_HarmonicBondForce_getBondParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_HarmonicBondForce_getBondParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_HarmonicBondForce_getBondParameters(Pointer target, int index, IntByReference particle1, IntByReference particle2, DoubleByReference length, DoubleByReference k);
	/** Original signature : <code>void OpenMM_HarmonicBondForce_getBondParameters(const OpenMM_HarmonicBondForce*, int, int*, int*, double*, double*)</code> */
	void OpenMM_HarmonicBondForce_getBondParameters(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2, DoubleBuffer length, DoubleBuffer k);
	/** Original signature : <code>void OpenMM_HarmonicBondForce_getBondParameters(const OpenMM_HarmonicBondForce*, int, int*, int*, double*, double*)</code> */
	void OpenMM_HarmonicBondForce_getBondParameters(PointerByReference target, int index, IntByReference particle1, IntByReference particle2, DoubleByReference length, DoubleByReference k);
	/**
	 * Original signature : <code>void OpenMM_HarmonicBondForce_setBondParameters(OpenMM_HarmonicBondForce*, int, int, int, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicBondForce_setBondParameters(com.sun.jna.ptr.PointerByReference, int, int, int, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_HarmonicBondForce_setBondParameters(Pointer target, int index, int particle1, int particle2, double length, double k);
	/** Original signature : <code>void OpenMM_HarmonicBondForce_setBondParameters(OpenMM_HarmonicBondForce*, int, int, int, double, double)</code> */
	void OpenMM_HarmonicBondForce_setBondParameters(PointerByReference target, int index, int particle1, int particle2, double length, double k);
	/**
	 * Original signature : <code>void OpenMM_HarmonicBondForce_updateParametersInContext(OpenMM_HarmonicBondForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicBondForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_HarmonicBondForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_HarmonicBondForce_updateParametersInContext(OpenMM_HarmonicBondForce*, OpenMM_Context*)</code> */
	void OpenMM_HarmonicBondForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>void OpenMM_HarmonicBondForce_setUsesPeriodicBoundaryConditions(OpenMM_HarmonicBondForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicBondForce_setUsesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_HarmonicBondForce_setUsesPeriodicBoundaryConditions(Pointer target, int periodic);
	/** Original signature : <code>void OpenMM_HarmonicBondForce_setUsesPeriodicBoundaryConditions(OpenMM_HarmonicBondForce*, OpenMM_Boolean)</code> */
	void OpenMM_HarmonicBondForce_setUsesPeriodicBoundaryConditions(PointerByReference target, int periodic);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_HarmonicBondForce_usesPeriodicBoundaryConditions(const OpenMM_HarmonicBondForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_HarmonicBondForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_HarmonicBondForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_HarmonicBondForce_usesPeriodicBoundaryConditions(const OpenMM_HarmonicBondForce*)</code> */
	int OpenMM_HarmonicBondForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * LangevinIntegrator<br>
	 * Original signature : <code>OpenMM_LangevinIntegrator* OpenMM_LangevinIntegrator_create(double, double, double)</code>
	 */
	PointerByReference OpenMM_LangevinIntegrator_create(double temperature, double frictionCoeff, double stepSize);
	/**
	 * Original signature : <code>void OpenMM_LangevinIntegrator_destroy(OpenMM_LangevinIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LangevinIntegrator_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_LangevinIntegrator_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_LangevinIntegrator_destroy(OpenMM_LangevinIntegrator*)</code> */
	void OpenMM_LangevinIntegrator_destroy(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_LangevinIntegrator_getTemperature(const OpenMM_LangevinIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LangevinIntegrator_getTemperature(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_LangevinIntegrator_getTemperature(Pointer target);
	/** Original signature : <code>double OpenMM_LangevinIntegrator_getTemperature(const OpenMM_LangevinIntegrator*)</code> */
	double OpenMM_LangevinIntegrator_getTemperature(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_LangevinIntegrator_setTemperature(OpenMM_LangevinIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LangevinIntegrator_setTemperature(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_LangevinIntegrator_setTemperature(Pointer target, double temp);
	/** Original signature : <code>void OpenMM_LangevinIntegrator_setTemperature(OpenMM_LangevinIntegrator*, double)</code> */
	void OpenMM_LangevinIntegrator_setTemperature(PointerByReference target, double temp);
	/**
	 * Original signature : <code>double OpenMM_LangevinIntegrator_getFriction(const OpenMM_LangevinIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LangevinIntegrator_getFriction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_LangevinIntegrator_getFriction(Pointer target);
	/** Original signature : <code>double OpenMM_LangevinIntegrator_getFriction(const OpenMM_LangevinIntegrator*)</code> */
	double OpenMM_LangevinIntegrator_getFriction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_LangevinIntegrator_setFriction(OpenMM_LangevinIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LangevinIntegrator_setFriction(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_LangevinIntegrator_setFriction(Pointer target, double coeff);
	/** Original signature : <code>void OpenMM_LangevinIntegrator_setFriction(OpenMM_LangevinIntegrator*, double)</code> */
	void OpenMM_LangevinIntegrator_setFriction(PointerByReference target, double coeff);
	/**
	 * Original signature : <code>int OpenMM_LangevinIntegrator_getRandomNumberSeed(const OpenMM_LangevinIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LangevinIntegrator_getRandomNumberSeed(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_LangevinIntegrator_getRandomNumberSeed(Pointer target);
	/** Original signature : <code>int OpenMM_LangevinIntegrator_getRandomNumberSeed(const OpenMM_LangevinIntegrator*)</code> */
	int OpenMM_LangevinIntegrator_getRandomNumberSeed(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_LangevinIntegrator_setRandomNumberSeed(OpenMM_LangevinIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LangevinIntegrator_setRandomNumberSeed(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_LangevinIntegrator_setRandomNumberSeed(Pointer target, int seed);
	/** Original signature : <code>void OpenMM_LangevinIntegrator_setRandomNumberSeed(OpenMM_LangevinIntegrator*, int)</code> */
	void OpenMM_LangevinIntegrator_setRandomNumberSeed(PointerByReference target, int seed);
	/**
	 * Original signature : <code>void OpenMM_LangevinIntegrator_step(OpenMM_LangevinIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LangevinIntegrator_step(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_LangevinIntegrator_step(Pointer target, int steps);
	/** Original signature : <code>void OpenMM_LangevinIntegrator_step(OpenMM_LangevinIntegrator*, int)</code> */
	void OpenMM_LangevinIntegrator_step(PointerByReference target, int steps);
	/**
	 * VirtualSite<br>
	 * Original signature : <code>void OpenMM_VirtualSite_destroy(OpenMM_VirtualSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VirtualSite_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_VirtualSite_destroy(Pointer target);
	/**
	 * VirtualSite<br>
	 * Original signature : <code>void OpenMM_VirtualSite_destroy(OpenMM_VirtualSite*)</code>
	 */
	void OpenMM_VirtualSite_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_VirtualSite_getNumParticles(const OpenMM_VirtualSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VirtualSite_getNumParticles(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_VirtualSite_getNumParticles(Pointer target);
	/** Original signature : <code>int OpenMM_VirtualSite_getNumParticles(const OpenMM_VirtualSite*)</code> */
	int OpenMM_VirtualSite_getNumParticles(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_VirtualSite_getParticle(const OpenMM_VirtualSite*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VirtualSite_getParticle(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int OpenMM_VirtualSite_getParticle(Pointer target, int particle);
	/** Original signature : <code>int OpenMM_VirtualSite_getParticle(const OpenMM_VirtualSite*, int)</code> */
	int OpenMM_VirtualSite_getParticle(PointerByReference target, int particle);
	/**
	 * LocalCoordinatesSite<br>
	 * Original signature : <code>OpenMM_LocalCoordinatesSite* OpenMM_LocalCoordinatesSite_create(int, int, int, const OpenMM_Vec3*, const OpenMM_Vec3*, const OpenMM_Vec3*, const OpenMM_Vec3*)</code>
	 */
	PointerByReference OpenMM_LocalCoordinatesSite_create(int particle1, int particle2, int particle3, OpenMM_Vec3 originWeights, OpenMM_Vec3 xWeights, OpenMM_Vec3 yWeights, OpenMM_Vec3 localPosition);
	/**
	 * Original signature : <code>void OpenMM_LocalCoordinatesSite_destroy(OpenMM_LocalCoordinatesSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LocalCoordinatesSite_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_LocalCoordinatesSite_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_LocalCoordinatesSite_destroy(OpenMM_LocalCoordinatesSite*)</code> */
	void OpenMM_LocalCoordinatesSite_destroy(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Vec3* OpenMM_LocalCoordinatesSite_getOriginWeights(const OpenMM_LocalCoordinatesSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LocalCoordinatesSite_getOriginWeights(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	OpenMM_Vec3 OpenMM_LocalCoordinatesSite_getOriginWeights(Pointer target);
	/** Original signature : <code>OpenMM_Vec3* OpenMM_LocalCoordinatesSite_getOriginWeights(const OpenMM_LocalCoordinatesSite*)</code> */
	OpenMM_Vec3 OpenMM_LocalCoordinatesSite_getOriginWeights(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Vec3* OpenMM_LocalCoordinatesSite_getXWeights(const OpenMM_LocalCoordinatesSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LocalCoordinatesSite_getXWeights(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	OpenMM_Vec3 OpenMM_LocalCoordinatesSite_getXWeights(Pointer target);
	/** Original signature : <code>OpenMM_Vec3* OpenMM_LocalCoordinatesSite_getXWeights(const OpenMM_LocalCoordinatesSite*)</code> */
	OpenMM_Vec3 OpenMM_LocalCoordinatesSite_getXWeights(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Vec3* OpenMM_LocalCoordinatesSite_getYWeights(const OpenMM_LocalCoordinatesSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LocalCoordinatesSite_getYWeights(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	OpenMM_Vec3 OpenMM_LocalCoordinatesSite_getYWeights(Pointer target);
	/** Original signature : <code>OpenMM_Vec3* OpenMM_LocalCoordinatesSite_getYWeights(const OpenMM_LocalCoordinatesSite*)</code> */
	OpenMM_Vec3 OpenMM_LocalCoordinatesSite_getYWeights(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Vec3* OpenMM_LocalCoordinatesSite_getLocalPosition(const OpenMM_LocalCoordinatesSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LocalCoordinatesSite_getLocalPosition(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	OpenMM_Vec3 OpenMM_LocalCoordinatesSite_getLocalPosition(Pointer target);
	/** Original signature : <code>OpenMM_Vec3* OpenMM_LocalCoordinatesSite_getLocalPosition(const OpenMM_LocalCoordinatesSite*)</code> */
	OpenMM_Vec3 OpenMM_LocalCoordinatesSite_getLocalPosition(PointerByReference target);
	/**
	 * LocalEnergyMinimizer<br>
	 * Original signature : <code>void OpenMM_LocalEnergyMinimizer_destroy(OpenMM_LocalEnergyMinimizer*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LocalEnergyMinimizer_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_LocalEnergyMinimizer_destroy(Pointer target);
	/**
	 * LocalEnergyMinimizer<br>
	 * Original signature : <code>void OpenMM_LocalEnergyMinimizer_destroy(OpenMM_LocalEnergyMinimizer*)</code>
	 */
	void OpenMM_LocalEnergyMinimizer_destroy(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_LocalEnergyMinimizer_minimize(OpenMM_Context*, double, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_LocalEnergyMinimizer_minimize(com.sun.jna.ptr.PointerByReference, double, int)} instead
	 */
	@Deprecated 
	void OpenMM_LocalEnergyMinimizer_minimize(Pointer context, double tolerance, int maxIterations);
	/** Original signature : <code>void OpenMM_LocalEnergyMinimizer_minimize(OpenMM_Context*, double, int)</code> */
	void OpenMM_LocalEnergyMinimizer_minimize(PointerByReference context, double tolerance, int maxIterations);
	/**
	 * MonteCarloAnisotropicBarostat<br>
	 * Original signature : <code>OpenMM_MonteCarloAnisotropicBarostat* OpenMM_MonteCarloAnisotropicBarostat_create(const OpenMM_Vec3*, double, OpenMM_Boolean, OpenMM_Boolean, OpenMM_Boolean, int)</code>
	 */
	PointerByReference OpenMM_MonteCarloAnisotropicBarostat_create(OpenMM_Vec3 defaultPressure, double defaultTemperature, int scaleX, int scaleY, int scaleZ, int frequency);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloAnisotropicBarostat_destroy(OpenMM_MonteCarloAnisotropicBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloAnisotropicBarostat_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_MonteCarloAnisotropicBarostat_destroy(OpenMM_MonteCarloAnisotropicBarostat*)</code> */
	void OpenMM_MonteCarloAnisotropicBarostat_destroy(PointerByReference target);
	/** Original signature : <code>char* OpenMM_MonteCarloAnisotropicBarostat_PressureX()</code> */
	Pointer OpenMM_MonteCarloAnisotropicBarostat_PressureX();
	/** Original signature : <code>char* OpenMM_MonteCarloAnisotropicBarostat_PressureY()</code> */
	Pointer OpenMM_MonteCarloAnisotropicBarostat_PressureY();
	/** Original signature : <code>char* OpenMM_MonteCarloAnisotropicBarostat_PressureZ()</code> */
	Pointer OpenMM_MonteCarloAnisotropicBarostat_PressureZ();
	/** Original signature : <code>char* OpenMM_MonteCarloAnisotropicBarostat_Temperature()</code> */
	Pointer OpenMM_MonteCarloAnisotropicBarostat_Temperature();
	/**
	 * Original signature : <code>OpenMM_Vec3* OpenMM_MonteCarloAnisotropicBarostat_getDefaultPressure(const OpenMM_MonteCarloAnisotropicBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_getDefaultPressure(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	OpenMM_Vec3 OpenMM_MonteCarloAnisotropicBarostat_getDefaultPressure(Pointer target);
	/** Original signature : <code>OpenMM_Vec3* OpenMM_MonteCarloAnisotropicBarostat_getDefaultPressure(const OpenMM_MonteCarloAnisotropicBarostat*)</code> */
	OpenMM_Vec3 OpenMM_MonteCarloAnisotropicBarostat_getDefaultPressure(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloAnisotropicBarostat_setDefaultPressure(OpenMM_MonteCarloAnisotropicBarostat*, const OpenMM_Vec3*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_setDefaultPressure(com.sun.jna.ptr.PointerByReference, simtk.openmm.OpenMM_Vec3)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloAnisotropicBarostat_setDefaultPressure(Pointer target, OpenMM_Vec3 pressure);
	/** Original signature : <code>void OpenMM_MonteCarloAnisotropicBarostat_setDefaultPressure(OpenMM_MonteCarloAnisotropicBarostat*, const OpenMM_Vec3*)</code> */
	void OpenMM_MonteCarloAnisotropicBarostat_setDefaultPressure(PointerByReference target, OpenMM_Vec3 pressure);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloAnisotropicBarostat_getScaleX(const OpenMM_MonteCarloAnisotropicBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_getScaleX(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloAnisotropicBarostat_getScaleX(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloAnisotropicBarostat_getScaleX(const OpenMM_MonteCarloAnisotropicBarostat*)</code> */
	int OpenMM_MonteCarloAnisotropicBarostat_getScaleX(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloAnisotropicBarostat_getScaleY(const OpenMM_MonteCarloAnisotropicBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_getScaleY(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloAnisotropicBarostat_getScaleY(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloAnisotropicBarostat_getScaleY(const OpenMM_MonteCarloAnisotropicBarostat*)</code> */
	int OpenMM_MonteCarloAnisotropicBarostat_getScaleY(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloAnisotropicBarostat_getScaleZ(const OpenMM_MonteCarloAnisotropicBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_getScaleZ(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloAnisotropicBarostat_getScaleZ(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloAnisotropicBarostat_getScaleZ(const OpenMM_MonteCarloAnisotropicBarostat*)</code> */
	int OpenMM_MonteCarloAnisotropicBarostat_getScaleZ(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_MonteCarloAnisotropicBarostat_getFrequency(const OpenMM_MonteCarloAnisotropicBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_getFrequency(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloAnisotropicBarostat_getFrequency(Pointer target);
	/** Original signature : <code>int OpenMM_MonteCarloAnisotropicBarostat_getFrequency(const OpenMM_MonteCarloAnisotropicBarostat*)</code> */
	int OpenMM_MonteCarloAnisotropicBarostat_getFrequency(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloAnisotropicBarostat_setFrequency(OpenMM_MonteCarloAnisotropicBarostat*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_setFrequency(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloAnisotropicBarostat_setFrequency(Pointer target, int freq);
	/** Original signature : <code>void OpenMM_MonteCarloAnisotropicBarostat_setFrequency(OpenMM_MonteCarloAnisotropicBarostat*, int)</code> */
	void OpenMM_MonteCarloAnisotropicBarostat_setFrequency(PointerByReference target, int freq);
	/**
	 * Original signature : <code>double OpenMM_MonteCarloAnisotropicBarostat_getDefaultTemperature(const OpenMM_MonteCarloAnisotropicBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_getDefaultTemperature(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_MonteCarloAnisotropicBarostat_getDefaultTemperature(Pointer target);
	/** Original signature : <code>double OpenMM_MonteCarloAnisotropicBarostat_getDefaultTemperature(const OpenMM_MonteCarloAnisotropicBarostat*)</code> */
	double OpenMM_MonteCarloAnisotropicBarostat_getDefaultTemperature(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloAnisotropicBarostat_setDefaultTemperature(OpenMM_MonteCarloAnisotropicBarostat*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_setDefaultTemperature(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloAnisotropicBarostat_setDefaultTemperature(Pointer target, double temp);
	/** Original signature : <code>void OpenMM_MonteCarloAnisotropicBarostat_setDefaultTemperature(OpenMM_MonteCarloAnisotropicBarostat*, double)</code> */
	void OpenMM_MonteCarloAnisotropicBarostat_setDefaultTemperature(PointerByReference target, double temp);
	/**
	 * Original signature : <code>int OpenMM_MonteCarloAnisotropicBarostat_getRandomNumberSeed(const OpenMM_MonteCarloAnisotropicBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_getRandomNumberSeed(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloAnisotropicBarostat_getRandomNumberSeed(Pointer target);
	/** Original signature : <code>int OpenMM_MonteCarloAnisotropicBarostat_getRandomNumberSeed(const OpenMM_MonteCarloAnisotropicBarostat*)</code> */
	int OpenMM_MonteCarloAnisotropicBarostat_getRandomNumberSeed(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloAnisotropicBarostat_setRandomNumberSeed(OpenMM_MonteCarloAnisotropicBarostat*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_setRandomNumberSeed(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloAnisotropicBarostat_setRandomNumberSeed(Pointer target, int seed);
	/** Original signature : <code>void OpenMM_MonteCarloAnisotropicBarostat_setRandomNumberSeed(OpenMM_MonteCarloAnisotropicBarostat*, int)</code> */
	void OpenMM_MonteCarloAnisotropicBarostat_setRandomNumberSeed(PointerByReference target, int seed);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloAnisotropicBarostat_usesPeriodicBoundaryConditions(const OpenMM_MonteCarloAnisotropicBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloAnisotropicBarostat_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloAnisotropicBarostat_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloAnisotropicBarostat_usesPeriodicBoundaryConditions(const OpenMM_MonteCarloAnisotropicBarostat*)</code> */
	int OpenMM_MonteCarloAnisotropicBarostat_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * MonteCarloBarostat<br>
	 * Original signature : <code>OpenMM_MonteCarloBarostat* OpenMM_MonteCarloBarostat_create(double, double, int)</code>
	 */
	PointerByReference OpenMM_MonteCarloBarostat_create(double defaultPressure, double defaultTemperature, int frequency);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloBarostat_destroy(OpenMM_MonteCarloBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloBarostat_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloBarostat_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_MonteCarloBarostat_destroy(OpenMM_MonteCarloBarostat*)</code> */
	void OpenMM_MonteCarloBarostat_destroy(PointerByReference target);
	/** Original signature : <code>char* OpenMM_MonteCarloBarostat_Pressure()</code> */
	Pointer OpenMM_MonteCarloBarostat_Pressure();
	/** Original signature : <code>char* OpenMM_MonteCarloBarostat_Temperature()</code> */
	Pointer OpenMM_MonteCarloBarostat_Temperature();
	/**
	 * Original signature : <code>double OpenMM_MonteCarloBarostat_getDefaultPressure(const OpenMM_MonteCarloBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloBarostat_getDefaultPressure(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_MonteCarloBarostat_getDefaultPressure(Pointer target);
	/** Original signature : <code>double OpenMM_MonteCarloBarostat_getDefaultPressure(const OpenMM_MonteCarloBarostat*)</code> */
	double OpenMM_MonteCarloBarostat_getDefaultPressure(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloBarostat_setDefaultPressure(OpenMM_MonteCarloBarostat*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloBarostat_setDefaultPressure(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloBarostat_setDefaultPressure(Pointer target, double pressure);
	/** Original signature : <code>void OpenMM_MonteCarloBarostat_setDefaultPressure(OpenMM_MonteCarloBarostat*, double)</code> */
	void OpenMM_MonteCarloBarostat_setDefaultPressure(PointerByReference target, double pressure);
	/**
	 * Original signature : <code>int OpenMM_MonteCarloBarostat_getFrequency(const OpenMM_MonteCarloBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloBarostat_getFrequency(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloBarostat_getFrequency(Pointer target);
	/** Original signature : <code>int OpenMM_MonteCarloBarostat_getFrequency(const OpenMM_MonteCarloBarostat*)</code> */
	int OpenMM_MonteCarloBarostat_getFrequency(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloBarostat_setFrequency(OpenMM_MonteCarloBarostat*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloBarostat_setFrequency(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloBarostat_setFrequency(Pointer target, int freq);
	/** Original signature : <code>void OpenMM_MonteCarloBarostat_setFrequency(OpenMM_MonteCarloBarostat*, int)</code> */
	void OpenMM_MonteCarloBarostat_setFrequency(PointerByReference target, int freq);
	/**
	 * Original signature : <code>double OpenMM_MonteCarloBarostat_getDefaultTemperature(const OpenMM_MonteCarloBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloBarostat_getDefaultTemperature(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_MonteCarloBarostat_getDefaultTemperature(Pointer target);
	/** Original signature : <code>double OpenMM_MonteCarloBarostat_getDefaultTemperature(const OpenMM_MonteCarloBarostat*)</code> */
	double OpenMM_MonteCarloBarostat_getDefaultTemperature(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloBarostat_setDefaultTemperature(OpenMM_MonteCarloBarostat*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloBarostat_setDefaultTemperature(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloBarostat_setDefaultTemperature(Pointer target, double temp);
	/** Original signature : <code>void OpenMM_MonteCarloBarostat_setDefaultTemperature(OpenMM_MonteCarloBarostat*, double)</code> */
	void OpenMM_MonteCarloBarostat_setDefaultTemperature(PointerByReference target, double temp);
	/**
	 * Original signature : <code>int OpenMM_MonteCarloBarostat_getRandomNumberSeed(const OpenMM_MonteCarloBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloBarostat_getRandomNumberSeed(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloBarostat_getRandomNumberSeed(Pointer target);
	/** Original signature : <code>int OpenMM_MonteCarloBarostat_getRandomNumberSeed(const OpenMM_MonteCarloBarostat*)</code> */
	int OpenMM_MonteCarloBarostat_getRandomNumberSeed(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloBarostat_setRandomNumberSeed(OpenMM_MonteCarloBarostat*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloBarostat_setRandomNumberSeed(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloBarostat_setRandomNumberSeed(Pointer target, int seed);
	/** Original signature : <code>void OpenMM_MonteCarloBarostat_setRandomNumberSeed(OpenMM_MonteCarloBarostat*, int)</code> */
	void OpenMM_MonteCarloBarostat_setRandomNumberSeed(PointerByReference target, int seed);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloBarostat_usesPeriodicBoundaryConditions(const OpenMM_MonteCarloBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloBarostat_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloBarostat_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloBarostat_usesPeriodicBoundaryConditions(const OpenMM_MonteCarloBarostat*)</code> */
	int OpenMM_MonteCarloBarostat_usesPeriodicBoundaryConditions(PointerByReference target);
	/** Original signature : <code>OpenMM_MonteCarloMembraneBarostat* OpenMM_MonteCarloMembraneBarostat_create(double, double, double, OpenMM_MonteCarloMembraneBarostat_XYMode, OpenMM_MonteCarloMembraneBarostat_ZMode, int)</code> */
	PointerByReference OpenMM_MonteCarloMembraneBarostat_create(double defaultPressure, double defaultSurfaceTension, double defaultTemperature, int xymode, int zmode, int frequency);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_destroy(OpenMM_MonteCarloMembraneBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloMembraneBarostat_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_destroy(OpenMM_MonteCarloMembraneBarostat*)</code> */
	void OpenMM_MonteCarloMembraneBarostat_destroy(PointerByReference target);
	/** Original signature : <code>char* OpenMM_MonteCarloMembraneBarostat_Pressure()</code> */
	Pointer OpenMM_MonteCarloMembraneBarostat_Pressure();
	/** Original signature : <code>char* OpenMM_MonteCarloMembraneBarostat_SurfaceTension()</code> */
	Pointer OpenMM_MonteCarloMembraneBarostat_SurfaceTension();
	/** Original signature : <code>char* OpenMM_MonteCarloMembraneBarostat_Temperature()</code> */
	Pointer OpenMM_MonteCarloMembraneBarostat_Temperature();
	/**
	 * Original signature : <code>double OpenMM_MonteCarloMembraneBarostat_getDefaultPressure(const OpenMM_MonteCarloMembraneBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_getDefaultPressure(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_MonteCarloMembraneBarostat_getDefaultPressure(Pointer target);
	/** Original signature : <code>double OpenMM_MonteCarloMembraneBarostat_getDefaultPressure(const OpenMM_MonteCarloMembraneBarostat*)</code> */
	double OpenMM_MonteCarloMembraneBarostat_getDefaultPressure(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setDefaultPressure(OpenMM_MonteCarloMembraneBarostat*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_setDefaultPressure(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloMembraneBarostat_setDefaultPressure(Pointer target, double pressure);
	/** Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setDefaultPressure(OpenMM_MonteCarloMembraneBarostat*, double)</code> */
	void OpenMM_MonteCarloMembraneBarostat_setDefaultPressure(PointerByReference target, double pressure);
	/**
	 * Original signature : <code>double OpenMM_MonteCarloMembraneBarostat_getDefaultSurfaceTension(const OpenMM_MonteCarloMembraneBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_getDefaultSurfaceTension(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_MonteCarloMembraneBarostat_getDefaultSurfaceTension(Pointer target);
	/** Original signature : <code>double OpenMM_MonteCarloMembraneBarostat_getDefaultSurfaceTension(const OpenMM_MonteCarloMembraneBarostat*)</code> */
	double OpenMM_MonteCarloMembraneBarostat_getDefaultSurfaceTension(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setDefaultSurfaceTension(OpenMM_MonteCarloMembraneBarostat*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_setDefaultSurfaceTension(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloMembraneBarostat_setDefaultSurfaceTension(Pointer target, double surfaceTension);
	/** Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setDefaultSurfaceTension(OpenMM_MonteCarloMembraneBarostat*, double)</code> */
	void OpenMM_MonteCarloMembraneBarostat_setDefaultSurfaceTension(PointerByReference target, double surfaceTension);
	/**
	 * Original signature : <code>int OpenMM_MonteCarloMembraneBarostat_getFrequency(const OpenMM_MonteCarloMembraneBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_getFrequency(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloMembraneBarostat_getFrequency(Pointer target);
	/** Original signature : <code>int OpenMM_MonteCarloMembraneBarostat_getFrequency(const OpenMM_MonteCarloMembraneBarostat*)</code> */
	int OpenMM_MonteCarloMembraneBarostat_getFrequency(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setFrequency(OpenMM_MonteCarloMembraneBarostat*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_setFrequency(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloMembraneBarostat_setFrequency(Pointer target, int freq);
	/** Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setFrequency(OpenMM_MonteCarloMembraneBarostat*, int)</code> */
	void OpenMM_MonteCarloMembraneBarostat_setFrequency(PointerByReference target, int freq);
	/**
	 * Original signature : <code>double OpenMM_MonteCarloMembraneBarostat_getDefaultTemperature(const OpenMM_MonteCarloMembraneBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_getDefaultTemperature(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_MonteCarloMembraneBarostat_getDefaultTemperature(Pointer target);
	/** Original signature : <code>double OpenMM_MonteCarloMembraneBarostat_getDefaultTemperature(const OpenMM_MonteCarloMembraneBarostat*)</code> */
	double OpenMM_MonteCarloMembraneBarostat_getDefaultTemperature(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setDefaultTemperature(OpenMM_MonteCarloMembraneBarostat*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_setDefaultTemperature(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloMembraneBarostat_setDefaultTemperature(Pointer target, double temp);
	/** Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setDefaultTemperature(OpenMM_MonteCarloMembraneBarostat*, double)</code> */
	void OpenMM_MonteCarloMembraneBarostat_setDefaultTemperature(PointerByReference target, double temp);
	/**
	 * Original signature : <code>OpenMM_MonteCarloMembraneBarostat_XYMode OpenMM_MonteCarloMembraneBarostat_getXYMode(const OpenMM_MonteCarloMembraneBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_getXYMode(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloMembraneBarostat_getXYMode(Pointer target);
	/** Original signature : <code>OpenMM_MonteCarloMembraneBarostat_XYMode OpenMM_MonteCarloMembraneBarostat_getXYMode(const OpenMM_MonteCarloMembraneBarostat*)</code> */
	int OpenMM_MonteCarloMembraneBarostat_getXYMode(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setXYMode(OpenMM_MonteCarloMembraneBarostat*, OpenMM_MonteCarloMembraneBarostat_XYMode)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_setXYMode(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloMembraneBarostat_setXYMode(Pointer target, int mode);
	/** Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setXYMode(OpenMM_MonteCarloMembraneBarostat*, OpenMM_MonteCarloMembraneBarostat_XYMode)</code> */
	void OpenMM_MonteCarloMembraneBarostat_setXYMode(PointerByReference target, int mode);
	/**
	 * Original signature : <code>OpenMM_MonteCarloMembraneBarostat_ZMode OpenMM_MonteCarloMembraneBarostat_getZMode(const OpenMM_MonteCarloMembraneBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_getZMode(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloMembraneBarostat_getZMode(Pointer target);
	/** Original signature : <code>OpenMM_MonteCarloMembraneBarostat_ZMode OpenMM_MonteCarloMembraneBarostat_getZMode(const OpenMM_MonteCarloMembraneBarostat*)</code> */
	int OpenMM_MonteCarloMembraneBarostat_getZMode(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setZMode(OpenMM_MonteCarloMembraneBarostat*, OpenMM_MonteCarloMembraneBarostat_ZMode)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_setZMode(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloMembraneBarostat_setZMode(Pointer target, int mode);
	/** Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setZMode(OpenMM_MonteCarloMembraneBarostat*, OpenMM_MonteCarloMembraneBarostat_ZMode)</code> */
	void OpenMM_MonteCarloMembraneBarostat_setZMode(PointerByReference target, int mode);
	/**
	 * Original signature : <code>int OpenMM_MonteCarloMembraneBarostat_getRandomNumberSeed(const OpenMM_MonteCarloMembraneBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_getRandomNumberSeed(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloMembraneBarostat_getRandomNumberSeed(Pointer target);
	/** Original signature : <code>int OpenMM_MonteCarloMembraneBarostat_getRandomNumberSeed(const OpenMM_MonteCarloMembraneBarostat*)</code> */
	int OpenMM_MonteCarloMembraneBarostat_getRandomNumberSeed(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setRandomNumberSeed(OpenMM_MonteCarloMembraneBarostat*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_setRandomNumberSeed(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_MonteCarloMembraneBarostat_setRandomNumberSeed(Pointer target, int seed);
	/** Original signature : <code>void OpenMM_MonteCarloMembraneBarostat_setRandomNumberSeed(OpenMM_MonteCarloMembraneBarostat*, int)</code> */
	void OpenMM_MonteCarloMembraneBarostat_setRandomNumberSeed(PointerByReference target, int seed);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloMembraneBarostat_usesPeriodicBoundaryConditions(const OpenMM_MonteCarloMembraneBarostat*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_MonteCarloMembraneBarostat_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_MonteCarloMembraneBarostat_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_MonteCarloMembraneBarostat_usesPeriodicBoundaryConditions(const OpenMM_MonteCarloMembraneBarostat*)</code> */
	int OpenMM_MonteCarloMembraneBarostat_usesPeriodicBoundaryConditions(PointerByReference target);
	/** Original signature : <code>OpenMM_NonbondedForce* OpenMM_NonbondedForce_create()</code> */
	PointerByReference OpenMM_NonbondedForce_create();
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_destroy(OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_NonbondedForce_destroy(OpenMM_NonbondedForce*)</code> */
	void OpenMM_NonbondedForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_NonbondedForce_getNumParticles(const OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_getNumParticles(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_NonbondedForce_getNumParticles(Pointer target);
	/** Original signature : <code>int OpenMM_NonbondedForce_getNumParticles(const OpenMM_NonbondedForce*)</code> */
	int OpenMM_NonbondedForce_getNumParticles(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_NonbondedForce_getNumExceptions(const OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_getNumExceptions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_NonbondedForce_getNumExceptions(Pointer target);
	/** Original signature : <code>int OpenMM_NonbondedForce_getNumExceptions(const OpenMM_NonbondedForce*)</code> */
	int OpenMM_NonbondedForce_getNumExceptions(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_NonbondedForce_NonbondedMethod OpenMM_NonbondedForce_getNonbondedMethod(const OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_getNonbondedMethod(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_NonbondedForce_getNonbondedMethod(Pointer target);
	/** Original signature : <code>OpenMM_NonbondedForce_NonbondedMethod OpenMM_NonbondedForce_getNonbondedMethod(const OpenMM_NonbondedForce*)</code> */
	int OpenMM_NonbondedForce_getNonbondedMethod(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_setNonbondedMethod(OpenMM_NonbondedForce*, OpenMM_NonbondedForce_NonbondedMethod)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_setNonbondedMethod(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_setNonbondedMethod(Pointer target, int method);
	/** Original signature : <code>void OpenMM_NonbondedForce_setNonbondedMethod(OpenMM_NonbondedForce*, OpenMM_NonbondedForce_NonbondedMethod)</code> */
	void OpenMM_NonbondedForce_setNonbondedMethod(PointerByReference target, int method);
	/**
	 * Original signature : <code>double OpenMM_NonbondedForce_getCutoffDistance(const OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_getCutoffDistance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_NonbondedForce_getCutoffDistance(Pointer target);
	/** Original signature : <code>double OpenMM_NonbondedForce_getCutoffDistance(const OpenMM_NonbondedForce*)</code> */
	double OpenMM_NonbondedForce_getCutoffDistance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_setCutoffDistance(OpenMM_NonbondedForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_setCutoffDistance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_setCutoffDistance(Pointer target, double distance);
	/** Original signature : <code>void OpenMM_NonbondedForce_setCutoffDistance(OpenMM_NonbondedForce*, double)</code> */
	void OpenMM_NonbondedForce_setCutoffDistance(PointerByReference target, double distance);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_NonbondedForce_getUseSwitchingFunction(const OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_getUseSwitchingFunction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_NonbondedForce_getUseSwitchingFunction(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_NonbondedForce_getUseSwitchingFunction(const OpenMM_NonbondedForce*)</code> */
	int OpenMM_NonbondedForce_getUseSwitchingFunction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_setUseSwitchingFunction(OpenMM_NonbondedForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_setUseSwitchingFunction(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_setUseSwitchingFunction(Pointer target, int use);
	/** Original signature : <code>void OpenMM_NonbondedForce_setUseSwitchingFunction(OpenMM_NonbondedForce*, OpenMM_Boolean)</code> */
	void OpenMM_NonbondedForce_setUseSwitchingFunction(PointerByReference target, int use);
	/**
	 * Original signature : <code>double OpenMM_NonbondedForce_getSwitchingDistance(const OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_getSwitchingDistance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_NonbondedForce_getSwitchingDistance(Pointer target);
	/** Original signature : <code>double OpenMM_NonbondedForce_getSwitchingDistance(const OpenMM_NonbondedForce*)</code> */
	double OpenMM_NonbondedForce_getSwitchingDistance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_setSwitchingDistance(OpenMM_NonbondedForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_setSwitchingDistance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_setSwitchingDistance(Pointer target, double distance);
	/** Original signature : <code>void OpenMM_NonbondedForce_setSwitchingDistance(OpenMM_NonbondedForce*, double)</code> */
	void OpenMM_NonbondedForce_setSwitchingDistance(PointerByReference target, double distance);
	/**
	 * Original signature : <code>double OpenMM_NonbondedForce_getReactionFieldDielectric(const OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_getReactionFieldDielectric(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_NonbondedForce_getReactionFieldDielectric(Pointer target);
	/** Original signature : <code>double OpenMM_NonbondedForce_getReactionFieldDielectric(const OpenMM_NonbondedForce*)</code> */
	double OpenMM_NonbondedForce_getReactionFieldDielectric(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_setReactionFieldDielectric(OpenMM_NonbondedForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_setReactionFieldDielectric(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_setReactionFieldDielectric(Pointer target, double dielectric);
	/** Original signature : <code>void OpenMM_NonbondedForce_setReactionFieldDielectric(OpenMM_NonbondedForce*, double)</code> */
	void OpenMM_NonbondedForce_setReactionFieldDielectric(PointerByReference target, double dielectric);
	/**
	 * Original signature : <code>double OpenMM_NonbondedForce_getEwaldErrorTolerance(const OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_getEwaldErrorTolerance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_NonbondedForce_getEwaldErrorTolerance(Pointer target);
	/** Original signature : <code>double OpenMM_NonbondedForce_getEwaldErrorTolerance(const OpenMM_NonbondedForce*)</code> */
	double OpenMM_NonbondedForce_getEwaldErrorTolerance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_setEwaldErrorTolerance(OpenMM_NonbondedForce*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_setEwaldErrorTolerance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_setEwaldErrorTolerance(Pointer target, double tol);
	/** Original signature : <code>void OpenMM_NonbondedForce_setEwaldErrorTolerance(OpenMM_NonbondedForce*, double)</code> */
	void OpenMM_NonbondedForce_setEwaldErrorTolerance(PointerByReference target, double tol);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_getPMEParameters(const OpenMM_NonbondedForce*, double*, int*, int*, int*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_NonbondedForce_getPMEParameters(com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #OpenMM_NonbondedForce_getPMEParameters(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_getPMEParameters(Pointer target, DoubleByReference alpha, IntByReference nx, IntByReference ny, IntByReference nz);
	/** Original signature : <code>void OpenMM_NonbondedForce_getPMEParameters(const OpenMM_NonbondedForce*, double*, int*, int*, int*)</code> */
	void OpenMM_NonbondedForce_getPMEParameters(PointerByReference target, DoubleBuffer alpha, IntBuffer nx, IntBuffer ny, IntBuffer nz);
	/** Original signature : <code>void OpenMM_NonbondedForce_getPMEParameters(const OpenMM_NonbondedForce*, double*, int*, int*, int*)</code> */
	void OpenMM_NonbondedForce_getPMEParameters(PointerByReference target, DoubleByReference alpha, IntByReference nx, IntByReference ny, IntByReference nz);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_setPMEParameters(OpenMM_NonbondedForce*, double, int, int, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_setPMEParameters(com.sun.jna.ptr.PointerByReference, double, int, int, int)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_setPMEParameters(Pointer target, double alpha, int nx, int ny, int nz);
	/** Original signature : <code>void OpenMM_NonbondedForce_setPMEParameters(OpenMM_NonbondedForce*, double, int, int, int)</code> */
	void OpenMM_NonbondedForce_setPMEParameters(PointerByReference target, double alpha, int nx, int ny, int nz);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_getPMEParametersInContext(const OpenMM_NonbondedForce*, const OpenMM_Context*, double*, int*, int*, int*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_NonbondedForce_getPMEParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #OpenMM_NonbondedForce_getPMEParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_getPMEParametersInContext(Pointer target, Pointer context, DoubleByReference alpha, IntByReference nx, IntByReference ny, IntByReference nz);
	/** Original signature : <code>void OpenMM_NonbondedForce_getPMEParametersInContext(const OpenMM_NonbondedForce*, const OpenMM_Context*, double*, int*, int*, int*)</code> */
	void OpenMM_NonbondedForce_getPMEParametersInContext(PointerByReference target, PointerByReference context, DoubleBuffer alpha, IntBuffer nx, IntBuffer ny, IntBuffer nz);
	/** Original signature : <code>void OpenMM_NonbondedForce_getPMEParametersInContext(const OpenMM_NonbondedForce*, const OpenMM_Context*, double*, int*, int*, int*)</code> */
	void OpenMM_NonbondedForce_getPMEParametersInContext(PointerByReference target, PointerByReference context, DoubleByReference alpha, IntByReference nx, IntByReference ny, IntByReference nz);
	/**
	 * Original signature : <code>int OpenMM_NonbondedForce_addParticle(OpenMM_NonbondedForce*, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_addParticle(com.sun.jna.ptr.PointerByReference, double, double, double)} instead
	 */
	@Deprecated 
	int OpenMM_NonbondedForce_addParticle(Pointer target, double charge, double sigma, double epsilon);
	/** Original signature : <code>int OpenMM_NonbondedForce_addParticle(OpenMM_NonbondedForce*, double, double, double)</code> */
	int OpenMM_NonbondedForce_addParticle(PointerByReference target, double charge, double sigma, double epsilon);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_getParticleParameters(const OpenMM_NonbondedForce*, int, double*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_NonbondedForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_NonbondedForce_getParticleParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_getParticleParameters(Pointer target, int index, DoubleByReference charge, DoubleByReference sigma, DoubleByReference epsilon);
	/** Original signature : <code>void OpenMM_NonbondedForce_getParticleParameters(const OpenMM_NonbondedForce*, int, double*, double*, double*)</code> */
	void OpenMM_NonbondedForce_getParticleParameters(PointerByReference target, int index, DoubleBuffer charge, DoubleBuffer sigma, DoubleBuffer epsilon);
	/** Original signature : <code>void OpenMM_NonbondedForce_getParticleParameters(const OpenMM_NonbondedForce*, int, double*, double*, double*)</code> */
	void OpenMM_NonbondedForce_getParticleParameters(PointerByReference target, int index, DoubleByReference charge, DoubleByReference sigma, DoubleByReference epsilon);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_setParticleParameters(OpenMM_NonbondedForce*, int, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_setParticleParameters(com.sun.jna.ptr.PointerByReference, int, double, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_setParticleParameters(Pointer target, int index, double charge, double sigma, double epsilon);
	/** Original signature : <code>void OpenMM_NonbondedForce_setParticleParameters(OpenMM_NonbondedForce*, int, double, double, double)</code> */
	void OpenMM_NonbondedForce_setParticleParameters(PointerByReference target, int index, double charge, double sigma, double epsilon);
	/**
	 * Original signature : <code>int OpenMM_NonbondedForce_addException(OpenMM_NonbondedForce*, int, int, double, double, double, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_addException(com.sun.jna.ptr.PointerByReference, int, int, double, double, double, int)} instead
	 */
	@Deprecated 
	int OpenMM_NonbondedForce_addException(Pointer target, int particle1, int particle2, double chargeProd, double sigma, double epsilon, int replace);
	/** Original signature : <code>int OpenMM_NonbondedForce_addException(OpenMM_NonbondedForce*, int, int, double, double, double, OpenMM_Boolean)</code> */
	int OpenMM_NonbondedForce_addException(PointerByReference target, int particle1, int particle2, double chargeProd, double sigma, double epsilon, int replace);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_getExceptionParameters(const OpenMM_NonbondedForce*, int, int*, int*, double*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_NonbondedForce_getExceptionParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_NonbondedForce_getExceptionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_getExceptionParameters(Pointer target, int index, IntByReference particle1, IntByReference particle2, DoubleByReference chargeProd, DoubleByReference sigma, DoubleByReference epsilon);
	/** Original signature : <code>void OpenMM_NonbondedForce_getExceptionParameters(const OpenMM_NonbondedForce*, int, int*, int*, double*, double*, double*)</code> */
	void OpenMM_NonbondedForce_getExceptionParameters(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2, DoubleBuffer chargeProd, DoubleBuffer sigma, DoubleBuffer epsilon);
	/** Original signature : <code>void OpenMM_NonbondedForce_getExceptionParameters(const OpenMM_NonbondedForce*, int, int*, int*, double*, double*, double*)</code> */
	void OpenMM_NonbondedForce_getExceptionParameters(PointerByReference target, int index, IntByReference particle1, IntByReference particle2, DoubleByReference chargeProd, DoubleByReference sigma, DoubleByReference epsilon);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_setExceptionParameters(OpenMM_NonbondedForce*, int, int, int, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_setExceptionParameters(com.sun.jna.ptr.PointerByReference, int, int, int, double, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_setExceptionParameters(Pointer target, int index, int particle1, int particle2, double chargeProd, double sigma, double epsilon);
	/** Original signature : <code>void OpenMM_NonbondedForce_setExceptionParameters(OpenMM_NonbondedForce*, int, int, int, double, double, double)</code> */
	void OpenMM_NonbondedForce_setExceptionParameters(PointerByReference target, int index, int particle1, int particle2, double chargeProd, double sigma, double epsilon);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_createExceptionsFromBonds(OpenMM_NonbondedForce*, const OpenMM_BondArray*, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_createExceptionsFromBonds(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_createExceptionsFromBonds(Pointer target, Pointer bonds, double coulomb14Scale, double lj14Scale);
	/** Original signature : <code>void OpenMM_NonbondedForce_createExceptionsFromBonds(OpenMM_NonbondedForce*, const OpenMM_BondArray*, double, double)</code> */
	void OpenMM_NonbondedForce_createExceptionsFromBonds(PointerByReference target, PointerByReference bonds, double coulomb14Scale, double lj14Scale);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_NonbondedForce_getUseDispersionCorrection(const OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_getUseDispersionCorrection(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_NonbondedForce_getUseDispersionCorrection(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_NonbondedForce_getUseDispersionCorrection(const OpenMM_NonbondedForce*)</code> */
	int OpenMM_NonbondedForce_getUseDispersionCorrection(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_setUseDispersionCorrection(OpenMM_NonbondedForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_setUseDispersionCorrection(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_setUseDispersionCorrection(Pointer target, int useCorrection);
	/** Original signature : <code>void OpenMM_NonbondedForce_setUseDispersionCorrection(OpenMM_NonbondedForce*, OpenMM_Boolean)</code> */
	void OpenMM_NonbondedForce_setUseDispersionCorrection(PointerByReference target, int useCorrection);
	/**
	 * Original signature : <code>int OpenMM_NonbondedForce_getReciprocalSpaceForceGroup(const OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_getReciprocalSpaceForceGroup(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_NonbondedForce_getReciprocalSpaceForceGroup(Pointer target);
	/** Original signature : <code>int OpenMM_NonbondedForce_getReciprocalSpaceForceGroup(const OpenMM_NonbondedForce*)</code> */
	int OpenMM_NonbondedForce_getReciprocalSpaceForceGroup(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_setReciprocalSpaceForceGroup(OpenMM_NonbondedForce*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_setReciprocalSpaceForceGroup(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_setReciprocalSpaceForceGroup(Pointer target, int group);
	/** Original signature : <code>void OpenMM_NonbondedForce_setReciprocalSpaceForceGroup(OpenMM_NonbondedForce*, int)</code> */
	void OpenMM_NonbondedForce_setReciprocalSpaceForceGroup(PointerByReference target, int group);
	/**
	 * Original signature : <code>void OpenMM_NonbondedForce_updateParametersInContext(OpenMM_NonbondedForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_NonbondedForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_NonbondedForce_updateParametersInContext(OpenMM_NonbondedForce*, OpenMM_Context*)</code> */
	void OpenMM_NonbondedForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_NonbondedForce_usesPeriodicBoundaryConditions(const OpenMM_NonbondedForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_NonbondedForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_NonbondedForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_NonbondedForce_usesPeriodicBoundaryConditions(const OpenMM_NonbondedForce*)</code> */
	int OpenMM_NonbondedForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * OpenMMException<br>
	 * Original signature : <code>OpenMM_OpenMMException* OpenMM_OpenMMException_create(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_OpenMMException_create(java.lang.String)} and {@link #OpenMM_OpenMMException_create(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_OpenMMException_create(Pointer message);
	/**
	 * OpenMMException<br>
	 * Original signature : <code>OpenMM_OpenMMException* OpenMM_OpenMMException_create(const char*)</code>
	 */
	PointerByReference OpenMM_OpenMMException_create(String message);
	/**
	 * Original signature : <code>void OpenMM_OpenMMException_destroy(OpenMM_OpenMMException*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_OpenMMException_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_OpenMMException_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_OpenMMException_destroy(OpenMM_OpenMMException*)</code> */
	void OpenMM_OpenMMException_destroy(PointerByReference target);
	/**
	 * Original signature : <code>char* OpenMM_OpenMMException_what(const OpenMM_OpenMMException*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_OpenMMException_what(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_OpenMMException_what(Pointer target);
	/** Original signature : <code>char* OpenMM_OpenMMException_what(const OpenMM_OpenMMException*)</code> */
	Pointer OpenMM_OpenMMException_what(PointerByReference target);
	/**
	 * OutOfPlaneSite<br>
	 * Original signature : <code>OpenMM_OutOfPlaneSite* OpenMM_OutOfPlaneSite_create(int, int, int, double, double, double)</code>
	 */
	PointerByReference OpenMM_OutOfPlaneSite_create(int particle1, int particle2, int particle3, double weight12, double weight13, double weightCross);
	/**
	 * Original signature : <code>void OpenMM_OutOfPlaneSite_destroy(OpenMM_OutOfPlaneSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_OutOfPlaneSite_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_OutOfPlaneSite_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_OutOfPlaneSite_destroy(OpenMM_OutOfPlaneSite*)</code> */
	void OpenMM_OutOfPlaneSite_destroy(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_OutOfPlaneSite_getWeight12(const OpenMM_OutOfPlaneSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_OutOfPlaneSite_getWeight12(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_OutOfPlaneSite_getWeight12(Pointer target);
	/** Original signature : <code>double OpenMM_OutOfPlaneSite_getWeight12(const OpenMM_OutOfPlaneSite*)</code> */
	double OpenMM_OutOfPlaneSite_getWeight12(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_OutOfPlaneSite_getWeight13(const OpenMM_OutOfPlaneSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_OutOfPlaneSite_getWeight13(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_OutOfPlaneSite_getWeight13(Pointer target);
	/** Original signature : <code>double OpenMM_OutOfPlaneSite_getWeight13(const OpenMM_OutOfPlaneSite*)</code> */
	double OpenMM_OutOfPlaneSite_getWeight13(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_OutOfPlaneSite_getWeightCross(const OpenMM_OutOfPlaneSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_OutOfPlaneSite_getWeightCross(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_OutOfPlaneSite_getWeightCross(Pointer target);
	/** Original signature : <code>double OpenMM_OutOfPlaneSite_getWeightCross(const OpenMM_OutOfPlaneSite*)</code> */
	double OpenMM_OutOfPlaneSite_getWeightCross(PointerByReference target);
	/**
	 * PeriodicTorsionForce<br>
	 * Original signature : <code>OpenMM_PeriodicTorsionForce* OpenMM_PeriodicTorsionForce_create()</code>
	 */
	PointerByReference OpenMM_PeriodicTorsionForce_create();
	/**
	 * Original signature : <code>void OpenMM_PeriodicTorsionForce_destroy(OpenMM_PeriodicTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_PeriodicTorsionForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_PeriodicTorsionForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_PeriodicTorsionForce_destroy(OpenMM_PeriodicTorsionForce*)</code> */
	void OpenMM_PeriodicTorsionForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_PeriodicTorsionForce_getNumTorsions(const OpenMM_PeriodicTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_PeriodicTorsionForce_getNumTorsions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_PeriodicTorsionForce_getNumTorsions(Pointer target);
	/** Original signature : <code>int OpenMM_PeriodicTorsionForce_getNumTorsions(const OpenMM_PeriodicTorsionForce*)</code> */
	int OpenMM_PeriodicTorsionForce_getNumTorsions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_PeriodicTorsionForce_addTorsion(OpenMM_PeriodicTorsionForce*, int, int, int, int, int, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_PeriodicTorsionForce_addTorsion(com.sun.jna.ptr.PointerByReference, int, int, int, int, int, double, double)} instead
	 */
	@Deprecated 
	int OpenMM_PeriodicTorsionForce_addTorsion(Pointer target, int particle1, int particle2, int particle3, int particle4, int periodicity, double phase, double k);
	/** Original signature : <code>int OpenMM_PeriodicTorsionForce_addTorsion(OpenMM_PeriodicTorsionForce*, int, int, int, int, int, double, double)</code> */
	int OpenMM_PeriodicTorsionForce_addTorsion(PointerByReference target, int particle1, int particle2, int particle3, int particle4, int periodicity, double phase, double k);
	/**
	 * Original signature : <code>void OpenMM_PeriodicTorsionForce_getTorsionParameters(const OpenMM_PeriodicTorsionForce*, int, int*, int*, int*, int*, int*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_PeriodicTorsionForce_getTorsionParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_PeriodicTorsionForce_getTorsionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_PeriodicTorsionForce_getTorsionParameters(Pointer target, int index, IntByReference particle1, IntByReference particle2, IntByReference particle3, IntByReference particle4, IntByReference periodicity, DoubleByReference phase, DoubleByReference k);
	/** Original signature : <code>void OpenMM_PeriodicTorsionForce_getTorsionParameters(const OpenMM_PeriodicTorsionForce*, int, int*, int*, int*, int*, int*, double*, double*)</code> */
	void OpenMM_PeriodicTorsionForce_getTorsionParameters(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2, IntBuffer particle3, IntBuffer particle4, IntBuffer periodicity, DoubleBuffer phase, DoubleBuffer k);
	/** Original signature : <code>void OpenMM_PeriodicTorsionForce_getTorsionParameters(const OpenMM_PeriodicTorsionForce*, int, int*, int*, int*, int*, int*, double*, double*)</code> */
	void OpenMM_PeriodicTorsionForce_getTorsionParameters(PointerByReference target, int index, IntByReference particle1, IntByReference particle2, IntByReference particle3, IntByReference particle4, IntByReference periodicity, DoubleByReference phase, DoubleByReference k);
	/**
	 * Original signature : <code>void OpenMM_PeriodicTorsionForce_setTorsionParameters(OpenMM_PeriodicTorsionForce*, int, int, int, int, int, int, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_PeriodicTorsionForce_setTorsionParameters(com.sun.jna.ptr.PointerByReference, int, int, int, int, int, int, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_PeriodicTorsionForce_setTorsionParameters(Pointer target, int index, int particle1, int particle2, int particle3, int particle4, int periodicity, double phase, double k);
	/** Original signature : <code>void OpenMM_PeriodicTorsionForce_setTorsionParameters(OpenMM_PeriodicTorsionForce*, int, int, int, int, int, int, double, double)</code> */
	void OpenMM_PeriodicTorsionForce_setTorsionParameters(PointerByReference target, int index, int particle1, int particle2, int particle3, int particle4, int periodicity, double phase, double k);
	/**
	 * Original signature : <code>void OpenMM_PeriodicTorsionForce_updateParametersInContext(OpenMM_PeriodicTorsionForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_PeriodicTorsionForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_PeriodicTorsionForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_PeriodicTorsionForce_updateParametersInContext(OpenMM_PeriodicTorsionForce*, OpenMM_Context*)</code> */
	void OpenMM_PeriodicTorsionForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>void OpenMM_PeriodicTorsionForce_setUsesPeriodicBoundaryConditions(OpenMM_PeriodicTorsionForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_PeriodicTorsionForce_setUsesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_PeriodicTorsionForce_setUsesPeriodicBoundaryConditions(Pointer target, int periodic);
	/** Original signature : <code>void OpenMM_PeriodicTorsionForce_setUsesPeriodicBoundaryConditions(OpenMM_PeriodicTorsionForce*, OpenMM_Boolean)</code> */
	void OpenMM_PeriodicTorsionForce_setUsesPeriodicBoundaryConditions(PointerByReference target, int periodic);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_PeriodicTorsionForce_usesPeriodicBoundaryConditions(const OpenMM_PeriodicTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_PeriodicTorsionForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_PeriodicTorsionForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_PeriodicTorsionForce_usesPeriodicBoundaryConditions(const OpenMM_PeriodicTorsionForce*)</code> */
	int OpenMM_PeriodicTorsionForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * Platform<br>
	 * Original signature : <code>void OpenMM_Platform_destroy(OpenMM_Platform*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Platform_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Platform_destroy(Pointer target);
	/**
	 * Platform<br>
	 * Original signature : <code>void OpenMM_Platform_destroy(OpenMM_Platform*)</code>
	 */
	void OpenMM_Platform_destroy(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_Platform_registerPlatform(OpenMM_Platform*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Platform_registerPlatform(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_Platform_registerPlatform(Pointer platform);
	/** Original signature : <code>void OpenMM_Platform_registerPlatform(OpenMM_Platform*)</code> */
	void OpenMM_Platform_registerPlatform(PointerByReference platform);
	/** Original signature : <code>int OpenMM_Platform_getNumPlatforms()</code> */
	int OpenMM_Platform_getNumPlatforms();
	/** Original signature : <code>OpenMM_Platform* OpenMM_Platform_getPlatform(int)</code> */
	PointerByReference OpenMM_Platform_getPlatform(int index);
	/**
	 * Original signature : <code>OpenMM_Platform* OpenMM_Platform_getPlatformByName(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Platform_getPlatformByName(java.lang.String)} and {@link #OpenMM_Platform_getPlatformByName(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Platform_getPlatformByName(Pointer name);
	/** Original signature : <code>OpenMM_Platform* OpenMM_Platform_getPlatformByName(const char*)</code> */
	PointerByReference OpenMM_Platform_getPlatformByName(String name);
	/**
	 * Original signature : <code>OpenMM_Platform* OpenMM_Platform_findPlatform(const OpenMM_StringArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Platform_findPlatform(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Platform_findPlatform(Pointer kernelNames);
	/** Original signature : <code>OpenMM_Platform* OpenMM_Platform_findPlatform(const OpenMM_StringArray*)</code> */
	PointerByReference OpenMM_Platform_findPlatform(PointerByReference kernelNames);
	/**
	 * Original signature : <code>void OpenMM_Platform_loadPluginLibrary(const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Platform_loadPluginLibrary(java.lang.String)} and {@link #OpenMM_Platform_loadPluginLibrary(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_Platform_loadPluginLibrary(Pointer file);
	/** Original signature : <code>void OpenMM_Platform_loadPluginLibrary(const char*)</code> */
	void OpenMM_Platform_loadPluginLibrary(String file);
	/** Original signature : <code>char* OpenMM_Platform_getDefaultPluginsDirectory()</code> */
	Pointer OpenMM_Platform_getDefaultPluginsDirectory();
	/** Original signature : <code>char* OpenMM_Platform_getOpenMMVersion()</code> */
	Pointer OpenMM_Platform_getOpenMMVersion();
	/**
	 * Original signature : <code>char* OpenMM_Platform_getName(const OpenMM_Platform*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Platform_getName(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer OpenMM_Platform_getName(Pointer target);
	/** Original signature : <code>char* OpenMM_Platform_getName(const OpenMM_Platform*)</code> */
	Pointer OpenMM_Platform_getName(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_Platform_getSpeed(const OpenMM_Platform*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Platform_getSpeed(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_Platform_getSpeed(Pointer target);
	/** Original signature : <code>double OpenMM_Platform_getSpeed(const OpenMM_Platform*)</code> */
	double OpenMM_Platform_getSpeed(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_Platform_supportsDoublePrecision(const OpenMM_Platform*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Platform_supportsDoublePrecision(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_Platform_supportsDoublePrecision(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_Platform_supportsDoublePrecision(const OpenMM_Platform*)</code> */
	int OpenMM_Platform_supportsDoublePrecision(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_StringArray* OpenMM_Platform_getPropertyNames(const OpenMM_Platform*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Platform_getPropertyNames(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_Platform_getPropertyNames(Pointer target);
	/** Original signature : <code>OpenMM_StringArray* OpenMM_Platform_getPropertyNames(const OpenMM_Platform*)</code> */
	PointerByReference OpenMM_Platform_getPropertyNames(PointerByReference target);
	/**
	 * Original signature : <code>char* OpenMM_Platform_getPropertyValue(const OpenMM_Platform*, const OpenMM_Context*, __declspec(property) const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Platform_getPropertyValue(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, byte[])} and {@link #OpenMM_Platform_getPropertyValue(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer OpenMM_Platform_getPropertyValue(Pointer target, Pointer context, Pointer charPtr1);
	/** Original signature : <code>char* OpenMM_Platform_getPropertyValue(const OpenMM_Platform*, const OpenMM_Context*, __declspec(property) const char*)</code> */
	Pointer OpenMM_Platform_getPropertyValue(PointerByReference target, PointerByReference context, byte charPtr1[]);
	/** Original signature : <code>char* OpenMM_Platform_getPropertyValue(const OpenMM_Platform*, const OpenMM_Context*, __declspec(property) const char*)</code> */
	Pointer OpenMM_Platform_getPropertyValue(PointerByReference target, PointerByReference context, Pointer charPtr1);
	/**
	 * Original signature : <code>void OpenMM_Platform_setPropertyValue(const OpenMM_Platform*, OpenMM_Context*, __declspec(property) const char*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Platform_setPropertyValue(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, byte[], java.lang.String)} and {@link #OpenMM_Platform_setPropertyValue(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_Platform_setPropertyValue(Pointer target, Pointer context, Pointer charPtr1, Pointer value);
	/** Original signature : <code>void OpenMM_Platform_setPropertyValue(const OpenMM_Platform*, OpenMM_Context*, __declspec(property) const char*, const char*)</code> */
	void OpenMM_Platform_setPropertyValue(PointerByReference target, PointerByReference context, byte charPtr1[], String value);
	/** Original signature : <code>void OpenMM_Platform_setPropertyValue(const OpenMM_Platform*, OpenMM_Context*, __declspec(property) const char*, const char*)</code> */
	void OpenMM_Platform_setPropertyValue(PointerByReference target, PointerByReference context, Pointer charPtr1, Pointer value);
	/**
	 * Original signature : <code>char* OpenMM_Platform_getPropertyDefaultValue(const OpenMM_Platform*, __declspec(property) const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Platform_getPropertyDefaultValue(com.sun.jna.ptr.PointerByReference, byte[])} and {@link #OpenMM_Platform_getPropertyDefaultValue(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer OpenMM_Platform_getPropertyDefaultValue(Pointer target, Pointer charPtr1);
	/** Original signature : <code>char* OpenMM_Platform_getPropertyDefaultValue(const OpenMM_Platform*, __declspec(property) const char*)</code> */
	Pointer OpenMM_Platform_getPropertyDefaultValue(PointerByReference target, byte charPtr1[]);
	/** Original signature : <code>char* OpenMM_Platform_getPropertyDefaultValue(const OpenMM_Platform*, __declspec(property) const char*)</code> */
	Pointer OpenMM_Platform_getPropertyDefaultValue(PointerByReference target, Pointer charPtr1);
	/**
	 * Original signature : <code>void OpenMM_Platform_setPropertyDefaultValue(OpenMM_Platform*, __declspec(property) const char*, const char*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_Platform_setPropertyDefaultValue(com.sun.jna.ptr.PointerByReference, byte[], java.lang.String)} and {@link #OpenMM_Platform_setPropertyDefaultValue(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void OpenMM_Platform_setPropertyDefaultValue(Pointer target, Pointer charPtr1, Pointer value);
	/** Original signature : <code>void OpenMM_Platform_setPropertyDefaultValue(OpenMM_Platform*, __declspec(property) const char*, const char*)</code> */
	void OpenMM_Platform_setPropertyDefaultValue(PointerByReference target, byte charPtr1[], String value);
	/** Original signature : <code>void OpenMM_Platform_setPropertyDefaultValue(OpenMM_Platform*, __declspec(property) const char*, const char*)</code> */
	void OpenMM_Platform_setPropertyDefaultValue(PointerByReference target, Pointer charPtr1, Pointer value);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_Platform_supportsKernels(const OpenMM_Platform*, const OpenMM_StringArray*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_Platform_supportsKernels(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_Platform_supportsKernels(Pointer target, Pointer kernelNames);
	/** Original signature : <code>OpenMM_Boolean OpenMM_Platform_supportsKernels(const OpenMM_Platform*, const OpenMM_StringArray*)</code> */
	int OpenMM_Platform_supportsKernels(PointerByReference target, PointerByReference kernelNames);
	/**
	 * RBTorsionForce<br>
	 * Original signature : <code>OpenMM_RBTorsionForce* OpenMM_RBTorsionForce_create()</code>
	 */
	PointerByReference OpenMM_RBTorsionForce_create();
	/**
	 * Original signature : <code>void OpenMM_RBTorsionForce_destroy(OpenMM_RBTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_RBTorsionForce_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_RBTorsionForce_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_RBTorsionForce_destroy(OpenMM_RBTorsionForce*)</code> */
	void OpenMM_RBTorsionForce_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_RBTorsionForce_getNumTorsions(const OpenMM_RBTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_RBTorsionForce_getNumTorsions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_RBTorsionForce_getNumTorsions(Pointer target);
	/** Original signature : <code>int OpenMM_RBTorsionForce_getNumTorsions(const OpenMM_RBTorsionForce*)</code> */
	int OpenMM_RBTorsionForce_getNumTorsions(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_RBTorsionForce_addTorsion(OpenMM_RBTorsionForce*, int, int, int, int, double, double, double, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_RBTorsionForce_addTorsion(com.sun.jna.ptr.PointerByReference, int, int, int, int, double, double, double, double, double, double)} instead
	 */
	@Deprecated 
	int OpenMM_RBTorsionForce_addTorsion(Pointer target, int particle1, int particle2, int particle3, int particle4, double c0, double c1, double c2, double c3, double c4, double c5);
	/** Original signature : <code>int OpenMM_RBTorsionForce_addTorsion(OpenMM_RBTorsionForce*, int, int, int, int, double, double, double, double, double, double)</code> */
	int OpenMM_RBTorsionForce_addTorsion(PointerByReference target, int particle1, int particle2, int particle3, int particle4, double c0, double c1, double c2, double c3, double c4, double c5);
	/**
	 * Original signature : <code>void OpenMM_RBTorsionForce_getTorsionParameters(const OpenMM_RBTorsionForce*, int, int*, int*, int*, int*, double*, double*, double*, double*, double*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_RBTorsionForce_getTorsionParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_RBTorsionForce_getTorsionParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_RBTorsionForce_getTorsionParameters(Pointer target, int index, IntByReference particle1, IntByReference particle2, IntByReference particle3, IntByReference particle4, DoubleByReference c0, DoubleByReference c1, DoubleByReference c2, DoubleByReference c3, DoubleByReference c4, DoubleByReference c5);
	/** Original signature : <code>void OpenMM_RBTorsionForce_getTorsionParameters(const OpenMM_RBTorsionForce*, int, int*, int*, int*, int*, double*, double*, double*, double*, double*, double*)</code> */
	void OpenMM_RBTorsionForce_getTorsionParameters(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2, IntBuffer particle3, IntBuffer particle4, DoubleBuffer c0, DoubleBuffer c1, DoubleBuffer c2, DoubleBuffer c3, DoubleBuffer c4, DoubleBuffer c5);
	/** Original signature : <code>void OpenMM_RBTorsionForce_getTorsionParameters(const OpenMM_RBTorsionForce*, int, int*, int*, int*, int*, double*, double*, double*, double*, double*, double*)</code> */
	void OpenMM_RBTorsionForce_getTorsionParameters(PointerByReference target, int index, IntByReference particle1, IntByReference particle2, IntByReference particle3, IntByReference particle4, DoubleByReference c0, DoubleByReference c1, DoubleByReference c2, DoubleByReference c3, DoubleByReference c4, DoubleByReference c5);
	/**
	 * Original signature : <code>void OpenMM_RBTorsionForce_setTorsionParameters(OpenMM_RBTorsionForce*, int, int, int, int, int, double, double, double, double, double, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_RBTorsionForce_setTorsionParameters(com.sun.jna.ptr.PointerByReference, int, int, int, int, int, double, double, double, double, double, double)} instead
	 */
	@Deprecated 
	void OpenMM_RBTorsionForce_setTorsionParameters(Pointer target, int index, int particle1, int particle2, int particle3, int particle4, double c0, double c1, double c2, double c3, double c4, double c5);
	/** Original signature : <code>void OpenMM_RBTorsionForce_setTorsionParameters(OpenMM_RBTorsionForce*, int, int, int, int, int, double, double, double, double, double, double)</code> */
	void OpenMM_RBTorsionForce_setTorsionParameters(PointerByReference target, int index, int particle1, int particle2, int particle3, int particle4, double c0, double c1, double c2, double c3, double c4, double c5);
	/**
	 * Original signature : <code>void OpenMM_RBTorsionForce_updateParametersInContext(OpenMM_RBTorsionForce*, OpenMM_Context*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_RBTorsionForce_updateParametersInContext(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_RBTorsionForce_updateParametersInContext(Pointer target, Pointer context);
	/** Original signature : <code>void OpenMM_RBTorsionForce_updateParametersInContext(OpenMM_RBTorsionForce*, OpenMM_Context*)</code> */
	void OpenMM_RBTorsionForce_updateParametersInContext(PointerByReference target, PointerByReference context);
	/**
	 * Original signature : <code>void OpenMM_RBTorsionForce_setUsesPeriodicBoundaryConditions(OpenMM_RBTorsionForce*, OpenMM_Boolean)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_RBTorsionForce_setUsesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_RBTorsionForce_setUsesPeriodicBoundaryConditions(Pointer target, int periodic);
	/** Original signature : <code>void OpenMM_RBTorsionForce_setUsesPeriodicBoundaryConditions(OpenMM_RBTorsionForce*, OpenMM_Boolean)</code> */
	void OpenMM_RBTorsionForce_setUsesPeriodicBoundaryConditions(PointerByReference target, int periodic);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_RBTorsionForce_usesPeriodicBoundaryConditions(const OpenMM_RBTorsionForce*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_RBTorsionForce_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_RBTorsionForce_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_RBTorsionForce_usesPeriodicBoundaryConditions(const OpenMM_RBTorsionForce*)</code> */
	int OpenMM_RBTorsionForce_usesPeriodicBoundaryConditions(PointerByReference target);
	/** Original signature : <code>OpenMM_State* OpenMM_State_create()</code> */
	PointerByReference OpenMM_State_create();
	/**
	 * Original signature : <code>void OpenMM_State_destroy(OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_State_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_State_destroy(OpenMM_State*)</code> */
	void OpenMM_State_destroy(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_State_getTime(const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_getTime(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_State_getTime(Pointer target);
	/** Original signature : <code>double OpenMM_State_getTime(const OpenMM_State*)</code> */
	double OpenMM_State_getTime(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Vec3Array* OpenMM_State_getPositions(const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_getPositions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_State_getPositions(Pointer target);
	/** Original signature : <code>OpenMM_Vec3Array* OpenMM_State_getPositions(const OpenMM_State*)</code> */
	PointerByReference OpenMM_State_getPositions(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Vec3Array* OpenMM_State_getVelocities(const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_getVelocities(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_State_getVelocities(Pointer target);
	/** Original signature : <code>OpenMM_Vec3Array* OpenMM_State_getVelocities(const OpenMM_State*)</code> */
	PointerByReference OpenMM_State_getVelocities(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Vec3Array* OpenMM_State_getForces(const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_getForces(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_State_getForces(Pointer target);
	/** Original signature : <code>OpenMM_Vec3Array* OpenMM_State_getForces(const OpenMM_State*)</code> */
	PointerByReference OpenMM_State_getForces(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_State_getKineticEnergy(const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_getKineticEnergy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_State_getKineticEnergy(Pointer target);
	/** Original signature : <code>double OpenMM_State_getKineticEnergy(const OpenMM_State*)</code> */
	double OpenMM_State_getKineticEnergy(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_State_getPotentialEnergy(const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_getPotentialEnergy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_State_getPotentialEnergy(Pointer target);
	/** Original signature : <code>double OpenMM_State_getPotentialEnergy(const OpenMM_State*)</code> */
	double OpenMM_State_getPotentialEnergy(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_State_getPeriodicBoxVectors(const OpenMM_State*, OpenMM_Vec3*, OpenMM_Vec3*, OpenMM_Vec3*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_getPeriodicBoxVectors(com.sun.jna.ptr.PointerByReference, simtk.openmm.OpenMM_Vec3, simtk.openmm.OpenMM_Vec3, simtk.openmm.OpenMM_Vec3)} instead
	 */
	@Deprecated 
	void OpenMM_State_getPeriodicBoxVectors(Pointer target, OpenMM_Vec3 a, OpenMM_Vec3 b, OpenMM_Vec3 c);
	/** Original signature : <code>void OpenMM_State_getPeriodicBoxVectors(const OpenMM_State*, OpenMM_Vec3*, OpenMM_Vec3*, OpenMM_Vec3*)</code> */
	void OpenMM_State_getPeriodicBoxVectors(PointerByReference target, OpenMM_Vec3 a, OpenMM_Vec3 b, OpenMM_Vec3 c);
	/**
	 * Original signature : <code>double OpenMM_State_getPeriodicBoxVolume(const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_getPeriodicBoxVolume(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_State_getPeriodicBoxVolume(Pointer target);
	/** Original signature : <code>double OpenMM_State_getPeriodicBoxVolume(const OpenMM_State*)</code> */
	double OpenMM_State_getPeriodicBoxVolume(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_ParameterArray* OpenMM_State_getParameters(const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_getParameters(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_State_getParameters(Pointer target);
	/** Original signature : <code>OpenMM_ParameterArray* OpenMM_State_getParameters(const OpenMM_State*)</code> */
	PointerByReference OpenMM_State_getParameters(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_ParameterArray* OpenMM_State_getEnergyParameterDerivatives(const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_getEnergyParameterDerivatives(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_State_getEnergyParameterDerivatives(Pointer target);
	/** Original signature : <code>OpenMM_ParameterArray* OpenMM_State_getEnergyParameterDerivatives(const OpenMM_State*)</code> */
	PointerByReference OpenMM_State_getEnergyParameterDerivatives(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_State_getDataTypes(const OpenMM_State*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_State_getDataTypes(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_State_getDataTypes(Pointer target);
	/** Original signature : <code>int OpenMM_State_getDataTypes(const OpenMM_State*)</code> */
	int OpenMM_State_getDataTypes(PointerByReference target);
	/**
	 * System<br>
	 * Original signature : <code>OpenMM_System* OpenMM_System_create()</code>
	 */
	PointerByReference OpenMM_System_create();
	/**
	 * Original signature : <code>void OpenMM_System_destroy(OpenMM_System*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_System_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_System_destroy(OpenMM_System*)</code> */
	void OpenMM_System_destroy(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_System_getNumParticles(const OpenMM_System*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_getNumParticles(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_System_getNumParticles(Pointer target);
	/** Original signature : <code>int OpenMM_System_getNumParticles(const OpenMM_System*)</code> */
	int OpenMM_System_getNumParticles(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_System_addParticle(OpenMM_System*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_addParticle(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	int OpenMM_System_addParticle(Pointer target, double mass);
	/** Original signature : <code>int OpenMM_System_addParticle(OpenMM_System*, double)</code> */
	int OpenMM_System_addParticle(PointerByReference target, double mass);
	/**
	 * Original signature : <code>double OpenMM_System_getParticleMass(const OpenMM_System*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_getParticleMass(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_System_getParticleMass(Pointer target, int index);
	/** Original signature : <code>double OpenMM_System_getParticleMass(const OpenMM_System*, int)</code> */
	double OpenMM_System_getParticleMass(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_System_setParticleMass(OpenMM_System*, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_setParticleMass(com.sun.jna.ptr.PointerByReference, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_System_setParticleMass(Pointer target, int index, double mass);
	/** Original signature : <code>void OpenMM_System_setParticleMass(OpenMM_System*, int, double)</code> */
	void OpenMM_System_setParticleMass(PointerByReference target, int index, double mass);
	/**
	 * Original signature : <code>void OpenMM_System_setVirtualSite(OpenMM_System*, int, OpenMM_VirtualSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_setVirtualSite(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_System_setVirtualSite(Pointer target, int index, Pointer virtualSite);
	/** Original signature : <code>void OpenMM_System_setVirtualSite(OpenMM_System*, int, OpenMM_VirtualSite*)</code> */
	void OpenMM_System_setVirtualSite(PointerByReference target, int index, PointerByReference virtualSite);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_System_isVirtualSite(const OpenMM_System*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_isVirtualSite(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int OpenMM_System_isVirtualSite(Pointer target, int index);
	/** Original signature : <code>OpenMM_Boolean OpenMM_System_isVirtualSite(const OpenMM_System*, int)</code> */
	int OpenMM_System_isVirtualSite(PointerByReference target, int index);
	/**
	 * Original signature : <code>OpenMM_VirtualSite* OpenMM_System_getVirtualSite(const OpenMM_System*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_getVirtualSite(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_System_getVirtualSite(Pointer target, int index);
	/** Original signature : <code>OpenMM_VirtualSite* OpenMM_System_getVirtualSite(const OpenMM_System*, int)</code> */
	PointerByReference OpenMM_System_getVirtualSite(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_System_getNumConstraints(const OpenMM_System*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_getNumConstraints(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_System_getNumConstraints(Pointer target);
	/** Original signature : <code>int OpenMM_System_getNumConstraints(const OpenMM_System*)</code> */
	int OpenMM_System_getNumConstraints(PointerByReference target);
	/**
	 * Original signature : <code>int OpenMM_System_addConstraint(OpenMM_System*, int, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_addConstraint(com.sun.jna.ptr.PointerByReference, int, int, double)} instead
	 */
	@Deprecated 
	int OpenMM_System_addConstraint(Pointer target, int particle1, int particle2, double distance);
	/** Original signature : <code>int OpenMM_System_addConstraint(OpenMM_System*, int, int, double)</code> */
	int OpenMM_System_addConstraint(PointerByReference target, int particle1, int particle2, double distance);
	/**
	 * Original signature : <code>void OpenMM_System_getConstraintParameters(const OpenMM_System*, int, int*, int*, double*)</code><br>
	 * @deprecated use the safer methods {@link #OpenMM_System_getConstraintParameters(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.DoubleBuffer)} and {@link #OpenMM_System_getConstraintParameters(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	void OpenMM_System_getConstraintParameters(Pointer target, int index, IntByReference particle1, IntByReference particle2, DoubleByReference distance);
	/** Original signature : <code>void OpenMM_System_getConstraintParameters(const OpenMM_System*, int, int*, int*, double*)</code> */
	void OpenMM_System_getConstraintParameters(PointerByReference target, int index, IntBuffer particle1, IntBuffer particle2, DoubleBuffer distance);
	/** Original signature : <code>void OpenMM_System_getConstraintParameters(const OpenMM_System*, int, int*, int*, double*)</code> */
	void OpenMM_System_getConstraintParameters(PointerByReference target, int index, IntByReference particle1, IntByReference particle2, DoubleByReference distance);
	/**
	 * Original signature : <code>void OpenMM_System_setConstraintParameters(OpenMM_System*, int, int, int, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_setConstraintParameters(com.sun.jna.ptr.PointerByReference, int, int, int, double)} instead
	 */
	@Deprecated 
	void OpenMM_System_setConstraintParameters(Pointer target, int index, int particle1, int particle2, double distance);
	/** Original signature : <code>void OpenMM_System_setConstraintParameters(OpenMM_System*, int, int, int, double)</code> */
	void OpenMM_System_setConstraintParameters(PointerByReference target, int index, int particle1, int particle2, double distance);
	/**
	 * Original signature : <code>void OpenMM_System_removeConstraint(OpenMM_System*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_removeConstraint(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_System_removeConstraint(Pointer target, int index);
	/** Original signature : <code>void OpenMM_System_removeConstraint(OpenMM_System*, int)</code> */
	void OpenMM_System_removeConstraint(PointerByReference target, int index);
	/**
	 * Original signature : <code>int OpenMM_System_addForce(OpenMM_System*, OpenMM_Force*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_addForce(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_System_addForce(Pointer target, Pointer force);
	/** Original signature : <code>int OpenMM_System_addForce(OpenMM_System*, OpenMM_Force*)</code> */
	int OpenMM_System_addForce(PointerByReference target, PointerByReference force);
	/**
	 * Original signature : <code>int OpenMM_System_getNumForces(const OpenMM_System*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_getNumForces(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_System_getNumForces(Pointer target);
	/** Original signature : <code>int OpenMM_System_getNumForces(const OpenMM_System*)</code> */
	int OpenMM_System_getNumForces(PointerByReference target);
	/**
	 * Original signature : <code>OpenMM_Force* OpenMM_System_getForce(OpenMM_System*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_getForce(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	PointerByReference OpenMM_System_getForce(Pointer target, int index);
	/** Original signature : <code>OpenMM_Force* OpenMM_System_getForce(OpenMM_System*, int)</code> */
	PointerByReference OpenMM_System_getForce(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_System_removeForce(OpenMM_System*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_removeForce(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_System_removeForce(Pointer target, int index);
	/** Original signature : <code>void OpenMM_System_removeForce(OpenMM_System*, int)</code> */
	void OpenMM_System_removeForce(PointerByReference target, int index);
	/**
	 * Original signature : <code>void OpenMM_System_getDefaultPeriodicBoxVectors(const OpenMM_System*, OpenMM_Vec3*, OpenMM_Vec3*, OpenMM_Vec3*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_getDefaultPeriodicBoxVectors(com.sun.jna.ptr.PointerByReference, simtk.openmm.OpenMM_Vec3, simtk.openmm.OpenMM_Vec3, simtk.openmm.OpenMM_Vec3)} instead
	 */
	@Deprecated 
	void OpenMM_System_getDefaultPeriodicBoxVectors(Pointer target, OpenMM_Vec3 a, OpenMM_Vec3 b, OpenMM_Vec3 c);
	/** Original signature : <code>void OpenMM_System_getDefaultPeriodicBoxVectors(const OpenMM_System*, OpenMM_Vec3*, OpenMM_Vec3*, OpenMM_Vec3*)</code> */
	void OpenMM_System_getDefaultPeriodicBoxVectors(PointerByReference target, OpenMM_Vec3 a, OpenMM_Vec3 b, OpenMM_Vec3 c);
	/**
	 * Original signature : <code>void OpenMM_System_setDefaultPeriodicBoxVectors(OpenMM_System*, const OpenMM_Vec3*, const OpenMM_Vec3*, const OpenMM_Vec3*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_setDefaultPeriodicBoxVectors(com.sun.jna.ptr.PointerByReference, simtk.openmm.OpenMM_Vec3, simtk.openmm.OpenMM_Vec3, simtk.openmm.OpenMM_Vec3)} instead
	 */
	@Deprecated 
	void OpenMM_System_setDefaultPeriodicBoxVectors(Pointer target, OpenMM_Vec3 a, OpenMM_Vec3 b, OpenMM_Vec3 c);
	/** Original signature : <code>void OpenMM_System_setDefaultPeriodicBoxVectors(OpenMM_System*, const OpenMM_Vec3*, const OpenMM_Vec3*, const OpenMM_Vec3*)</code> */
	void OpenMM_System_setDefaultPeriodicBoxVectors(PointerByReference target, OpenMM_Vec3 a, OpenMM_Vec3 b, OpenMM_Vec3 c);
	/**
	 * Original signature : <code>OpenMM_Boolean OpenMM_System_usesPeriodicBoundaryConditions(const OpenMM_System*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_System_usesPeriodicBoundaryConditions(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_System_usesPeriodicBoundaryConditions(Pointer target);
	/** Original signature : <code>OpenMM_Boolean OpenMM_System_usesPeriodicBoundaryConditions(const OpenMM_System*)</code> */
	int OpenMM_System_usesPeriodicBoundaryConditions(PointerByReference target);
	/**
	 * ThreeParticleAverageSite<br>
	 * Original signature : <code>OpenMM_ThreeParticleAverageSite* OpenMM_ThreeParticleAverageSite_create(int, int, int, double, double, double)</code>
	 */
	PointerByReference OpenMM_ThreeParticleAverageSite_create(int particle1, int particle2, int particle3, double weight1, double weight2, double weight3);
	/**
	 * Original signature : <code>void OpenMM_ThreeParticleAverageSite_destroy(OpenMM_ThreeParticleAverageSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_ThreeParticleAverageSite_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_ThreeParticleAverageSite_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_ThreeParticleAverageSite_destroy(OpenMM_ThreeParticleAverageSite*)</code> */
	void OpenMM_ThreeParticleAverageSite_destroy(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_ThreeParticleAverageSite_getWeight(const OpenMM_ThreeParticleAverageSite*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_ThreeParticleAverageSite_getWeight(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_ThreeParticleAverageSite_getWeight(Pointer target, int particle);
	/** Original signature : <code>double OpenMM_ThreeParticleAverageSite_getWeight(const OpenMM_ThreeParticleAverageSite*, int)</code> */
	double OpenMM_ThreeParticleAverageSite_getWeight(PointerByReference target, int particle);
	/**
	 * TwoParticleAverageSite<br>
	 * Original signature : <code>OpenMM_TwoParticleAverageSite* OpenMM_TwoParticleAverageSite_create(int, int, double, double)</code>
	 */
	PointerByReference OpenMM_TwoParticleAverageSite_create(int particle1, int particle2, double weight1, double weight2);
	/**
	 * Original signature : <code>void OpenMM_TwoParticleAverageSite_destroy(OpenMM_TwoParticleAverageSite*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_TwoParticleAverageSite_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_TwoParticleAverageSite_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_TwoParticleAverageSite_destroy(OpenMM_TwoParticleAverageSite*)</code> */
	void OpenMM_TwoParticleAverageSite_destroy(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_TwoParticleAverageSite_getWeight(const OpenMM_TwoParticleAverageSite*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_TwoParticleAverageSite_getWeight(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	double OpenMM_TwoParticleAverageSite_getWeight(Pointer target, int particle);
	/** Original signature : <code>double OpenMM_TwoParticleAverageSite_getWeight(const OpenMM_TwoParticleAverageSite*, int)</code> */
	double OpenMM_TwoParticleAverageSite_getWeight(PointerByReference target, int particle);
	/**
	 * VariableLangevinIntegrator<br>
	 * Original signature : <code>OpenMM_VariableLangevinIntegrator* OpenMM_VariableLangevinIntegrator_create(double, double, double)</code>
	 */
	PointerByReference OpenMM_VariableLangevinIntegrator_create(double temperature, double frictionCoeff, double errorTol);
	/**
	 * Original signature : <code>void OpenMM_VariableLangevinIntegrator_destroy(OpenMM_VariableLangevinIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableLangevinIntegrator_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_VariableLangevinIntegrator_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_VariableLangevinIntegrator_destroy(OpenMM_VariableLangevinIntegrator*)</code> */
	void OpenMM_VariableLangevinIntegrator_destroy(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_VariableLangevinIntegrator_getTemperature(const OpenMM_VariableLangevinIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableLangevinIntegrator_getTemperature(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_VariableLangevinIntegrator_getTemperature(Pointer target);
	/** Original signature : <code>double OpenMM_VariableLangevinIntegrator_getTemperature(const OpenMM_VariableLangevinIntegrator*)</code> */
	double OpenMM_VariableLangevinIntegrator_getTemperature(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_VariableLangevinIntegrator_setTemperature(OpenMM_VariableLangevinIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableLangevinIntegrator_setTemperature(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_VariableLangevinIntegrator_setTemperature(Pointer target, double temp);
	/** Original signature : <code>void OpenMM_VariableLangevinIntegrator_setTemperature(OpenMM_VariableLangevinIntegrator*, double)</code> */
	void OpenMM_VariableLangevinIntegrator_setTemperature(PointerByReference target, double temp);
	/**
	 * Original signature : <code>double OpenMM_VariableLangevinIntegrator_getFriction(const OpenMM_VariableLangevinIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableLangevinIntegrator_getFriction(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_VariableLangevinIntegrator_getFriction(Pointer target);
	/** Original signature : <code>double OpenMM_VariableLangevinIntegrator_getFriction(const OpenMM_VariableLangevinIntegrator*)</code> */
	double OpenMM_VariableLangevinIntegrator_getFriction(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_VariableLangevinIntegrator_setFriction(OpenMM_VariableLangevinIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableLangevinIntegrator_setFriction(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_VariableLangevinIntegrator_setFriction(Pointer target, double coeff);
	/** Original signature : <code>void OpenMM_VariableLangevinIntegrator_setFriction(OpenMM_VariableLangevinIntegrator*, double)</code> */
	void OpenMM_VariableLangevinIntegrator_setFriction(PointerByReference target, double coeff);
	/**
	 * Original signature : <code>double OpenMM_VariableLangevinIntegrator_getErrorTolerance(const OpenMM_VariableLangevinIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableLangevinIntegrator_getErrorTolerance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_VariableLangevinIntegrator_getErrorTolerance(Pointer target);
	/** Original signature : <code>double OpenMM_VariableLangevinIntegrator_getErrorTolerance(const OpenMM_VariableLangevinIntegrator*)</code> */
	double OpenMM_VariableLangevinIntegrator_getErrorTolerance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_VariableLangevinIntegrator_setErrorTolerance(OpenMM_VariableLangevinIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableLangevinIntegrator_setErrorTolerance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_VariableLangevinIntegrator_setErrorTolerance(Pointer target, double tol);
	/** Original signature : <code>void OpenMM_VariableLangevinIntegrator_setErrorTolerance(OpenMM_VariableLangevinIntegrator*, double)</code> */
	void OpenMM_VariableLangevinIntegrator_setErrorTolerance(PointerByReference target, double tol);
	/**
	 * Original signature : <code>int OpenMM_VariableLangevinIntegrator_getRandomNumberSeed(const OpenMM_VariableLangevinIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableLangevinIntegrator_getRandomNumberSeed(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int OpenMM_VariableLangevinIntegrator_getRandomNumberSeed(Pointer target);
	/** Original signature : <code>int OpenMM_VariableLangevinIntegrator_getRandomNumberSeed(const OpenMM_VariableLangevinIntegrator*)</code> */
	int OpenMM_VariableLangevinIntegrator_getRandomNumberSeed(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_VariableLangevinIntegrator_setRandomNumberSeed(OpenMM_VariableLangevinIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableLangevinIntegrator_setRandomNumberSeed(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_VariableLangevinIntegrator_setRandomNumberSeed(Pointer target, int seed);
	/** Original signature : <code>void OpenMM_VariableLangevinIntegrator_setRandomNumberSeed(OpenMM_VariableLangevinIntegrator*, int)</code> */
	void OpenMM_VariableLangevinIntegrator_setRandomNumberSeed(PointerByReference target, int seed);
	/**
	 * Original signature : <code>void OpenMM_VariableLangevinIntegrator_step(OpenMM_VariableLangevinIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableLangevinIntegrator_step(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_VariableLangevinIntegrator_step(Pointer target, int steps);
	/** Original signature : <code>void OpenMM_VariableLangevinIntegrator_step(OpenMM_VariableLangevinIntegrator*, int)</code> */
	void OpenMM_VariableLangevinIntegrator_step(PointerByReference target, int steps);
	/**
	 * Original signature : <code>void OpenMM_VariableLangevinIntegrator_stepTo(OpenMM_VariableLangevinIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableLangevinIntegrator_stepTo(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_VariableLangevinIntegrator_stepTo(Pointer target, double time);
	/** Original signature : <code>void OpenMM_VariableLangevinIntegrator_stepTo(OpenMM_VariableLangevinIntegrator*, double)</code> */
	void OpenMM_VariableLangevinIntegrator_stepTo(PointerByReference target, double time);
	/**
	 * VariableVerletIntegrator<br>
	 * Original signature : <code>OpenMM_VariableVerletIntegrator* OpenMM_VariableVerletIntegrator_create(double)</code>
	 */
	PointerByReference OpenMM_VariableVerletIntegrator_create(double errorTol);
	/**
	 * Original signature : <code>void OpenMM_VariableVerletIntegrator_destroy(OpenMM_VariableVerletIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableVerletIntegrator_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_VariableVerletIntegrator_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_VariableVerletIntegrator_destroy(OpenMM_VariableVerletIntegrator*)</code> */
	void OpenMM_VariableVerletIntegrator_destroy(PointerByReference target);
	/**
	 * Original signature : <code>double OpenMM_VariableVerletIntegrator_getErrorTolerance(const OpenMM_VariableVerletIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableVerletIntegrator_getErrorTolerance(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	double OpenMM_VariableVerletIntegrator_getErrorTolerance(Pointer target);
	/** Original signature : <code>double OpenMM_VariableVerletIntegrator_getErrorTolerance(const OpenMM_VariableVerletIntegrator*)</code> */
	double OpenMM_VariableVerletIntegrator_getErrorTolerance(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_VariableVerletIntegrator_setErrorTolerance(OpenMM_VariableVerletIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableVerletIntegrator_setErrorTolerance(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_VariableVerletIntegrator_setErrorTolerance(Pointer target, double tol);
	/** Original signature : <code>void OpenMM_VariableVerletIntegrator_setErrorTolerance(OpenMM_VariableVerletIntegrator*, double)</code> */
	void OpenMM_VariableVerletIntegrator_setErrorTolerance(PointerByReference target, double tol);
	/**
	 * Original signature : <code>void OpenMM_VariableVerletIntegrator_step(OpenMM_VariableVerletIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableVerletIntegrator_step(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_VariableVerletIntegrator_step(Pointer target, int steps);
	/** Original signature : <code>void OpenMM_VariableVerletIntegrator_step(OpenMM_VariableVerletIntegrator*, int)</code> */
	void OpenMM_VariableVerletIntegrator_step(PointerByReference target, int steps);
	/**
	 * Original signature : <code>void OpenMM_VariableVerletIntegrator_stepTo(OpenMM_VariableVerletIntegrator*, double)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VariableVerletIntegrator_stepTo(com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	void OpenMM_VariableVerletIntegrator_stepTo(Pointer target, double time);
	/** Original signature : <code>void OpenMM_VariableVerletIntegrator_stepTo(OpenMM_VariableVerletIntegrator*, double)</code> */
	void OpenMM_VariableVerletIntegrator_stepTo(PointerByReference target, double time);
	/**
	 * VerletIntegrator<br>
	 * Original signature : <code>OpenMM_VerletIntegrator* OpenMM_VerletIntegrator_create(double)</code>
	 */
	PointerByReference OpenMM_VerletIntegrator_create(double stepSize);
	/**
	 * Original signature : <code>void OpenMM_VerletIntegrator_destroy(OpenMM_VerletIntegrator*)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VerletIntegrator_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void OpenMM_VerletIntegrator_destroy(Pointer target);
	/** Original signature : <code>void OpenMM_VerletIntegrator_destroy(OpenMM_VerletIntegrator*)</code> */
	void OpenMM_VerletIntegrator_destroy(PointerByReference target);
	/**
	 * Original signature : <code>void OpenMM_VerletIntegrator_step(OpenMM_VerletIntegrator*, int)</code><br>
	 * @deprecated use the safer method {@link #OpenMM_VerletIntegrator_step(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void OpenMM_VerletIntegrator_step(Pointer target, int steps);
	/** Original signature : <code>void OpenMM_VerletIntegrator_step(OpenMM_VerletIntegrator*, int)</code> */
	void OpenMM_VerletIntegrator_step(PointerByReference target, int steps);
	public static class OpenMM_StringArray extends PointerType {
		public OpenMM_StringArray(Pointer address) {
			super(address);
		}
		public OpenMM_StringArray() {
			super();
		}
	};
	public static class OpenMM_PropertyArray extends PointerType {
		public OpenMM_PropertyArray(Pointer address) {
			super(address);
		}
		public OpenMM_PropertyArray() {
			super();
		}
	};
	public static class OpenMM_Platform extends PointerType {
		public OpenMM_Platform(Pointer address) {
			super(address);
		}
		public OpenMM_Platform() {
			super();
		}
	};
	public static class OpenMM_CompoundIntegrator extends PointerType {
		public OpenMM_CompoundIntegrator(Pointer address) {
			super(address);
		}
		public OpenMM_CompoundIntegrator() {
			super();
		}
	};
	public static class OpenMM_HarmonicBondForce extends PointerType {
		public OpenMM_HarmonicBondForce(Pointer address) {
			super(address);
		}
		public OpenMM_HarmonicBondForce() {
			super();
		}
	};
	public static class OpenMM_OutOfPlaneSite extends PointerType {
		public OpenMM_OutOfPlaneSite(Pointer address) {
			super(address);
		}
		public OpenMM_OutOfPlaneSite() {
			super();
		}
	};
	public static class OpenMM_CustomManyParticleForce extends PointerType {
		public OpenMM_CustomManyParticleForce(Pointer address) {
			super(address);
		}
		public OpenMM_CustomManyParticleForce() {
			super();
		}
	};
	public static class OpenMM_System extends PointerType {
		public OpenMM_System(Pointer address) {
			super(address);
		}
		public OpenMM_System() {
			super();
		}
	};
	public static class OpenMM_Continuous1DFunction extends PointerType {
		public OpenMM_Continuous1DFunction(Pointer address) {
			super(address);
		}
		public OpenMM_Continuous1DFunction() {
			super();
		}
	};
	public static class OpenMM_MonteCarloBarostat extends PointerType {
		public OpenMM_MonteCarloBarostat(Pointer address) {
			super(address);
		}
		public OpenMM_MonteCarloBarostat() {
			super();
		}
	};
	public static class OpenMM_VariableLangevinIntegrator extends PointerType {
		public OpenMM_VariableLangevinIntegrator(Pointer address) {
			super(address);
		}
		public OpenMM_VariableLangevinIntegrator() {
			super();
		}
	};
	public static class OpenMM_VerletIntegrator extends PointerType {
		public OpenMM_VerletIntegrator(Pointer address) {
			super(address);
		}
		public OpenMM_VerletIntegrator() {
			super();
		}
	};
	public static class OpenMM_HarmonicAngleForce extends PointerType {
		public OpenMM_HarmonicAngleForce(Pointer address) {
			super(address);
		}
		public OpenMM_HarmonicAngleForce() {
			super();
		}
	};
	public static class OpenMM_CustomCompoundBondForce extends PointerType {
		public OpenMM_CustomCompoundBondForce(Pointer address) {
			super(address);
		}
		public OpenMM_CustomCompoundBondForce() {
			super();
		}
	};
	public static class OpenMM_RBTorsionForce extends PointerType {
		public OpenMM_RBTorsionForce(Pointer address) {
			super(address);
		}
		public OpenMM_RBTorsionForce() {
			super();
		}
	};
	public static class OpenMM_LocalEnergyMinimizer extends PointerType {
		public OpenMM_LocalEnergyMinimizer(Pointer address) {
			super(address);
		}
		public OpenMM_LocalEnergyMinimizer() {
			super();
		}
	};
	public static class OpenMM_BrownianIntegrator extends PointerType {
		public OpenMM_BrownianIntegrator(Pointer address) {
			super(address);
		}
		public OpenMM_BrownianIntegrator() {
			super();
		}
	};
	public static class OpenMM_VirtualSite extends PointerType {
		public OpenMM_VirtualSite(Pointer address) {
			super(address);
		}
		public OpenMM_VirtualSite() {
			super();
		}
	};
	public static class OpenMM_CustomNonbondedForce extends PointerType {
		public OpenMM_CustomNonbondedForce(Pointer address) {
			super(address);
		}
		public OpenMM_CustomNonbondedForce() {
			super();
		}
	};
	public static class OpenMM_Continuous3DFunction extends PointerType {
		public OpenMM_Continuous3DFunction(Pointer address) {
			super(address);
		}
		public OpenMM_Continuous3DFunction() {
			super();
		}
	};
	public static class OpenMM_MonteCarloMembraneBarostat extends PointerType {
		public OpenMM_MonteCarloMembraneBarostat(Pointer address) {
			super(address);
		}
		public OpenMM_MonteCarloMembraneBarostat() {
			super();
		}
	};
	public static class OpenMM_BondArray extends PointerType {
		public OpenMM_BondArray(Pointer address) {
			super(address);
		}
		public OpenMM_BondArray() {
			super();
		}
	};
	public static class OpenMM_CMAPTorsionForce extends PointerType {
		public OpenMM_CMAPTorsionForce(Pointer address) {
			super(address);
		}
		public OpenMM_CMAPTorsionForce() {
			super();
		}
	};
	public static class OpenMM_LangevinIntegrator extends PointerType {
		public OpenMM_LangevinIntegrator(Pointer address) {
			super(address);
		}
		public OpenMM_LangevinIntegrator() {
			super();
		}
	};
	public static class OpenMM_AndersenThermostat extends PointerType {
		public OpenMM_AndersenThermostat(Pointer address) {
			super(address);
		}
		public OpenMM_AndersenThermostat() {
			super();
		}
	};
	public static class OpenMM_Force extends PointerType {
		public OpenMM_Force(Pointer address) {
			super(address);
		}
		public OpenMM_Force() {
			super();
		}
	};
	public static class OpenMM_Discrete1DFunction extends PointerType {
		public OpenMM_Discrete1DFunction(Pointer address) {
			super(address);
		}
		public OpenMM_Discrete1DFunction() {
			super();
		}
	};
	public static class OpenMM_Integrator extends PointerType {
		public OpenMM_Integrator(Pointer address) {
			super(address);
		}
		public OpenMM_Integrator() {
			super();
		}
	};
	public static class OpenMM_CustomExternalForce extends PointerType {
		public OpenMM_CustomExternalForce(Pointer address) {
			super(address);
		}
		public OpenMM_CustomExternalForce() {
			super();
		}
	};
	public static class OpenMM_CustomAngleForce extends PointerType {
		public OpenMM_CustomAngleForce(Pointer address) {
			super(address);
		}
		public OpenMM_CustomAngleForce() {
			super();
		}
	};
	public static class OpenMM_PeriodicTorsionForce extends PointerType {
		public OpenMM_PeriodicTorsionForce(Pointer address) {
			super(address);
		}
		public OpenMM_PeriodicTorsionForce() {
			super();
		}
	};
	public static class OpenMM_CustomIntegrator extends PointerType {
		public OpenMM_CustomIntegrator(Pointer address) {
			super(address);
		}
		public OpenMM_CustomIntegrator() {
			super();
		}
	};
	public static class OpenMM_NonbondedForce extends PointerType {
		public OpenMM_NonbondedForce(Pointer address) {
			super(address);
		}
		public OpenMM_NonbondedForce() {
			super();
		}
	};
	public static class OpenMM_CMMotionRemover extends PointerType {
		public OpenMM_CMMotionRemover(Pointer address) {
			super(address);
		}
		public OpenMM_CMMotionRemover() {
			super();
		}
	};
	public static class OpenMM_ThreeParticleAverageSite extends PointerType {
		public OpenMM_ThreeParticleAverageSite(Pointer address) {
			super(address);
		}
		public OpenMM_ThreeParticleAverageSite() {
			super();
		}
	};
	public static class OpenMM_MonteCarloAnisotropicBarostat extends PointerType {
		public OpenMM_MonteCarloAnisotropicBarostat(Pointer address) {
			super(address);
		}
		public OpenMM_MonteCarloAnisotropicBarostat() {
			super();
		}
	};
	public static class OpenMM_Discrete2DFunction extends PointerType {
		public OpenMM_Discrete2DFunction(Pointer address) {
			super(address);
		}
		public OpenMM_Discrete2DFunction() {
			super();
		}
	};
	public static class OpenMM_TabulatedFunction extends PointerType {
		public OpenMM_TabulatedFunction(Pointer address) {
			super(address);
		}
		public OpenMM_TabulatedFunction() {
			super();
		}
	};
	public static class OpenMM_Continuous2DFunction extends PointerType {
		public OpenMM_Continuous2DFunction(Pointer address) {
			super(address);
		}
		public OpenMM_Continuous2DFunction() {
			super();
		}
	};
	public static class OpenMM_CustomHbondForce extends PointerType {
		public OpenMM_CustomHbondForce(Pointer address) {
			super(address);
		}
		public OpenMM_CustomHbondForce() {
			super();
		}
	};
	public static class OpenMM_CustomTorsionForce extends PointerType {
		public OpenMM_CustomTorsionForce(Pointer address) {
			super(address);
		}
		public OpenMM_CustomTorsionForce() {
			super();
		}
	};
	public static class OpenMM_GayBerneForce extends PointerType {
		public OpenMM_GayBerneForce(Pointer address) {
			super(address);
		}
		public OpenMM_GayBerneForce() {
			super();
		}
	};
	public static class OpenMM_ParameterArray extends PointerType {
		public OpenMM_ParameterArray(Pointer address) {
			super(address);
		}
		public OpenMM_ParameterArray() {
			super();
		}
	};
	public static class OpenMM_State extends PointerType {
		public OpenMM_State(Pointer address) {
			super(address);
		}
		public OpenMM_State() {
			super();
		}
	};
	public static class OpenMM_CustomGBForce extends PointerType {
		public OpenMM_CustomGBForce(Pointer address) {
			super(address);
		}
		public OpenMM_CustomGBForce() {
			super();
		}
	};
	public static class OpenMM_GBSAOBCForce extends PointerType {
		public OpenMM_GBSAOBCForce(Pointer address) {
			super(address);
		}
		public OpenMM_GBSAOBCForce() {
			super();
		}
	};
	public static class OpenMM_Discrete3DFunction extends PointerType {
		public OpenMM_Discrete3DFunction(Pointer address) {
			super(address);
		}
		public OpenMM_Discrete3DFunction() {
			super();
		}
	};
	public static class OpenMM_IntSet extends PointerType {
		public OpenMM_IntSet(Pointer address) {
			super(address);
		}
		public OpenMM_IntSet() {
			super();
		}
	};
	public static class OpenMM_CustomCentroidBondForce extends PointerType {
		public OpenMM_CustomCentroidBondForce(Pointer address) {
			super(address);
		}
		public OpenMM_CustomCentroidBondForce() {
			super();
		}
	};
	public static class OpenMM_OpenMMException extends PointerType {
		public OpenMM_OpenMMException(Pointer address) {
			super(address);
		}
		public OpenMM_OpenMMException() {
			super();
		}
	};
	public static class OpenMM_CustomBondForce extends PointerType {
		public OpenMM_CustomBondForce(Pointer address) {
			super(address);
		}
		public OpenMM_CustomBondForce() {
			super();
		}
	};
	public static class OpenMM_TwoParticleAverageSite extends PointerType {
		public OpenMM_TwoParticleAverageSite(Pointer address) {
			super(address);
		}
		public OpenMM_TwoParticleAverageSite() {
			super();
		}
	};
	public static class OpenMM_VariableVerletIntegrator extends PointerType {
		public OpenMM_VariableVerletIntegrator(Pointer address) {
			super(address);
		}
		public OpenMM_VariableVerletIntegrator() {
			super();
		}
	};
	public static class OpenMM_LocalCoordinatesSite extends PointerType {
		public OpenMM_LocalCoordinatesSite(Pointer address) {
			super(address);
		}
		public OpenMM_LocalCoordinatesSite() {
			super();
		}
	};
}
